{
    "docs": [
        {
            "location": "/", 
            "text": "Documentation Meteor\n\n\nAdresse de ce projet\n\n\n\n\nUtilisation du mod\u00e8le de projet\n\n\nTests Meteor\n\n\nPlugins\n\n\nIron Router\n\n\nSimple Schema\n\n\nTemplates\n\n\nuseraccounts\n\n\nAuthentification Sociale\n\n\nautoform-semantic-ui\n\n\ncollection-timestampable\n\n\ncollection-softremovable\n\n\nmeteor-collection-helpers\n\n\nmeteor-roles\n\n\nAPI Rest\n\n\nInternationalisation\n\n\npublish-counts\n\n\nS\u00e9curit\u00e9\n\n\nEn cours d'\u00e9valuation\n\n\n\n\n\n\nMongoDB\n\n\nMails\n\n\nApplications\n\n\nE-Commerce\n\n\nCMS\n\n\nSite Communautaire\n\n\n\n\n\n\nTips\n\n\nLiens\n\n\nFaq", 
            "title": "Accueil"
        }, 
        {
            "location": "/#documentation-meteor", 
            "text": "Adresse de ce projet   Utilisation du mod\u00e8le de projet  Tests Meteor  Plugins  Iron Router  Simple Schema  Templates  useraccounts  Authentification Sociale  autoform-semantic-ui  collection-timestampable  collection-softremovable  meteor-collection-helpers  meteor-roles  API Rest  Internationalisation  publish-counts  S\u00e9curit\u00e9  En cours d'\u00e9valuation    MongoDB  Mails  Applications  E-Commerce  CMS  Site Communautaire    Tips  Liens  Faq", 
            "title": "Documentation Meteor"
        }, 
        {
            "location": "/project-structure/", 
            "text": "Structure de Projet Meteor\n\n\nIntroduction\n\n\nIl existe plusieurs types de solution de d\u00e9marrage.\n\n\nOn peut les regrouper dans ces cat\u00e9gories:\n\n\n\n\nStructure de projet\n\n\nhttps://github.com/yogiben/meteor-starter\n\n\nhttps://github.com/Differential/meteor-boilerplate\n\n\n\n\n\n\nG\u00e9n\u00e9rateur de projet\n\n\niron-cli\n\n\nKitchen\n\n\norion-cli\n\n\n\n\n\n\n\n\nPour les solutions de type structure, il suffit en g\u00e9n\u00e9ral de faire un \ngit clone\n. Exemple:\n\n\n$ git clone https://github.com/yogiben/meteor-starter.git myproject\n$ cd myproject\n$ meteor\n\n\n\n\nAttention \u00e0 bien analyser les d\u00e9pendances, les versions et choix d'impl\u00e9mentation des outils.\n\n\n\n\nCertains sont orient\u00e9s Bootstrap ou Semantic-ui et d'autre sont g\u00e9n\u00e9riques, \u00e0 vous de choisir le framework CSS\n\n\nChacun d\u00e9finit sa structure de r\u00e9pertoires\n\n\n\n\nmeteor-starter\n\n\n\n\nhttps://github.com/yogiben/meteor-starter\n\n\nhttp://learn.meteorfactory.io/meteor-starter/\n\n\nhttp://learn.meteorfactory.io/customising-meteor-starter/\n\n\nhttp://starter.meteor.com/\n\n\nhttps://github.com/yogiben/meteor-admin/\n\n\n\n\nIntroduction\n\n\nCette base de projet est une des plus fonctionnelles parmis celles que j'ai test\u00e9.\n\n\nLe seul d\u00e9faut pour moi est l'utilisation du coffeescript que je ne maitrise pas encore mais vous trouverez une solution de conversion en Javascript un peu plus loin.\n\n\nRemarque:\n Il n'y a aucun compte utilisateur au d\u00e9marrage mais le premier utilisateur enregistr\u00e9 deviendra l'administrateur\n\n\nTODO\n\n\n\n\nmanque imagemagik cot\u00e9 nodejs\n\n\nhttps://github.com/CollectionFS/Meteor-cfs-graphicsmagick\n\n\n\n\nFonctionnalit\u00e9s\n\n\n\n\nLe premier user cr\u00e9\u00e9 aura un r\u00f4le admin\n\n\nDockerfile\n\n\ni18n\n\n\ninterface admin: https://github.com/yogiben/meteor-admin/\n\n\nlogin social\n\n\nroles\n\n\ncontrole de la qualit\u00e9 du password\n\n\nMail de r\u00e9cup\u00e9ration de mot de passe avec un lien : http://starter.meteor.com/reset-password/xxxxxxxx\n\n\nExtension du profil user\n\n\nD\u00e9filement continue de la page\n\n\nNotifications\n\n\nConfig dans private/dev.json\n\n\nBootstrap3 en mode less pour personnalisation\n\n\nApplications dans packages/\n\n\nhttp://github.com/yogiben/meteor-comments.git\n\n\nhttp://github.com/yogiben/meteor-favorites.git\n\n\nhttp://github.com/yogiben/meteor-notifications.git\n\n\nuser-thumbs\n\n\nhttp://github.com/yogiben/meteor-bootstrap\n\n\n\n\n\n\n\n\nInstallation\n\n\n$ git clone https://github.com/yogiben/meteor-starter.git myproject\n$ cd myproject\n$ meteor update\n$ MONGO_URL=mongodb://localhost/myproject meteor\n\n\n\n\nPackages install\u00e9s (apr\u00e8s meteor update)\n\n\naccounts-base@1.2.0\naccounts-facebook@1.0.4\naccounts-google@1.0.4\naccounts-oauth@1.1.5\naccounts-password@1.1.1\naccounts-twitter@1.0.4\naccounts-ui@1.1.5\naccounts-ui-unstyled@1.1.7\nalanning:roles@1.2.13\naldeed:autoform@5.3.0\naldeed:collection2@2.3.3\naldeed:simple-schema@1.3.3\naldeed:tabular@1.2.0\naldeed:template-extension@3.4.3\nautoupdate@1.2.1\nbase64@1.0.3\nbinary-heap@1.0.3\nblaze@2.1.2\nblaze-tools@1.0.3\nboilerplate-generator@1.0.3\nbootstrap@0.3.1\ncallback-hook@1.0.3\ncfs:access-point@0.1.49\ncfs:base-package@0.0.30\ncfs:collection@0.5.5\ncfs:collection-filters@0.2.4\ncfs:data-man@0.0.6\ncfs:file@0.1.17\ncfs:graphicsmagick@0.0.18\ncfs:gridfs@0.0.33\ncfs:http-methods@0.0.29\ncfs:http-publish@0.0.13\ncfs:power-queue@0.9.11\ncfs:reactive-list@0.0.9\ncfs:reactive-property@0.0.4\ncfs:standard-packages@0.5.9\ncfs:storage-adapter@0.2.2\ncfs:tempstore@0.1.5\ncfs:upload-http@0.0.20\ncfs:worker@0.1.4\ncheck@1.0.5\ncmather:handlebars-server@2.0.0\ncoffeescript@1.0.6\ncomments@0.1.0\ndburles:collection-helpers@1.0.3\ndburles:google-maps@1.1.1\nddp@1.1.0\ndeps@1.0.7\nejson@1.0.6\nemail@1.0.6\nfacebook@1.2.0\nfastclick@1.0.3\nfavorites@0.0.4\nfortawesome:fontawesome@4.3.0\ngeojson-utils@1.0.3\ngoogle@1.1.5\nhandlebars@1.0.3\nhtml-tools@1.0.4\nhtmljs@1.0.4\nhttp@1.1.0\nid-map@1.0.3\niron:controller@1.0.8\niron:core@1.0.8\niron:dynamic-template@1.0.8\niron:layout@1.0.8\niron:location@1.0.9\niron:middleware-stack@1.0.9\niron:router@1.0.9\niron:url@1.0.9\njparker:crypto-core@0.1.0\njparker:crypto-md5@0.1.1\njparker:gravatar@0.3.1\njquery@1.11.3_2\njson@1.0.3\njuliancwirko:s-alert@2.4.0\njuliancwirko:s-alert-stackslide@1.1.3\nlaunch-screen@1.0.2\nless@1.0.14\nlivedata@1.0.13\nlocalstorage@1.0.3\nlogging@1.0.7\nmanuelschoebel:ms-seo@0.4.1\nmeteor@1.1.6\nmeteor-platform@1.2.2\nmeteorhacks:meteorx@1.0.2\nmeteorhacks:subs-manager@1.4.0\nmeteorhacks:unblock@1.1.0\nmeteorspark:util@0.2.0\nminifiers@1.1.5\nminimongo@1.0.8\nmobile-status-bar@1.0.3\nmomentjs:moment@2.10.3\nmongo@1.1.0\nmongo-livedata@1.0.8\nmpowaga:string-template@0.1.0\nmrt:moment@2.8.1\nmultiply:iron-router-progress@1.0.1\nnatestrauser:animate-css@3.2.6\nnotifications@0.0.7\nnpm-bcrypt@0.7.8_2\noauth@1.1.4\noauth1@1.1.4\noauth2@1.1.3\nobserve-sequence@1.0.6\nordered-dict@1.0.3\npercolate:momentum@0.7.2\npercolate:momentum-iron-router@0.7.0\npercolate:velocityjs@1.1.0\nraix:eventemitter@0.1.2\nraix:handlebar-helpers@0.2.4\nrandom@1.0.3\nreactive-dict@1.1.0\nreactive-var@1.0.5\nreload@1.1.3\nretry@1.0.3\nreywood:publish-composite@1.3.6\nroutepolicy@1.0.5\nservice-configuration@1.0.4\nsession@1.1.0\nsha@1.0.3\nsoftwarerero:accounts-t9n@1.0.9\nspacebars@1.0.6\nspacebars-compiler@1.0.6\nspiderable@1.0.7\nsrp@1.0.3\ntap:i18n@1.5.0\ntemplating@1.1.1\ntimmyg:wow@1.0.1\ntracker@1.0.7\ntsega:skrollr@0.0.2\ntwitter@1.1.4\nui@1.0.6\nunderscore@1.0.3\nunderscorestring:underscore.string@3.0.3_1\nurl@1.0.4\nuser-thumbs@0.0.8\nuseraccounts:bootstrap@1.11.1\nuseraccounts:core@1.11.1\nwebapp@1.2.0\nwebapp-hashing@1.0.3\nyogiben:admin@1.1.2\nyogiben:autoform-file@0.2.7\nyogiben:autoform-map@0.1.3\nyogiben:autoform-modals@0.3.5\nyogiben:helpers@0.0.6\nyogiben:mixpanel@0.0.7\nyogiben:pretty-email@0.0.6\nzimme:iron-router-active@1.0.4\n\n\n\n\nCollection mongodb au d\u00e9marrage\n\n\n$ mongo\n\n use myproject\n\n show collections\nmeteor_accounts_loginServiceConfiguration\nmeteor_oauth_pendingCredentials\nmeteor_oauth_pendingRequestTokens\nroles\nsystem.indexes\nusers\n\n\n\n\nConversion JS\n\n\nPour ceux qui pr\u00e9f\u00e9re travailler en javascript, voici une solution rapide pour convertir les fichiers coffee.\n\n\n\n# Outil de conversion coffeescript -\n javascript\nnpm install -g coffee-script\n\n# Clonez le projet\n$ git clone https://github.com/yogiben/meteor-starter.git myproject\n$ cd myproject\n\n# Cr\u00e9er un fichier .js \u00e0 partir de chaque fichier .coffee\n$ find -name \n*.coffee\n -exec coffee -b --no-header -c {} \\;\n\n# Remplace les .coffee dans package.js\n$ find -name \npackage.js\n -exec sed -i 's/\\.coffee/\\.js/' {} \\;\n\n# Supprimez les .coffee\n$ for i in `find -name \n*.coffee\n`; do rm -f $i; done\n\n\n\n\n\nCustomisation\n\n\n\n\n\n\nCopiez i18n/en.i18n.json dans i18n/fr.i18n.json pour traduction\n\n\n\n\n\n\nmodifiez private/settings/dev.json\n\n\n\n\nSupprimez les entr\u00e9es non utilis\u00e9s comme facebook\n\n\nRemplacez environment pour production\n\n\n\n\n\n\n\n\nPour modifier le css: client/style/bootstrap-variables.less\n\n\n\n\nPour modifier les fonts google : client/style/utils/fonts.import.less\n\n\nPour modifier l'image de l'\u00e9cran d'accueil: client/views/home/home.import.less\n\n\nLes vues/layout sont dans client/views\n\n\nLes collections sont dans collections/*.js\n\n\n\n\nLes routes sont dans lib/_config/router.js et lib/router.*.js\n\n\n\n\n\n\nPour la configuration principale, editez lib/_config/_config.js\n\n\n\n\n\n\nthis.Config = {\n  name: 'My App',\n  title: function() {\n    return TAPi18n.__('configTitle');\n  },\n  subtitle: function() {\n    return TAPi18n.__('configSubtitle');\n  },\n  logo: function() {\n    return '\nb\n' + this.name + '\n/b\n';\n  },\n  footer: function() {\n    return this.name + ' - Copyright ' + new Date().getFullYear();\n  },\n  emails: {\n    from: 'no-reply@' + Meteor.absoluteUrl(),\n    contact: 'hello' + Meteor.absoluteUrl()\n  },\n  username: false,\n  defaultLanguage: 'en',\n  dateFormat: 'D/M/YYYY',\n  privacyUrl: 'http://meteorfactory.io',\n  termsUrl: 'http://meteorfactory.io',\n  legal: {\n    address: 'Jessnerstrasse 18, 12047 Berlin',\n    name: 'Meteor Factory',\n    url: 'http://benjaminpeterjones.com'\n  },\n  about: 'http://meteorfactory.io',\n  blog: 'http://learn.meteorfactory.io',\n  socialMedia: {\n    facebook: {\n      url: 'http://facebook.com/benjaminpeterjones',\n      icon: 'facebook'\n    },\n    twitter: {\n      url: 'http://twitter.com/BenPeterJones',\n      icon: 'twitter'\n    },\n    github: {\n      url: 'http://github.com/yogiben',\n      icon: 'github'\n    },\n    info: {\n      url: 'http://meteorfactory.io',\n      icon: 'link'\n    }\n  },\n  homeRoute: '/',\n  publicRoutes: ['home'],\n  dashboardRoute: '/dashboard'\n};\n\n\n\n\nAjout d'un spinner de chargement\n\n\n$ meteor add sacha:spin\n\n\n\n\nEditez client/shared/loading.html:\n\n\ntemplate name=\nloading\n\n  {{\n spinner}}\n\n/template\n\n\n\n\n\nConfiguration de l'interface d'administration\n\n\n\n\nhttps://github.com/yogiben/meteor-admin/\n\n\n\n\nEditez lib/_config/adminConfig.js\n\n\nConfiguration d'une authentification github\n\n\n\n\nLe lien \u00e0 configurer comme callback sur github est http://YOUR_HOST/_oauth/github\n\n\n\n\n$ meteor add accounts-github\n\n\n\n\nConfiguration dans private/settings/dev.json::\n\n\n    \nserviceConfigurations\n: {\n        \ngithub\n: {\n            \nclientId\n: \nxxx\n,\n            \nsecret\n: \nxxx\n\n        }\n    }\n\n\n\n\nTODO:\n\n\nMeteor.loginWithGithub({\n  requestPermissions: ['user', 'public_repo']\n}, function (err) {\n  if (err)\n    Session.set('errorMessage', err.reason || 'Unknown error');\n});\n\nModifier lib/_config/oauth.js\n  if user.services?.github\n        user.emails = [{address: user.services.github.email, verified: true}]\n        user.profile.firstName = user.services.github.given_name\n        user.profile.lastName = user.services.github.family_name\nif user.services?.github?.id\n  profileImageUrl = user.services.github.picture\n\n   forLoggedInUser: ['services.github'],\n    forOtherUsers: ['services.github.username']\n\n\n\n\n\nD\u00e9veloppement\n\n\n\n\nUtilisation de Config\n\n\n\n\nRead our \na href=\n{{Config.blog}}\nblog\n/a\n\n\nCollections dans /lib/collections/*\n\n\n\n\nTODO - Personnalisation du compte utilisateur\n\n\nTODO - Google Analytics\n\n\nTODO - Ajout de packages\n\n\n\n\nFormulaire de contact\n\n\nAuth social\n\n\nSEO\n\n\nSiteMap\n\n\n\n\niron-cli\n\n\nCr\u00e9ation d'un projet\n\n\n\n$ npm install -g iron-meteor\n\n$ iron create myproject\n\n$ cd myproject\n\n# https://github.com/parlaywithme/full-pack/\n$ iron add parlay:full-pack\n\n$ iron remove insecure autopublish\n$ iron add audit-arguments-check\n$ iron add twbs:bootstrap\n$ iron add yogiben:admin\n$ iron add useraccounts:bootstrap\n$ iron add matb33:collection-hooks\n$ iron add nimble:restivus\n$ iron add msavin:jetsetter\n$ iron add mizzao:user-status\n$ iron add sacha:spin\n$ iron add accounts-password\n$ iron add juliancwirko:s-alert\n$ iron add gadicohen:headers\n\n\n# TODO: TEMPORAIRE\n$ iron remove appcache browser-policy gadicohen:headers\n\n$ iron remove twbs:bootstrap yogiben:admin useraccounts:bootstrap\n\n\n\n\n\n\nMeteor Settings\n\n\n--settings settings.json\n\n\n\n\n3. D\u00e9marrage\n\n\nIl faudra surement relancer le meteor une seconde fois si le fichier packages.json n'est pas cr\u00e9\u00e9 avant.\n\n\n$ MONGO_URL=mongodb://localhost/myproject iron run -p 0.0.0.0:8080\n\n# Derri\u00e8re un proxy, ajouter cette variable d'environnement\n$ HTTP_FORWARDED_COUNT=1\n\n\n\n\nStarter Pack - parlay:full-pack\n\n\n$ meteor|iron add parlay:full-pack\n\n\n\nPackages install\u00e9s:\n\n\nparlay:full-pack                    added, version 1.0.3_2\nparlay:starter-pack                 added, version 1.0.3_2\naccounts-base                       added, version 1.2.0\naldeed:autoform                     added, version 4.2.2\naldeed:collection2                  added, version 2.3.3\naldeed:simple-schema                added, version 1.3.3\namplify                             added, version 1.0.0\nappcache                            added, version 1.0.4\naudit-argument-checks               added, version 1.0.3\nbrowser-policy                      added, version 1.0.4\nbrowser-policy-common               added, version 1.0.3\nbrowser-policy-content              added, version 1.0.4\nbrowser-policy-framing              added, version 1.0.4\ncoffeescript                        added, version 1.0.6\ndburles:collection-helpers          added, version 1.0.3\ndburles:mongo-collection-instances  added, version 0.3.1\nemail                               added, version 1.0.6\niron:controller                     added, version 1.0.8\niron:core                           added, version 1.0.8\niron:dynamic-template               added, version 1.0.8\niron:layout                         added, version 1.0.8\niron:location                       added, version 1.0.9\niron:middleware-stack               added, version 1.0.9\niron:router                         added, version 1.0.9\niron:url                            added, version 1.0.9\nlocalstorage                        added, version 1.0.3\nmatb33:collection-hooks             added, version 0.7.13\nmeteorhacks:async                   added, version 1.0.0\nmeteorhacks:kadira                  added, version 2.19.6\nmeteorhacks:meteorx                 added, version 1.3.1\nmeteorhacks:npm                     added, version 1.2.2\nmeteorhacks:ssr                     added, version 2.1.2\nmeteorhacks:subs-manager            added, version 1.3.0\nmizzao:timesync                     added, version 0.3.1\nmomentjs:moment                     added, version 2.9.0\nmongo-livedata                      added, version 1.0.8\nmquandalle:bower                    added, version 1.3.12_3\nmsavin:mongol                       added, version 0.5.5\nnpm-node-aes-gcm                    added, version 0.1.3_6\noauth-encryption                    added, version 1.0.5\npeerlibrary:assert                  added, version 0.2.5\nraix:handlebar-helpers              added, version 0.2.4\nservice-configuration               added, version 1.0.4\nsoftwarerero:accounts-t9n           added, version 1.0.9\nspiderable                          added, version 1.0.7\nstevezhu:lodash                     added, version 1.0.2\nu2622:persistent-session            added, version 0.2.2\nunderscorestring:underscore.string  added, version 2.4.0\nuseraccounts:core                   added, version 1.8.1\nzimme:collection-behaviours         added, version 1.0.4\nzimme:collection-softremovable      added, version 1.0.4\nzimme:collection-timestampable      added, version 1.0.6\nzimme:iron-router-active            added, version 1.0.3\nzimme:iron-router-auth              added, version 3.0.1\n\n\n\nAjouter:\n\n\n    twbs:bootstrap\n    yogiben:admin\n    useraccounts:bootstrap\n    matb33:collection-hooks\n    nimble:restivus\n    msavin:jetsetter\n    mizzao:user-status\n\n    percolate:migrations\n    edgee:slingshot\n    percolate:server-info\n    aldeed:template-extension\n    percolate:paginated-subscription\n    hitchcott:method-hooks\n    matteodem:easy-search\n    percolate:synced-cron\n\n\n\n\nPackages\n\n\nIntroduction\n\n\nIl y a beaucoup d'avis sur cette question mais pour l'instant, pour ma part, j'ai choisi la suivante:\n\n\n.meteor/\nclient/\n    stylesheets/\n    lib/\n    views/\n    helpers.js\n    router.js\n    startup.js\ncommon/\n    lib/\n    collections/\nserver/\n    lib/\n    startup.js\n    methods.js\n    publish.js\npublic/\nprivate/\ni18n/\npackages/\nsettings.json\nREADME.md\n\n\n\nInstallation\n\n\ngit clone https://github.com/srault95/meteor-app-base.git myproject\n\ncd myproject/app\n\nmeteor update\n\n\n\norion-cli\n\n\n\n\nhttps://github.com/matteodem/orion-cli\n\n\nhttps://github.com/matteodem/meteor-boilerplate\n\n\nhttp://matteodem.github.io/meteor-boilerplate/\n\n\n\n\nOutil en ligne de commande pour g\u00e9n\u00e9rer une application Meteor\n\n\nUtilise un fichier json pour d\u00e9crire les donn\u00e9es \u00e0 g\u00e9n\u00e9rer\n\n\nCr\u00e9ation de packages avec meteoris\n\n\n\n\nSite\n\n\nSources\n\n\nD\u00e9monstration\n (mais ne fonctionne pas pour moi)\n\n\nDocumentation\n\n\nAutre Documentation\n\n\n\n\nAvantages\n\n\n\n\nG\u00e9n\u00e9ration d'un package r\u00e9utilisable pour chaque projet cr\u00e9er avec le g\u00e9n\u00e9rateur Mugen\n\n\n\n\nInconv\u00e9nients\n\n\n\n\nG\u00e9n\u00e8re du HTML static dans les templates sans utiliser autoform\n\n\n\n\nInstallation\n\n\n$ git clone https://github.com/radiegtya/meteoris.git myproject\n$ cd myproject\n$ MONGO_URL=mongodb://localhost/start2 meteor -p 0.0.0.0:8080\n\n\n\n\n\n\nLogin/Mot de passe Admin: admin@meteoris.me / admin\n\n\n\n\nStructures de projet\n\n\niron-cli\n\n\nmy-app/\n .iron/\n   config.json\n bin/\n build/\n config/\n   development/\n     env.sh\n     settings.json\n app/\n   client/\n     collections/\n     lib/\n     stylesheets/\n     templates/\n     head.html\n   lib/\n     collections/\n     controllers/\n     methods.js\n     routes.js\n   packages/\n   private/\n   public/\n   server/\n     collections/\n     controllers/\n     lib/\n     methods.js\n     publish.js\n     bootstrap.js\n\n\n\nboilerplate\n\n\nclient/                 # Client folder\n    compatibility/      # Libraries which create a global variable\n    config/             # Configuration files (on the client)\n    lib/                # Library files that get executed first\n    startup/            # Javascript files on Meteor.startup()\n    stylesheets         # LESS files\n    modules/            # Meant for components, such as form and more(*)\n    views/              # Contains all views(*)\n        common/         # General purpose html templates\nmodel/                  # Model files, for each Meteor.Collection(*)\nprivate/                # Private files\npublic/                 # Public files\nroutes/                 # All routes(*)\nserver/                 # Server folder\n    fixtures/           # Meteor.Collection fixtures defined\n    lib/                # Server side library folder\n    publications/       # Collection publications(*)\n    startup/            # On server startup\nmeteor-boilerplate      # Command line tool\n\n\n\nVoid\n\n\n\n\n\n\nhttps://github.com/SachaG/Void\n\n\nclient\n    CSS\n    helpers\n        handlebars.js\n        router.js\n    views\n        common\n            footer.html\n            header.html\n            layout.html\n            loading.html\n            notFound.html\n        items\n            item.html\n            item.js\n            items.html\n        pages\n            homepage.html\n    main.html\n    main.js\ncollections\n    items.js\nlib\n    helpers.js\n    permissions.js\npackages\n    iron-router\n    sample-package\npublic\nserver\n    fixtures.js\n    publications.js\n\n\n\n\n\n\nmeteor-boilerplate\n\n\n\n\nhttp://github.differential.com/meteor-boilerplate/\n\n\n\n\nexponential.io\n\n\n\n\n\n\nhttp://tech.exponential.io/meteor/building-large-modular-apps-meteor/\n\n\n/projectName\n    /docs             - Documentation\n    /src              - Root directory of all source files\n        /client           - [Client only]\n            /collections       - Local, unsynced collections\n            /compatability     - 3rd party JS libs that export a global symbol\n            /conf              - Configuration\n            /lib               - Library code (client-only)\n            /routers           - As the name implies, define routes here\n            /startup           - Code to run on document.ready()\n            /stylesheets       - CSS files\n            /subscriptions     - Subscribe to publications\n            /views             - Contains one nested directory for each module\n        /collections       - [Client \n Server] Collections and methods that act on the collection\n        /lib               - [Client \n Server] Library code that is used on client and server\n        /packages          - [Client \n/or Server] Meteor, Meteorite and local packages\n        /private           - [Server only] Private data files\n        /public            - Static files\n            /images        - Image files\n        /server            - [Server only]\n            /publications  - Publish Mongo collections\n            /startup       - Code to run when the server starts\n\n\n\n\n\n\nyeoman - generator-met\n\n\n\n\nhttps://github.com/cmalven/generator-met\n\n\n\n\nhttps://github.com/Pent/generator-meteor\n\n\n.meteor/\n    .gitignore\n    packages\n    release\nclient/\n    main.coffee\n    router.coffee\n    vendor/\n    views/\n        index/\n            index.html\n            index.coffee\n        layout/\n            layout.html\nlib/\n    collections/\npackages/\npublic/\nserver/\n    main.coffee\n    methods.coffee\n    publications/\n.gitignore\nREADME.md\nindex.html", 
            "title": "Structure de Projet"
        }, 
        {
            "location": "/project-structure/#structure-de-projet-meteor", 
            "text": "", 
            "title": "Structure de Projet Meteor"
        }, 
        {
            "location": "/project-structure/#introduction", 
            "text": "Il existe plusieurs types de solution de d\u00e9marrage.  On peut les regrouper dans ces cat\u00e9gories:   Structure de projet  https://github.com/yogiben/meteor-starter  https://github.com/Differential/meteor-boilerplate    G\u00e9n\u00e9rateur de projet  iron-cli  Kitchen  orion-cli     Pour les solutions de type structure, il suffit en g\u00e9n\u00e9ral de faire un  git clone . Exemple:  $ git clone https://github.com/yogiben/meteor-starter.git myproject\n$ cd myproject\n$ meteor  Attention \u00e0 bien analyser les d\u00e9pendances, les versions et choix d'impl\u00e9mentation des outils.   Certains sont orient\u00e9s Bootstrap ou Semantic-ui et d'autre sont g\u00e9n\u00e9riques, \u00e0 vous de choisir le framework CSS  Chacun d\u00e9finit sa structure de r\u00e9pertoires", 
            "title": "Introduction"
        }, 
        {
            "location": "/project-structure/#meteor-starter", 
            "text": "https://github.com/yogiben/meteor-starter  http://learn.meteorfactory.io/meteor-starter/  http://learn.meteorfactory.io/customising-meteor-starter/  http://starter.meteor.com/  https://github.com/yogiben/meteor-admin/   Introduction  Cette base de projet est une des plus fonctionnelles parmis celles que j'ai test\u00e9.  Le seul d\u00e9faut pour moi est l'utilisation du coffeescript que je ne maitrise pas encore mais vous trouverez une solution de conversion en Javascript un peu plus loin.  Remarque:  Il n'y a aucun compte utilisateur au d\u00e9marrage mais le premier utilisateur enregistr\u00e9 deviendra l'administrateur  TODO   manque imagemagik cot\u00e9 nodejs  https://github.com/CollectionFS/Meteor-cfs-graphicsmagick   Fonctionnalit\u00e9s   Le premier user cr\u00e9\u00e9 aura un r\u00f4le admin  Dockerfile  i18n  interface admin: https://github.com/yogiben/meteor-admin/  login social  roles  controle de la qualit\u00e9 du password  Mail de r\u00e9cup\u00e9ration de mot de passe avec un lien : http://starter.meteor.com/reset-password/xxxxxxxx  Extension du profil user  D\u00e9filement continue de la page  Notifications  Config dans private/dev.json  Bootstrap3 en mode less pour personnalisation  Applications dans packages/  http://github.com/yogiben/meteor-comments.git  http://github.com/yogiben/meteor-favorites.git  http://github.com/yogiben/meteor-notifications.git  user-thumbs  http://github.com/yogiben/meteor-bootstrap     Installation  $ git clone https://github.com/yogiben/meteor-starter.git myproject\n$ cd myproject\n$ meteor update\n$ MONGO_URL=mongodb://localhost/myproject meteor  Packages install\u00e9s (apr\u00e8s meteor update)  accounts-base@1.2.0\naccounts-facebook@1.0.4\naccounts-google@1.0.4\naccounts-oauth@1.1.5\naccounts-password@1.1.1\naccounts-twitter@1.0.4\naccounts-ui@1.1.5\naccounts-ui-unstyled@1.1.7\nalanning:roles@1.2.13\naldeed:autoform@5.3.0\naldeed:collection2@2.3.3\naldeed:simple-schema@1.3.3\naldeed:tabular@1.2.0\naldeed:template-extension@3.4.3\nautoupdate@1.2.1\nbase64@1.0.3\nbinary-heap@1.0.3\nblaze@2.1.2\nblaze-tools@1.0.3\nboilerplate-generator@1.0.3\nbootstrap@0.3.1\ncallback-hook@1.0.3\ncfs:access-point@0.1.49\ncfs:base-package@0.0.30\ncfs:collection@0.5.5\ncfs:collection-filters@0.2.4\ncfs:data-man@0.0.6\ncfs:file@0.1.17\ncfs:graphicsmagick@0.0.18\ncfs:gridfs@0.0.33\ncfs:http-methods@0.0.29\ncfs:http-publish@0.0.13\ncfs:power-queue@0.9.11\ncfs:reactive-list@0.0.9\ncfs:reactive-property@0.0.4\ncfs:standard-packages@0.5.9\ncfs:storage-adapter@0.2.2\ncfs:tempstore@0.1.5\ncfs:upload-http@0.0.20\ncfs:worker@0.1.4\ncheck@1.0.5\ncmather:handlebars-server@2.0.0\ncoffeescript@1.0.6\ncomments@0.1.0\ndburles:collection-helpers@1.0.3\ndburles:google-maps@1.1.1\nddp@1.1.0\ndeps@1.0.7\nejson@1.0.6\nemail@1.0.6\nfacebook@1.2.0\nfastclick@1.0.3\nfavorites@0.0.4\nfortawesome:fontawesome@4.3.0\ngeojson-utils@1.0.3\ngoogle@1.1.5\nhandlebars@1.0.3\nhtml-tools@1.0.4\nhtmljs@1.0.4\nhttp@1.1.0\nid-map@1.0.3\niron:controller@1.0.8\niron:core@1.0.8\niron:dynamic-template@1.0.8\niron:layout@1.0.8\niron:location@1.0.9\niron:middleware-stack@1.0.9\niron:router@1.0.9\niron:url@1.0.9\njparker:crypto-core@0.1.0\njparker:crypto-md5@0.1.1\njparker:gravatar@0.3.1\njquery@1.11.3_2\njson@1.0.3\njuliancwirko:s-alert@2.4.0\njuliancwirko:s-alert-stackslide@1.1.3\nlaunch-screen@1.0.2\nless@1.0.14\nlivedata@1.0.13\nlocalstorage@1.0.3\nlogging@1.0.7\nmanuelschoebel:ms-seo@0.4.1\nmeteor@1.1.6\nmeteor-platform@1.2.2\nmeteorhacks:meteorx@1.0.2\nmeteorhacks:subs-manager@1.4.0\nmeteorhacks:unblock@1.1.0\nmeteorspark:util@0.2.0\nminifiers@1.1.5\nminimongo@1.0.8\nmobile-status-bar@1.0.3\nmomentjs:moment@2.10.3\nmongo@1.1.0\nmongo-livedata@1.0.8\nmpowaga:string-template@0.1.0\nmrt:moment@2.8.1\nmultiply:iron-router-progress@1.0.1\nnatestrauser:animate-css@3.2.6\nnotifications@0.0.7\nnpm-bcrypt@0.7.8_2\noauth@1.1.4\noauth1@1.1.4\noauth2@1.1.3\nobserve-sequence@1.0.6\nordered-dict@1.0.3\npercolate:momentum@0.7.2\npercolate:momentum-iron-router@0.7.0\npercolate:velocityjs@1.1.0\nraix:eventemitter@0.1.2\nraix:handlebar-helpers@0.2.4\nrandom@1.0.3\nreactive-dict@1.1.0\nreactive-var@1.0.5\nreload@1.1.3\nretry@1.0.3\nreywood:publish-composite@1.3.6\nroutepolicy@1.0.5\nservice-configuration@1.0.4\nsession@1.1.0\nsha@1.0.3\nsoftwarerero:accounts-t9n@1.0.9\nspacebars@1.0.6\nspacebars-compiler@1.0.6\nspiderable@1.0.7\nsrp@1.0.3\ntap:i18n@1.5.0\ntemplating@1.1.1\ntimmyg:wow@1.0.1\ntracker@1.0.7\ntsega:skrollr@0.0.2\ntwitter@1.1.4\nui@1.0.6\nunderscore@1.0.3\nunderscorestring:underscore.string@3.0.3_1\nurl@1.0.4\nuser-thumbs@0.0.8\nuseraccounts:bootstrap@1.11.1\nuseraccounts:core@1.11.1\nwebapp@1.2.0\nwebapp-hashing@1.0.3\nyogiben:admin@1.1.2\nyogiben:autoform-file@0.2.7\nyogiben:autoform-map@0.1.3\nyogiben:autoform-modals@0.3.5\nyogiben:helpers@0.0.6\nyogiben:mixpanel@0.0.7\nyogiben:pretty-email@0.0.6\nzimme:iron-router-active@1.0.4  Collection mongodb au d\u00e9marrage  $ mongo  use myproject  show collections\nmeteor_accounts_loginServiceConfiguration\nmeteor_oauth_pendingCredentials\nmeteor_oauth_pendingRequestTokens\nroles\nsystem.indexes\nusers  Conversion JS  Pour ceux qui pr\u00e9f\u00e9re travailler en javascript, voici une solution rapide pour convertir les fichiers coffee.  \n# Outil de conversion coffeescript -  javascript\nnpm install -g coffee-script\n\n# Clonez le projet\n$ git clone https://github.com/yogiben/meteor-starter.git myproject\n$ cd myproject\n\n# Cr\u00e9er un fichier .js \u00e0 partir de chaque fichier .coffee\n$ find -name  *.coffee  -exec coffee -b --no-header -c {} \\;\n\n# Remplace les .coffee dans package.js\n$ find -name  package.js  -exec sed -i 's/\\.coffee/\\.js/' {} \\;\n\n# Supprimez les .coffee\n$ for i in `find -name  *.coffee `; do rm -f $i; done  Customisation    Copiez i18n/en.i18n.json dans i18n/fr.i18n.json pour traduction    modifiez private/settings/dev.json   Supprimez les entr\u00e9es non utilis\u00e9s comme facebook  Remplacez environment pour production     Pour modifier le css: client/style/bootstrap-variables.less   Pour modifier les fonts google : client/style/utils/fonts.import.less  Pour modifier l'image de l'\u00e9cran d'accueil: client/views/home/home.import.less  Les vues/layout sont dans client/views  Les collections sont dans collections/*.js   Les routes sont dans lib/_config/router.js et lib/router.*.js    Pour la configuration principale, editez lib/_config/_config.js    this.Config = {\n  name: 'My App',\n  title: function() {\n    return TAPi18n.__('configTitle');\n  },\n  subtitle: function() {\n    return TAPi18n.__('configSubtitle');\n  },\n  logo: function() {\n    return ' b ' + this.name + ' /b ';\n  },\n  footer: function() {\n    return this.name + ' - Copyright ' + new Date().getFullYear();\n  },\n  emails: {\n    from: 'no-reply@' + Meteor.absoluteUrl(),\n    contact: 'hello' + Meteor.absoluteUrl()\n  },\n  username: false,\n  defaultLanguage: 'en',\n  dateFormat: 'D/M/YYYY',\n  privacyUrl: 'http://meteorfactory.io',\n  termsUrl: 'http://meteorfactory.io',\n  legal: {\n    address: 'Jessnerstrasse 18, 12047 Berlin',\n    name: 'Meteor Factory',\n    url: 'http://benjaminpeterjones.com'\n  },\n  about: 'http://meteorfactory.io',\n  blog: 'http://learn.meteorfactory.io',\n  socialMedia: {\n    facebook: {\n      url: 'http://facebook.com/benjaminpeterjones',\n      icon: 'facebook'\n    },\n    twitter: {\n      url: 'http://twitter.com/BenPeterJones',\n      icon: 'twitter'\n    },\n    github: {\n      url: 'http://github.com/yogiben',\n      icon: 'github'\n    },\n    info: {\n      url: 'http://meteorfactory.io',\n      icon: 'link'\n    }\n  },\n  homeRoute: '/',\n  publicRoutes: ['home'],\n  dashboardRoute: '/dashboard'\n};  Ajout d'un spinner de chargement  $ meteor add sacha:spin  Editez client/shared/loading.html:  template name= loading \n  {{  spinner}} /template   Configuration de l'interface d'administration   https://github.com/yogiben/meteor-admin/   Editez lib/_config/adminConfig.js  Configuration d'une authentification github   Le lien \u00e0 configurer comme callback sur github est http://YOUR_HOST/_oauth/github   $ meteor add accounts-github  Configuration dans private/settings/dev.json::       serviceConfigurations : {\n         github : {\n             clientId :  xxx ,\n             secret :  xxx \n        }\n    }  TODO:  Meteor.loginWithGithub({\n  requestPermissions: ['user', 'public_repo']\n}, function (err) {\n  if (err)\n    Session.set('errorMessage', err.reason || 'Unknown error');\n});\n\nModifier lib/_config/oauth.js\n  if user.services?.github\n        user.emails = [{address: user.services.github.email, verified: true}]\n        user.profile.firstName = user.services.github.given_name\n        user.profile.lastName = user.services.github.family_name\nif user.services?.github?.id\n  profileImageUrl = user.services.github.picture\n\n   forLoggedInUser: ['services.github'],\n    forOtherUsers: ['services.github.username']  D\u00e9veloppement   Utilisation de Config   Read our  a href= {{Config.blog}} blog /a \n\nCollections dans /lib/collections/*  TODO - Personnalisation du compte utilisateur  TODO - Google Analytics  TODO - Ajout de packages   Formulaire de contact  Auth social  SEO  SiteMap", 
            "title": "meteor-starter"
        }, 
        {
            "location": "/project-structure/#iron-cli", 
            "text": "Cr\u00e9ation d'un projet  \n$ npm install -g iron-meteor\n\n$ iron create myproject\n\n$ cd myproject\n\n# https://github.com/parlaywithme/full-pack/\n$ iron add parlay:full-pack\n\n$ iron remove insecure autopublish\n$ iron add audit-arguments-check\n$ iron add twbs:bootstrap\n$ iron add yogiben:admin\n$ iron add useraccounts:bootstrap\n$ iron add matb33:collection-hooks\n$ iron add nimble:restivus\n$ iron add msavin:jetsetter\n$ iron add mizzao:user-status\n$ iron add sacha:spin\n$ iron add accounts-password\n$ iron add juliancwirko:s-alert\n$ iron add gadicohen:headers\n\n\n# TODO: TEMPORAIRE\n$ iron remove appcache browser-policy gadicohen:headers\n\n$ iron remove twbs:bootstrap yogiben:admin useraccounts:bootstrap  Meteor Settings  --settings settings.json", 
            "title": "iron-cli"
        }, 
        {
            "location": "/project-structure/#3-demarrage", 
            "text": "Il faudra surement relancer le meteor une seconde fois si le fichier packages.json n'est pas cr\u00e9\u00e9 avant.  $ MONGO_URL=mongodb://localhost/myproject iron run -p 0.0.0.0:8080\n\n# Derri\u00e8re un proxy, ajouter cette variable d'environnement\n$ HTTP_FORWARDED_COUNT=1", 
            "title": "3. D\u00e9marrage"
        }, 
        {
            "location": "/project-structure/#starter-pack-parlayfull-pack", 
            "text": "$ meteor|iron add parlay:full-pack  Packages install\u00e9s:  parlay:full-pack                    added, version 1.0.3_2\nparlay:starter-pack                 added, version 1.0.3_2\naccounts-base                       added, version 1.2.0\naldeed:autoform                     added, version 4.2.2\naldeed:collection2                  added, version 2.3.3\naldeed:simple-schema                added, version 1.3.3\namplify                             added, version 1.0.0\nappcache                            added, version 1.0.4\naudit-argument-checks               added, version 1.0.3\nbrowser-policy                      added, version 1.0.4\nbrowser-policy-common               added, version 1.0.3\nbrowser-policy-content              added, version 1.0.4\nbrowser-policy-framing              added, version 1.0.4\ncoffeescript                        added, version 1.0.6\ndburles:collection-helpers          added, version 1.0.3\ndburles:mongo-collection-instances  added, version 0.3.1\nemail                               added, version 1.0.6\niron:controller                     added, version 1.0.8\niron:core                           added, version 1.0.8\niron:dynamic-template               added, version 1.0.8\niron:layout                         added, version 1.0.8\niron:location                       added, version 1.0.9\niron:middleware-stack               added, version 1.0.9\niron:router                         added, version 1.0.9\niron:url                            added, version 1.0.9\nlocalstorage                        added, version 1.0.3\nmatb33:collection-hooks             added, version 0.7.13\nmeteorhacks:async                   added, version 1.0.0\nmeteorhacks:kadira                  added, version 2.19.6\nmeteorhacks:meteorx                 added, version 1.3.1\nmeteorhacks:npm                     added, version 1.2.2\nmeteorhacks:ssr                     added, version 2.1.2\nmeteorhacks:subs-manager            added, version 1.3.0\nmizzao:timesync                     added, version 0.3.1\nmomentjs:moment                     added, version 2.9.0\nmongo-livedata                      added, version 1.0.8\nmquandalle:bower                    added, version 1.3.12_3\nmsavin:mongol                       added, version 0.5.5\nnpm-node-aes-gcm                    added, version 0.1.3_6\noauth-encryption                    added, version 1.0.5\npeerlibrary:assert                  added, version 0.2.5\nraix:handlebar-helpers              added, version 0.2.4\nservice-configuration               added, version 1.0.4\nsoftwarerero:accounts-t9n           added, version 1.0.9\nspiderable                          added, version 1.0.7\nstevezhu:lodash                     added, version 1.0.2\nu2622:persistent-session            added, version 0.2.2\nunderscorestring:underscore.string  added, version 2.4.0\nuseraccounts:core                   added, version 1.8.1\nzimme:collection-behaviours         added, version 1.0.4\nzimme:collection-softremovable      added, version 1.0.4\nzimme:collection-timestampable      added, version 1.0.6\nzimme:iron-router-active            added, version 1.0.3\nzimme:iron-router-auth              added, version 3.0.1  Ajouter:      twbs:bootstrap\n    yogiben:admin\n    useraccounts:bootstrap\n    matb33:collection-hooks\n    nimble:restivus\n    msavin:jetsetter\n    mizzao:user-status\n\n    percolate:migrations\n    edgee:slingshot\n    percolate:server-info\n    aldeed:template-extension\n    percolate:paginated-subscription\n    hitchcott:method-hooks\n    matteodem:easy-search\n    percolate:synced-cron", 
            "title": "Starter Pack - parlay:full-pack"
        }, 
        {
            "location": "/project-structure/#packages", 
            "text": "", 
            "title": "Packages"
        }, 
        {
            "location": "/project-structure/#introduction_2", 
            "text": "Il y a beaucoup d'avis sur cette question mais pour l'instant, pour ma part, j'ai choisi la suivante:  .meteor/\nclient/\n    stylesheets/\n    lib/\n    views/\n    helpers.js\n    router.js\n    startup.js\ncommon/\n    lib/\n    collections/\nserver/\n    lib/\n    startup.js\n    methods.js\n    publish.js\npublic/\nprivate/\ni18n/\npackages/\nsettings.json\nREADME.md", 
            "title": "Introduction"
        }, 
        {
            "location": "/project-structure/#installation_1", 
            "text": "git clone https://github.com/srault95/meteor-app-base.git myproject\n\ncd myproject/app\n\nmeteor update", 
            "title": "Installation"
        }, 
        {
            "location": "/project-structure/#orion-cli", 
            "text": "https://github.com/matteodem/orion-cli  https://github.com/matteodem/meteor-boilerplate  http://matteodem.github.io/meteor-boilerplate/   Outil en ligne de commande pour g\u00e9n\u00e9rer une application Meteor  Utilise un fichier json pour d\u00e9crire les donn\u00e9es \u00e0 g\u00e9n\u00e9rer", 
            "title": "orion-cli"
        }, 
        {
            "location": "/project-structure/#creation-de-packages-avec-meteoris", 
            "text": "Site  Sources  D\u00e9monstration  (mais ne fonctionne pas pour moi)  Documentation  Autre Documentation   Avantages   G\u00e9n\u00e9ration d'un package r\u00e9utilisable pour chaque projet cr\u00e9er avec le g\u00e9n\u00e9rateur Mugen   Inconv\u00e9nients   G\u00e9n\u00e8re du HTML static dans les templates sans utiliser autoform   Installation  $ git clone https://github.com/radiegtya/meteoris.git myproject\n$ cd myproject\n$ MONGO_URL=mongodb://localhost/start2 meteor -p 0.0.0.0:8080   Login/Mot de passe Admin: admin@meteoris.me / admin", 
            "title": "Cr\u00e9ation de packages avec meteoris"
        }, 
        {
            "location": "/project-structure/#structures-de-projet", 
            "text": "", 
            "title": "Structures de projet"
        }, 
        {
            "location": "/project-structure/#iron-cli_1", 
            "text": "my-app/\n .iron/\n   config.json\n bin/\n build/\n config/\n   development/\n     env.sh\n     settings.json\n app/\n   client/\n     collections/\n     lib/\n     stylesheets/\n     templates/\n     head.html\n   lib/\n     collections/\n     controllers/\n     methods.js\n     routes.js\n   packages/\n   private/\n   public/\n   server/\n     collections/\n     controllers/\n     lib/\n     methods.js\n     publish.js\n     bootstrap.js", 
            "title": "iron-cli"
        }, 
        {
            "location": "/project-structure/#boilerplate", 
            "text": "client/                 # Client folder\n    compatibility/      # Libraries which create a global variable\n    config/             # Configuration files (on the client)\n    lib/                # Library files that get executed first\n    startup/            # Javascript files on Meteor.startup()\n    stylesheets         # LESS files\n    modules/            # Meant for components, such as form and more(*)\n    views/              # Contains all views(*)\n        common/         # General purpose html templates\nmodel/                  # Model files, for each Meteor.Collection(*)\nprivate/                # Private files\npublic/                 # Public files\nroutes/                 # All routes(*)\nserver/                 # Server folder\n    fixtures/           # Meteor.Collection fixtures defined\n    lib/                # Server side library folder\n    publications/       # Collection publications(*)\n    startup/            # On server startup\nmeteor-boilerplate      # Command line tool", 
            "title": "boilerplate"
        }, 
        {
            "location": "/project-structure/#void", 
            "text": "https://github.com/SachaG/Void  client\n    CSS\n    helpers\n        handlebars.js\n        router.js\n    views\n        common\n            footer.html\n            header.html\n            layout.html\n            loading.html\n            notFound.html\n        items\n            item.html\n            item.js\n            items.html\n        pages\n            homepage.html\n    main.html\n    main.js\ncollections\n    items.js\nlib\n    helpers.js\n    permissions.js\npackages\n    iron-router\n    sample-package\npublic\nserver\n    fixtures.js\n    publications.js", 
            "title": "Void"
        }, 
        {
            "location": "/project-structure/#meteor-boilerplate", 
            "text": "http://github.differential.com/meteor-boilerplate/", 
            "title": "meteor-boilerplate"
        }, 
        {
            "location": "/project-structure/#exponentialio", 
            "text": "http://tech.exponential.io/meteor/building-large-modular-apps-meteor/  /projectName\n    /docs             - Documentation\n    /src              - Root directory of all source files\n        /client           - [Client only]\n            /collections       - Local, unsynced collections\n            /compatability     - 3rd party JS libs that export a global symbol\n            /conf              - Configuration\n            /lib               - Library code (client-only)\n            /routers           - As the name implies, define routes here\n            /startup           - Code to run on document.ready()\n            /stylesheets       - CSS files\n            /subscriptions     - Subscribe to publications\n            /views             - Contains one nested directory for each module\n        /collections       - [Client   Server] Collections and methods that act on the collection\n        /lib               - [Client   Server] Library code that is used on client and server\n        /packages          - [Client  /or Server] Meteor, Meteorite and local packages\n        /private           - [Server only] Private data files\n        /public            - Static files\n            /images        - Image files\n        /server            - [Server only]\n            /publications  - Publish Mongo collections\n            /startup       - Code to run when the server starts", 
            "title": "exponential.io"
        }, 
        {
            "location": "/project-structure/#yeoman-generator-met", 
            "text": "https://github.com/cmalven/generator-met   https://github.com/Pent/generator-meteor  .meteor/\n    .gitignore\n    packages\n    release\nclient/\n    main.coffee\n    router.coffee\n    vendor/\n    views/\n        index/\n            index.html\n            index.coffee\n        layout/\n            layout.html\nlib/\n    collections/\npackages/\npublic/\nserver/\n    main.coffee\n    methods.coffee\n    publications/\n.gitignore\nREADME.md\nindex.html", 
            "title": "yeoman - generator-met"
        }, 
        {
            "location": "/tests/", 
            "text": "Tests Meteor\n\n\nTinyTest\n\n\nTutorials:\n\n\n\n\nhttps://github.com/awatson1978/meteor-cookbook/blob/master/cookbook/writing.unit.tests.md\n\n\n\n\nExemple:\n\n\nmeteor create helloworld\ncd helloworld\nmeteor add tinytest\nmeteor\n\n# Dans un autre terminal\nmeteor test-packages\n\n\n\nvelocity\n\n\n\n\n\n\nvelocity\n\n\n$ git clone https://github.com/meteor-velocity/velocity-examples.git\n$ cd velocity-examples/leaderboard-cucumber\n$ meteor\n\n\n\n\n\n\nmocha - (40 022 installations)\n\n\n\n\nAtmosphere\n\n\nSources\n\n\nFramework mochajs\n\n\n\n\nInstallation:\n\n\nmeteor add mike:mocha\n\n\n\nUsage:\n\n\nmeteor --test --release velocity:METEOR@1.1.0.2_2\n\n\n\ncucumber\n\n\n\n\nAtmosphere\n\n\nSources\n\n\n\n\nInstallation:\n\n\nmeteor add xolvio:cucumber\n\n\n\nPackages ajout\u00e9s:\n\n\namplify                           added, version 1.0.0\ncoffeescript                      added, version 1.0.6\npackage-version-parser            added, version 3.0.3\npracticalmeteor:chai              added, version 1.9.2_3\npracticalmeteor:loglevel          added, version 1.1.0_3\nsanjo:long-running-child-process  added, version 1.1.1\nsanjo:meteor-files-helpers        added, version 1.1.0_6\nsanjo:meteor-version              added, version 1.0.0\nvelocity:chokidar                 added, version 1.0.1_1\nvelocity:core                     added, version 0.6.5\nvelocity:html-reporter            added, version 0.6.2\nvelocity:meteor-internals         added, version 1.1.0_7\nvelocity:shim                     added, version 0.1.0\nxolvio:cucumber                   added, version 0.9.2\n\n\n\nJasmine\n\n\nhttps://github.com/awatson1978/meteor-cookbook/blob/master/cookbook/writing.unit.tests.with.jasmine.md", 
            "title": "Tests Meteor"
        }, 
        {
            "location": "/tests/#tests-meteor", 
            "text": "", 
            "title": "Tests Meteor"
        }, 
        {
            "location": "/tests/#tinytest", 
            "text": "Tutorials:   https://github.com/awatson1978/meteor-cookbook/blob/master/cookbook/writing.unit.tests.md   Exemple:  meteor create helloworld\ncd helloworld\nmeteor add tinytest\nmeteor\n\n# Dans un autre terminal\nmeteor test-packages", 
            "title": "TinyTest"
        }, 
        {
            "location": "/tests/#velocity", 
            "text": "velocity  $ git clone https://github.com/meteor-velocity/velocity-examples.git\n$ cd velocity-examples/leaderboard-cucumber\n$ meteor", 
            "title": "velocity"
        }, 
        {
            "location": "/tests/#mocha-40-022-installations", 
            "text": "Atmosphere  Sources  Framework mochajs   Installation:  meteor add mike:mocha  Usage:  meteor --test --release velocity:METEOR@1.1.0.2_2", 
            "title": "mocha - (40 022 installations)"
        }, 
        {
            "location": "/tests/#cucumber", 
            "text": "Atmosphere  Sources   Installation:  meteor add xolvio:cucumber  Packages ajout\u00e9s:  amplify                           added, version 1.0.0\ncoffeescript                      added, version 1.0.6\npackage-version-parser            added, version 3.0.3\npracticalmeteor:chai              added, version 1.9.2_3\npracticalmeteor:loglevel          added, version 1.1.0_3\nsanjo:long-running-child-process  added, version 1.1.1\nsanjo:meteor-files-helpers        added, version 1.1.0_6\nsanjo:meteor-version              added, version 1.0.0\nvelocity:chokidar                 added, version 1.0.1_1\nvelocity:core                     added, version 0.6.5\nvelocity:html-reporter            added, version 0.6.2\nvelocity:meteor-internals         added, version 1.1.0_7\nvelocity:shim                     added, version 0.1.0\nxolvio:cucumber                   added, version 0.9.2", 
            "title": "cucumber"
        }, 
        {
            "location": "/tests/#jasmine", 
            "text": "https://github.com/awatson1978/meteor-cookbook/blob/master/cookbook/writing.unit.tests.with.jasmine.md", 
            "title": "Jasmine"
        }, 
        {
            "location": "/iron-router/", 
            "text": "Router iron-router\n\n\n\n\nhttps://github.com/iron-meteor/iron-router\n\n\nhttp://iron-meteor.github.io/iron-router\n\n\nhttp://fr.discovermeteor.com/chapters/routing/\n\n\nhttp://robertdickert.com/blog/2014/05/08/iron-router-first-steps/\n\n\nhttp://stackoverflow.com/questions/tagged/iron-router\n\n\n\n\nInstallation\n\n\n$ meteor add iron:router\n\n\n\n\nD\u00e9pendances:\n\n\n// main namespace and utils\n// https://github.com/iron-meteor/iron-core\niron:core\n\n// ui layout\n// https://github.com/iron-meteor/iron-layout\niron:layout\n\n// connect like middleware stack for client/server\n// https://github.com/iron-meteor/iron-middleware-stack\niron:middleware-stack\n\n// client and server side url utilities and compiling\n// https://github.com/iron-meteor/iron-url\niron:url\n\n// for reactive urls and pushState in the browser\n// https://github.com/iron-meteor/iron-location\niron:location\n\n// for RouteController which inherits from this\n// https://github.com/iron-meteor/iron-controller\niron:controller\n\n\n\n\nLes diff\u00e9rentes fa\u00e7on de d\u00e9clarer et g\u00e9rer des routes\n\n\n\n// La plus simple: cherchera un template name=\nhome\n et la route pourra \u00eatre nomm\u00e9 \nhome\n\n// Dans un template, la route pourra \u00eatre appell\u00e9 avec {{pathFor route='home'}}\nRouter.route('/home');\n\n// M\u00eame chose mais en changeant des options comme le nom de la route\n// Le template devra s'appell\u00e9 myhome\n// Dans un template, la route sera appell\u00e9 avec {{pathFor route='myhome'}}\nRouter.route('/home', {name: \nmyhome\n});\n\n// D\u00e9finit dans une fonction\nRouter.route('/home', function () {\n  this.render('home');\n});\n\n// Fonction et options\nRouter.route('/home', function () {\n  this.render('home');\n}, {\n  name: 'myhome'\n});\n\n\n\n\n\nTous les param\u00e8tres de Router.route()\n\n\nRouter.route('/post/:_id', {\n  name: 'post.show',\n\n  path: '/post/:_id',\n\n  controller: 'CustomController',\n\n  template: 'Post',\n\n  layoutTemplate: 'ApplicationLayout',\n\n  yieldRegions: {\n    'MyAside': {to: 'aside'},\n    'MyFooter': {to: 'footer'}\n  },\n\n  subscriptions: function() {\n    this.subscribe('items');\n    this.subscribe('item', this.params._id).wait();\n  },\n\n  waitOn: function () {\n    return Meteor.subscribe('post', this.params._id);\n  },\n\n  data: function () {\n    return Posts.findOne({_id: this.params._id});\n  },\n\n  onRun: function () {},\n  onRerun: function () {},\n  onBeforeAction: function () {},\n  onAfterAction: function () {},\n  onStop: function () {},\n\n  action: function () {\n    this.render();\n  }\n});\n\n\n\n\nOptions par d\u00e9faut pour toutes les routes\n\n\nTous les param\u00e8tres de Router.route() peuvent \u00eatre d\u00e9finit avec une valeur par d\u00e9faut dans:\n\n\nRouter.configure({\n  layoutTemplate: 'ApplicationLayout',\n});\n\n\n\n\nHooks\n\n\nonBeforeAction\n\n\nRouter.onBeforeAction(function() {\n  if (! Meteor.userId()) {\n    this.render('login');\n  } else {\n    this.next();\n  }\n});\n\n\n\n\nPlugins\n\n\nTips\n\n\nTrouver le nom de la route en cours\n\n\nRouter.current().route.getName()\n\n\n\n\nExtensions Iron-Router\n\n\nLes extensions marqu\u00e9s d'un (*) sont ceux que je consid\u00e8re comme les plus utiles.\n\n\niron-dynamic-template\n\n\n\n\nhttps://github.com/iron-meteor/iron-dynamic-template\n\n\n\n\niron-router-auth (*)\n\n\n\n\nhttps://atmospherejs.com/zimme/iron-router-auth\n\n\n\n\n$ meteor add zimme:iron-router-auth\n\n\n\n\n    - D\u00e9finir routes public/priv\u00e9s: (dans client/views/router.js)\n        \n ou avec https://github.com/zimme/meteor-iron-router-auth\n        var publicRoutes = [\nhome_public\n, \nlogin\n, \nregister\n, \nforgot_password\n, \nreset_password\n];\n        var privateRoutes = [\napplications\n, \napplications.insert\n, \napplications.edit\n, \napplications.details\n, \napplications.details.form_view\n, \napplications.details.sitemap\n, \napplications.details.database\n, \napplications.details.json_view\n, \napplications.details.console\n, \nadmin\n, \nadmin.users\n, \nadmin.users.details\n, \nadmin.users.insert\n, \nadmin.users.edit\n, \nuser_settings\n, \nuser_settings.profile\n, \nuser_settings.change_pass\n, \nlogout\n];\n        var zonelessRoutes = [\ngetting_started\n, \nexamples\n, \napi_reference\n, \nversion_history\n, \ncontribute\n, \ndonate\n];\n    - Et utiliser hook (exemple site kitchen)\n        Router.onBeforeAction(Router.ensureNotLogged, {only: publicRoutes});\n        Router.onBeforeAction(Router.ensureLogged, {only: privateRoutes});\n\n\n\n\niron-router-progress (*)\n\n\nAffiche une barre de progression ou un spinner d'attente.\n\n\n\n\nhttps://atmospherejs.com/multiply/iron-router-progress\n\n\n\n\n$ meteor add multiply:iron-router-progress\n\n\n\n\niron-router-breadcrumb (*)\n\n\n\n\nhttps://atmospherejs.com/monbro/iron-router-breadcrumb\n\n\nhttp://meteor-breadcrumb-plugin-basic-example.meteor.com/\n\n\n\n\nA l'aide des param\u00e8tres suppl\u00e9mentaires \"parent\" et \"title\" dans la d\u00e9finition des routes, permet d'avoir une barre:\n\n\n# Pour le lien: /dashboard/analytics/books\nDashboard / Analytics / Category Books\n\n\n\n\nNon d\u00e9pendant de Bootstrap\n\n\n$ meteor add monbro:iron-router-breadcrumb\n\n\n\n\niron-router-i18n (*)\n\n\nInternationalisation des routes.\n\n\n\n\nhttps://atmospherejs.com/martino/iron-router-i18n\n\n\nhttps://atmospherejs.com/martino/i18n-conf\n\n\n\n\n$ meteor add martino:iron-router-i18n\n$ meteor add martino:i18n-conf\n\n\n\n\niron-router-ga\n\n\nAide \u00e0 la cr\u00e9ation de routes personnalis\u00e9s pour Google Analytic\n\n\n\n\nhttps://atmospherejs.com/reywood/iron-router-ga\n\n\nhttps://github.com/reywood/meteor-iron-router-ga/\n\n\n\n\n$ meteor add reywood:iron-router-ga\n\n\n\n\niron-router-autoscroll\n\n\nTODO: Comprendre l'usage\n\n\n\n\nhttps://atmospherejs.com/okgrow/iron-router-autoscroll\n\n\n\n\nSouscription\n\n\nPlusieurs m\u00e9thodes\n\n\nId\u00e9e: d\u00e9finir un controlleur global \u00e0 h\u00e9rit\u00e9 et y placer des subscribe commun comme les Users\n\n\nDans un Router.route\n\n\nRouter.route('/post/:_id', {\n  subscriptions: function() {\n    this.subscribe('items');\n    this.subscribe('item', this.params._id).wait();\n  },\n});\n\n\n\n\nwaitOn vs subscriptions\n\n\n\n\nL'avantage de waitOn est d'y placer aussi d'autres attente (wait) que les souscriptions\n\n\n\n\n  waitOn: function () {\n    return Meteor.subscribe('post', this.params._id);\n  },\n\n\n\n\nDans un controlleur\n\n\nPostController = RouteController.extend();\n\n\n\n\n\n\nhttp://www.manuel-schoebel.com/blog/meteorjs-iron-router-filters-before-and-after-hooks\n\n\n\n\n// Hook onBeforeAction\nRouter.map(function () {\n    this.route('postShow', {\n        path: '/posts/:_id',\n\n        onBeforeAction: function (pause) {\n            if (!Meteor.user()) {\n            // render the login template but keep the url in the browser the same\n            this.render('login');\n        }\n    }\n}", 
            "title": "Iron Router"
        }, 
        {
            "location": "/iron-router/#router-iron-router", 
            "text": "https://github.com/iron-meteor/iron-router  http://iron-meteor.github.io/iron-router  http://fr.discovermeteor.com/chapters/routing/  http://robertdickert.com/blog/2014/05/08/iron-router-first-steps/  http://stackoverflow.com/questions/tagged/iron-router", 
            "title": "Router iron-router"
        }, 
        {
            "location": "/iron-router/#installation", 
            "text": "$ meteor add iron:router  D\u00e9pendances:  // main namespace and utils\n// https://github.com/iron-meteor/iron-core\niron:core\n\n// ui layout\n// https://github.com/iron-meteor/iron-layout\niron:layout\n\n// connect like middleware stack for client/server\n// https://github.com/iron-meteor/iron-middleware-stack\niron:middleware-stack\n\n// client and server side url utilities and compiling\n// https://github.com/iron-meteor/iron-url\niron:url\n\n// for reactive urls and pushState in the browser\n// https://github.com/iron-meteor/iron-location\niron:location\n\n// for RouteController which inherits from this\n// https://github.com/iron-meteor/iron-controller\niron:controller", 
            "title": "Installation"
        }, 
        {
            "location": "/iron-router/#les-differentes-facon-de-declarer-et-gerer-des-routes", 
            "text": "// La plus simple: cherchera un template name= home  et la route pourra \u00eatre nomm\u00e9  home \n// Dans un template, la route pourra \u00eatre appell\u00e9 avec {{pathFor route='home'}}\nRouter.route('/home');\n\n// M\u00eame chose mais en changeant des options comme le nom de la route\n// Le template devra s'appell\u00e9 myhome\n// Dans un template, la route sera appell\u00e9 avec {{pathFor route='myhome'}}\nRouter.route('/home', {name:  myhome });\n\n// D\u00e9finit dans une fonction\nRouter.route('/home', function () {\n  this.render('home');\n});\n\n// Fonction et options\nRouter.route('/home', function () {\n  this.render('home');\n}, {\n  name: 'myhome'\n});", 
            "title": "Les diff\u00e9rentes fa\u00e7on de d\u00e9clarer et g\u00e9rer des routes"
        }, 
        {
            "location": "/iron-router/#tous-les-parametres-de-routerroute", 
            "text": "Router.route('/post/:_id', {\n  name: 'post.show',\n\n  path: '/post/:_id',\n\n  controller: 'CustomController',\n\n  template: 'Post',\n\n  layoutTemplate: 'ApplicationLayout',\n\n  yieldRegions: {\n    'MyAside': {to: 'aside'},\n    'MyFooter': {to: 'footer'}\n  },\n\n  subscriptions: function() {\n    this.subscribe('items');\n    this.subscribe('item', this.params._id).wait();\n  },\n\n  waitOn: function () {\n    return Meteor.subscribe('post', this.params._id);\n  },\n\n  data: function () {\n    return Posts.findOne({_id: this.params._id});\n  },\n\n  onRun: function () {},\n  onRerun: function () {},\n  onBeforeAction: function () {},\n  onAfterAction: function () {},\n  onStop: function () {},\n\n  action: function () {\n    this.render();\n  }\n});", 
            "title": "Tous les param\u00e8tres de Router.route()"
        }, 
        {
            "location": "/iron-router/#options-par-defaut-pour-toutes-les-routes", 
            "text": "Tous les param\u00e8tres de Router.route() peuvent \u00eatre d\u00e9finit avec une valeur par d\u00e9faut dans:  Router.configure({\n  layoutTemplate: 'ApplicationLayout',\n});", 
            "title": "Options par d\u00e9faut pour toutes les routes"
        }, 
        {
            "location": "/iron-router/#hooks", 
            "text": "onBeforeAction  Router.onBeforeAction(function() {\n  if (! Meteor.userId()) {\n    this.render('login');\n  } else {\n    this.next();\n  }\n});", 
            "title": "Hooks"
        }, 
        {
            "location": "/iron-router/#plugins", 
            "text": "", 
            "title": "Plugins"
        }, 
        {
            "location": "/iron-router/#tips", 
            "text": "Trouver le nom de la route en cours  Router.current().route.getName()", 
            "title": "Tips"
        }, 
        {
            "location": "/iron-router/#extensions-iron-router", 
            "text": "Les extensions marqu\u00e9s d'un (*) sont ceux que je consid\u00e8re comme les plus utiles.  iron-dynamic-template   https://github.com/iron-meteor/iron-dynamic-template   iron-router-auth (*)   https://atmospherejs.com/zimme/iron-router-auth   $ meteor add zimme:iron-router-auth      - D\u00e9finir routes public/priv\u00e9s: (dans client/views/router.js)\n          ou avec https://github.com/zimme/meteor-iron-router-auth\n        var publicRoutes = [ home_public ,  login ,  register ,  forgot_password ,  reset_password ];\n        var privateRoutes = [ applications ,  applications.insert ,  applications.edit ,  applications.details ,  applications.details.form_view ,  applications.details.sitemap ,  applications.details.database ,  applications.details.json_view ,  applications.details.console ,  admin ,  admin.users ,  admin.users.details ,  admin.users.insert ,  admin.users.edit ,  user_settings ,  user_settings.profile ,  user_settings.change_pass ,  logout ];\n        var zonelessRoutes = [ getting_started ,  examples ,  api_reference ,  version_history ,  contribute ,  donate ];\n    - Et utiliser hook (exemple site kitchen)\n        Router.onBeforeAction(Router.ensureNotLogged, {only: publicRoutes});\n        Router.onBeforeAction(Router.ensureLogged, {only: privateRoutes});  iron-router-progress (*)  Affiche une barre de progression ou un spinner d'attente.   https://atmospherejs.com/multiply/iron-router-progress   $ meteor add multiply:iron-router-progress  iron-router-breadcrumb (*)   https://atmospherejs.com/monbro/iron-router-breadcrumb  http://meteor-breadcrumb-plugin-basic-example.meteor.com/   A l'aide des param\u00e8tres suppl\u00e9mentaires \"parent\" et \"title\" dans la d\u00e9finition des routes, permet d'avoir une barre:  # Pour le lien: /dashboard/analytics/books\nDashboard / Analytics / Category Books  Non d\u00e9pendant de Bootstrap  $ meteor add monbro:iron-router-breadcrumb  iron-router-i18n (*)  Internationalisation des routes.   https://atmospherejs.com/martino/iron-router-i18n  https://atmospherejs.com/martino/i18n-conf   $ meteor add martino:iron-router-i18n\n$ meteor add martino:i18n-conf  iron-router-ga  Aide \u00e0 la cr\u00e9ation de routes personnalis\u00e9s pour Google Analytic   https://atmospherejs.com/reywood/iron-router-ga  https://github.com/reywood/meteor-iron-router-ga/   $ meteor add reywood:iron-router-ga  iron-router-autoscroll  TODO: Comprendre l'usage   https://atmospherejs.com/okgrow/iron-router-autoscroll", 
            "title": "Extensions Iron-Router"
        }, 
        {
            "location": "/iron-router/#souscription", 
            "text": "Plusieurs m\u00e9thodes  Id\u00e9e: d\u00e9finir un controlleur global \u00e0 h\u00e9rit\u00e9 et y placer des subscribe commun comme les Users  Dans un Router.route  Router.route('/post/:_id', {\n  subscriptions: function() {\n    this.subscribe('items');\n    this.subscribe('item', this.params._id).wait();\n  },\n});  waitOn vs subscriptions   L'avantage de waitOn est d'y placer aussi d'autres attente (wait) que les souscriptions     waitOn: function () {\n    return Meteor.subscribe('post', this.params._id);\n  },  Dans un controlleur  PostController = RouteController.extend();   http://www.manuel-schoebel.com/blog/meteorjs-iron-router-filters-before-and-after-hooks   // Hook onBeforeAction\nRouter.map(function () {\n    this.route('postShow', {\n        path: '/posts/:_id',\n\n        onBeforeAction: function (pause) {\n            if (!Meteor.user()) {\n            // render the login template but keep the url in the browser the same\n            this.render('login');\n        }\n    }\n}", 
            "title": "Souscription"
        }, 
        {
            "location": "/simple-schema/", 
            "text": "Simple Schema\n\n\nUn package qui va vraiment vous faciliter la vie !!!\n\n\nEn r\u00e9sumer, simple-schema vous permet de d\u00e9finir la structure de chaque Collection ou d'un simple formulaire.\n\n\nMais le plus important est que la validation est utilisable autant cot\u00e9 client que cot\u00e9 serveur.\n\n\n\n\n\n\nhttps://github.com/aldeed/meteor-simple-schema\n\n\n\n\n\n\nVoir https://github.com/copleykj/Mesosphere\n\n\n\n\n\n\nExemple:\n\n\n\nBookSchema = new SimpleSchema({\n  title: {\n    type: String,\n    label: \nTitle\n,\n    max: 200\n  },\n  author: {\n    type: String,\n    label: \nAuthor\n\n  },\n  copies: {\n    type: Number,\n    label: \nNumber of copies\n,\n    min: 0\n  },\n  lastCheckedOut: {\n    type: Date,\n    label: \nLast date this book was checked out\n,\n    optional: true\n  },\n  summary: {\n    type: String,\n    label: \nBrief summary\n,\n    optional: true,\n    max: 1000\n  }\n});\n\n\n\n\n\nLes types de champs\n\n\nEn version simple:\n\n\nString\nNumber\nBoolean\nObject\n\n\n\nLa m\u00eame chose comme tableau:\n\n\n[String]\n[Number]\n[Boolean]\n[Object]\n[Date]\n\n\n\nSimpleSchema.RegEx\n\n\nSimpleSchema.RegEx.Email for emails (uses a permissive regEx recommended by W3C, which most browsers use)\nSimpleSchema.RegEx.Domain for external domains and the domain only (requires a tld like .com)\nSimpleSchema.RegEx.WeakDomain for less strict domains and IPv4 and IPv6\nSimpleSchema.RegEx.IP for IPv4 or IPv6\nSimpleSchema.RegEx.IPv4 for just IPv4\nSimpleSchema.RegEx.IPv6 for just IPv6\nSimpleSchema.RegEx.Url for http, https and ftp urls\nSimpleSchema.RegEx.Id for IDs generated by Random.id() of the random package, also usable to validate a relation id.\nSimpleSchema.RegEx.ZipCode for 5- and 9-digit ZIP codes\n\nowner: {\n  type: String,\n  regEx: SimpleSchema.RegEx.Id,\n  autoValue: function() {\n    if (this.isInsert) {\n      return Meteor.userId();\n    }\n  },\n\n\n\nextendOptions\n\n\nhttps://www.discovermeteor.com/blog/allow-deny-a-security-primer/\n\n\nSimpleSchema.extendOptions({\n  editable: Match.Optional(Boolean)\n});\n\nMessageSchema = new SimpleSchema({\n  body: {\n    type: String,\n    editable: true\n  },\n  createdAt: {\n    type: Date\n  },\n  userId: {\n    type: String\n  }\n});\n\nvar whitelist = _.filter(_.keys(MessageSchema), function (property) {\n  return MessageSchema[property].editable;\n});\n\nMessages.allow({\n  update: function (userId, doc, fields, modifier) {\n    if (userId \n doc.userId === userId \n _.difference(fields, whitelist).length === 0) {\n      return true;\n    }\n  }\n});", 
            "title": "Simple Schema"
        }, 
        {
            "location": "/simple-schema/#simple-schema", 
            "text": "Un package qui va vraiment vous faciliter la vie !!!  En r\u00e9sumer, simple-schema vous permet de d\u00e9finir la structure de chaque Collection ou d'un simple formulaire.  Mais le plus important est que la validation est utilisable autant cot\u00e9 client que cot\u00e9 serveur.    https://github.com/aldeed/meteor-simple-schema    Voir https://github.com/copleykj/Mesosphere    Exemple:  \nBookSchema = new SimpleSchema({\n  title: {\n    type: String,\n    label:  Title ,\n    max: 200\n  },\n  author: {\n    type: String,\n    label:  Author \n  },\n  copies: {\n    type: Number,\n    label:  Number of copies ,\n    min: 0\n  },\n  lastCheckedOut: {\n    type: Date,\n    label:  Last date this book was checked out ,\n    optional: true\n  },\n  summary: {\n    type: String,\n    label:  Brief summary ,\n    optional: true,\n    max: 1000\n  }\n});", 
            "title": "Simple Schema"
        }, 
        {
            "location": "/simple-schema/#les-types-de-champs", 
            "text": "En version simple:  String\nNumber\nBoolean\nObject  La m\u00eame chose comme tableau:  [String]\n[Number]\n[Boolean]\n[Object]\n[Date]", 
            "title": "Les types de champs"
        }, 
        {
            "location": "/simple-schema/#simpleschemaregex", 
            "text": "SimpleSchema.RegEx.Email for emails (uses a permissive regEx recommended by W3C, which most browsers use)\nSimpleSchema.RegEx.Domain for external domains and the domain only (requires a tld like .com)\nSimpleSchema.RegEx.WeakDomain for less strict domains and IPv4 and IPv6\nSimpleSchema.RegEx.IP for IPv4 or IPv6\nSimpleSchema.RegEx.IPv4 for just IPv4\nSimpleSchema.RegEx.IPv6 for just IPv6\nSimpleSchema.RegEx.Url for http, https and ftp urls\nSimpleSchema.RegEx.Id for IDs generated by Random.id() of the random package, also usable to validate a relation id.\nSimpleSchema.RegEx.ZipCode for 5- and 9-digit ZIP codes\n\nowner: {\n  type: String,\n  regEx: SimpleSchema.RegEx.Id,\n  autoValue: function() {\n    if (this.isInsert) {\n      return Meteor.userId();\n    }\n  },", 
            "title": "SimpleSchema.RegEx"
        }, 
        {
            "location": "/simple-schema/#extendoptions", 
            "text": "https://www.discovermeteor.com/blog/allow-deny-a-security-primer/  SimpleSchema.extendOptions({\n  editable: Match.Optional(Boolean)\n});\n\nMessageSchema = new SimpleSchema({\n  body: {\n    type: String,\n    editable: true\n  },\n  createdAt: {\n    type: Date\n  },\n  userId: {\n    type: String\n  }\n});\n\nvar whitelist = _.filter(_.keys(MessageSchema), function (property) {\n  return MessageSchema[property].editable;\n});\n\nMessages.allow({\n  update: function (userId, doc, fields, modifier) {\n    if (userId   doc.userId === userId   _.difference(fields, whitelist).length === 0) {\n      return true;\n    }\n  }\n});", 
            "title": "extendOptions"
        }, 
        {
            "location": "/templating/", 
            "text": "Templates Meteor\n\n\nLes templates Meteor sont bas\u00e9s sur \nspacebars\n qui provient de \nhandlebarsjs\n, lui m\u00eame utilisant une syntaxe \nMustache\n.\n\n\n\n\nhttp://fr.discovermeteor.com/chapters/templates/\n\n\n\n\nEvents\n\n\nclick et submit\n\n\n{\n  // Fires when any element is clicked\n  'click': function (event) { ... },\n\n  // Fires when any element with the 'accept' class is clicked\n  'click .accept': function (event) { ... },\n\n  // Fires when 'accept' is clicked or focused, or a key is pressed\n  'click .accept, focus .accept, keypress': function (event) { ... }\n}\n\n\n\n\n{{#if isCreatingTeam}}\n    \nform class=\ncreate-team\n\n      \ninput name=\nname\n type=\ntext\n\n      \nbutton type=\nsubmit\nSubmit\n/button\n\n      \na class=\ncancel\n href=\n#\nCancel\n/a\n\n    \n/form\n\n{{else}}\n    \na class=\ncreate\n href=\n#\nCreate\n/a\n\n{{/if}}\n\n\n\n\nTemplate.teams.helpers({\n  isCreatingTeam: function(){\n    return Session.get('isCreatingTeam');\n  },\n  teams: function(){\n    return Teams.find();\n  }\n});\n\nTemplate.teams.events({\n  'click a.create': function(e, tpl){\n    e.preventDefault();\n    Session.set('isCreatingTeam', true);\n  },\n\n  'click a.cancel': function(e, tpl){\n    e.preventDefault();\n    Session.set('isCreatingTeam', false);\n  },\n\n  'submit form.create-team': function(e, tpl){\n    e.preventDefault();\n    var teamName = $('input[name=name]').val();\n    Teams.insert({name: teamName});\n  }\n});\n\n\n\n\nR\u00e9cup\u00e9rer une valeur du template\n\n\nvar teamName = tpl.$('input[name=name]').val();\n\n\n\n\nUtilisation d'un callback dans les actions d'\u00e9criture\n\n\nLa fonction \nfunction(error, _id)\n sera pass\u00e9 au serveur et permettra d'attendre sa r\u00e9ponse.\n\n\n  'submit form.create-team': function(e, tpl){\n    e.preventDefault();\n    var teamName = tpl.$('input[name=name]').val();\n    Teams.insert({name: teamName}, function(error, _id){\n      if(error){\n        alert(error);\n        Session.set('isCreatingTeam', true);\n        tpl.$('input[name=name]').val(teamName);\n      }\n    });\n    Session.set('isCreatingTeam', false);\n  }\n\n\n\n\nTips - Lien delete\n\n\nul\n\n    {{#each teams}}\n        \nli\n{{name}} \na class=\nremove\n href=\n#\n(x)\n/a\n/li\n\n    {{/each}}\n\n/ul\n\n\n\n\n\n// this._id fait r\u00e9f\u00e9rence \u00e0 l'objet courant dans le template\n'click a.remove': function(e, tpl){\n    e.preventDefault();\n    Teams.remove(this._id);\n}\n\n\n\n\nTips - Passer du code HTML \u00e0 une template dans une variable\n\n\nDans le template au lieu d'utiliser \"{{myvar}}\" il faut ajouter une accolade \"{{{myvar}}}\"\n\n\nTips - Manipuler une url dans le helper\n\n\n// this.url provient du template\nTemplate.postItem.helpers({\n  domain: function() {\n    var a = document.createElement('a');\n    a.href = this.url;\n    return a.hostname;\n  }\n});\n\n\n\n\nTips - afterFlush\n\n\n\n\nhttp://docs.meteor.com/#/full/tracker_afterflush\n\n\n\n\nTeams.insert({name: teamName}, function(error, _id){\n  if(error){\n    alert(error);\n    Session.set('isCreatingTeam', true);\n    Tracker.afterFlush(function(){\n      tpl.$('input[name=name]').val(teamName);\n    });\n  }\n});", 
            "title": "Templates"
        }, 
        {
            "location": "/templating/#templates-meteor", 
            "text": "Les templates Meteor sont bas\u00e9s sur  spacebars  qui provient de  handlebarsjs , lui m\u00eame utilisant une syntaxe  Mustache .   http://fr.discovermeteor.com/chapters/templates/", 
            "title": "Templates Meteor"
        }, 
        {
            "location": "/templating/#events", 
            "text": "click et submit  {\n  // Fires when any element is clicked\n  'click': function (event) { ... },\n\n  // Fires when any element with the 'accept' class is clicked\n  'click .accept': function (event) { ... },\n\n  // Fires when 'accept' is clicked or focused, or a key is pressed\n  'click .accept, focus .accept, keypress': function (event) { ... }\n}  {{#if isCreatingTeam}}\n     form class= create-team \n       input name= name  type= text \n       button type= submit Submit /button \n       a class= cancel  href= # Cancel /a \n     /form \n{{else}}\n     a class= create  href= # Create /a \n{{/if}}  Template.teams.helpers({\n  isCreatingTeam: function(){\n    return Session.get('isCreatingTeam');\n  },\n  teams: function(){\n    return Teams.find();\n  }\n});\n\nTemplate.teams.events({\n  'click a.create': function(e, tpl){\n    e.preventDefault();\n    Session.set('isCreatingTeam', true);\n  },\n\n  'click a.cancel': function(e, tpl){\n    e.preventDefault();\n    Session.set('isCreatingTeam', false);\n  },\n\n  'submit form.create-team': function(e, tpl){\n    e.preventDefault();\n    var teamName = $('input[name=name]').val();\n    Teams.insert({name: teamName});\n  }\n});", 
            "title": "Events"
        }, 
        {
            "location": "/templating/#recuperer-une-valeur-du-template", 
            "text": "var teamName = tpl.$('input[name=name]').val();", 
            "title": "R\u00e9cup\u00e9rer une valeur du template"
        }, 
        {
            "location": "/templating/#utilisation-dun-callback-dans-les-actions-decriture", 
            "text": "La fonction  function(error, _id)  sera pass\u00e9 au serveur et permettra d'attendre sa r\u00e9ponse.    'submit form.create-team': function(e, tpl){\n    e.preventDefault();\n    var teamName = tpl.$('input[name=name]').val();\n    Teams.insert({name: teamName}, function(error, _id){\n      if(error){\n        alert(error);\n        Session.set('isCreatingTeam', true);\n        tpl.$('input[name=name]').val(teamName);\n      }\n    });\n    Session.set('isCreatingTeam', false);\n  }", 
            "title": "Utilisation d'un callback dans les actions d'\u00e9criture"
        }, 
        {
            "location": "/templating/#tips-lien-delete", 
            "text": "ul \n    {{#each teams}}\n         li {{name}}  a class= remove  href= # (x) /a /li \n    {{/each}} /ul   // this._id fait r\u00e9f\u00e9rence \u00e0 l'objet courant dans le template\n'click a.remove': function(e, tpl){\n    e.preventDefault();\n    Teams.remove(this._id);\n}", 
            "title": "Tips - Lien delete"
        }, 
        {
            "location": "/templating/#tips-passer-du-code-html-a-une-template-dans-une-variable", 
            "text": "Dans le template au lieu d'utiliser \"{{myvar}}\" il faut ajouter une accolade \"{{{myvar}}}\"", 
            "title": "Tips - Passer du code HTML \u00e0 une template dans une variable"
        }, 
        {
            "location": "/templating/#tips-manipuler-une-url-dans-le-helper", 
            "text": "// this.url provient du template\nTemplate.postItem.helpers({\n  domain: function() {\n    var a = document.createElement('a');\n    a.href = this.url;\n    return a.hostname;\n  }\n});", 
            "title": "Tips - Manipuler une url dans le helper"
        }, 
        {
            "location": "/templating/#tips-afterflush", 
            "text": "http://docs.meteor.com/#/full/tracker_afterflush   Teams.insert({name: teamName}, function(error, _id){\n  if(error){\n    alert(error);\n    Session.set('isCreatingTeam', true);\n    Tracker.afterFlush(function(){\n      tpl.$('input[name=name]').val(teamName);\n    });\n  }\n});", 
            "title": "Tips - afterFlush"
        }, 
        {
            "location": "/social-auth/", 
            "text": "Authentification Sociale\n\n\n\n\nhttps://github.com/ongoworks/meteor-accounts-docker\n\n\n\n\nConfiguration Accounts.ui pour l'authentification sociales\n\n\nAccounts.ui.config({\n  requestPermissions: {\n    facebook: ['user_likes'],\n    github: ['user', 'repo']\n  },\n  requestOfflineToken: {\n    google: true\n  },\n  passwordSignupFields: 'USERNAME_AND_OPTIONAL_EMAIL'\n});\n\n\n\nPermissions par provider\n\n\n\n\nFacebook: http://developers.facebook.com/docs/authentication/permissions/\n\n\nGitHub: http://developer.github.com/v3/oauth/#scopes\n\n\nGoogle: https://developers.google.com/accounts/docs/OAuth2Login#scopeparameter\n\n\nMeetup: http://www.meetup.com/meetup_api/auth/#oauth2-scopes\n\n\nTwitter, Weibo, Meteor developer accounts: requestPermissions currently not supported\n\n\n\n\nlinkedin\n\n\n\n\nhttps://atmospherejs.com/pauli/accounts-linkedin\n\n\nhttps://github.com/PauliBuccini/meteor-accounts-linkedin/\n\n\nhttp://linkedin.com/\n\n\nhttps://developer.linkedin.com/docs/oauth2\n\n\nCr\u00e9ation d'une application : https://www.linkedin.com/developer/apps/new\n\n\n\n\n\n$ meteor add pauli:accounts-linkedin\n\n\n\n\n\nService Configuration:\n\n\n\n\nPar javascript\n\n\n\n\n\nServiceConfiguration.configurations.update(\n    { service: \nlinkedin\n },\n    { $set: {\n        clientId: \nXXXXXXXXXXXXXX\n,\n        secret: \nXXXXXXXXXXXXXXXX\n\n      }\n    },\n    { upsert: true }\n);\n\n\n\n\n\nMeteor Developpeur\n\n\n\n\nhttps://atmospherejs.com/meteor/accounts-meteor-developer\n\n\n\n\ngithub\n\n\n\n\nhttps://atmospherejs.com/meteor/accounts-github\n\n\nhttp://moduscreate.com/diving-into-meteorjs/\n\n\n\n\nService Configuration:\n\n\n\n\nPar javascript\n\n\n\n\n\nServiceConfiguration.configurations.update(\n    { service: \ngithub\n },\n    { $set: {\n        clientId: \nXXXXXXXXXXXXXXXXXXXXXXXX\n,\n        secret: \nXXXXXXXXXXXXXXXXXXXXXXXX\n\n      }\n    },\n    { upsert: true }\n);\n\n\n\n\n\n\n\nPar le settings.json\n\n\n\n\nFacebook\n\n\nService Configuration:\n\n\n\n\nPar javascript\n\n\n\n\n\nServiceConfiguration.configurations.update(\n    { service: \nfacebook\n },\n    { $set: {\n        appId: \nXXXXXXXXXXXXXXX\n,\n        secret: \nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n\n      }\n    },\n    { upsert: true }\n);\n\n\n\n\n\nGoogle\n\n\nService Configuration:\n\n\n\n\nPar javascript\n\n\n\n\n\nServiceConfiguration.configurations.update(\n    { service: \ngoogle\n },\n    { $set: {\n        clientId: \nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n,\n        client_email: \nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n,\n        secret: \nXXXXXXXXXXXXXXXXXXXXXXXX\n\n      }\n    },\n    { upsert: true }\n);\n\n\n\n\n\nmeteor-developer\n\n\nService Configuration:\n\n\n\n\nPar javascript\n\n\n\n\n\nServiceConfiguration.configurations.update(\n    { service: \nmeteor-developer\n },\n    { $set: {\n        clientId: \nXXXXXXXXXXXXXXXXX\n,\n        secret: \nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n\n      }\n    },\n    { upsert: true }\n);", 
            "title": "Authentification Sociale"
        }, 
        {
            "location": "/social-auth/#authentification-sociale", 
            "text": "https://github.com/ongoworks/meteor-accounts-docker", 
            "title": "Authentification Sociale"
        }, 
        {
            "location": "/social-auth/#configuration-accountsui-pour-lauthentification-sociales", 
            "text": "Accounts.ui.config({\n  requestPermissions: {\n    facebook: ['user_likes'],\n    github: ['user', 'repo']\n  },\n  requestOfflineToken: {\n    google: true\n  },\n  passwordSignupFields: 'USERNAME_AND_OPTIONAL_EMAIL'\n});  Permissions par provider   Facebook: http://developers.facebook.com/docs/authentication/permissions/  GitHub: http://developer.github.com/v3/oauth/#scopes  Google: https://developers.google.com/accounts/docs/OAuth2Login#scopeparameter  Meetup: http://www.meetup.com/meetup_api/auth/#oauth2-scopes  Twitter, Weibo, Meteor developer accounts: requestPermissions currently not supported", 
            "title": "Configuration Accounts.ui pour l'authentification sociales"
        }, 
        {
            "location": "/social-auth/#linkedin", 
            "text": "https://atmospherejs.com/pauli/accounts-linkedin  https://github.com/PauliBuccini/meteor-accounts-linkedin/  http://linkedin.com/  https://developer.linkedin.com/docs/oauth2  Cr\u00e9ation d'une application : https://www.linkedin.com/developer/apps/new   \n$ meteor add pauli:accounts-linkedin  Service Configuration:   Par javascript   \nServiceConfiguration.configurations.update(\n    { service:  linkedin  },\n    { $set: {\n        clientId:  XXXXXXXXXXXXXX ,\n        secret:  XXXXXXXXXXXXXXXX \n      }\n    },\n    { upsert: true }\n);", 
            "title": "linkedin"
        }, 
        {
            "location": "/social-auth/#meteor-developpeur", 
            "text": "https://atmospherejs.com/meteor/accounts-meteor-developer", 
            "title": "Meteor Developpeur"
        }, 
        {
            "location": "/social-auth/#github", 
            "text": "https://atmospherejs.com/meteor/accounts-github  http://moduscreate.com/diving-into-meteorjs/   Service Configuration:   Par javascript   \nServiceConfiguration.configurations.update(\n    { service:  github  },\n    { $set: {\n        clientId:  XXXXXXXXXXXXXXXXXXXXXXXX ,\n        secret:  XXXXXXXXXXXXXXXXXXXXXXXX \n      }\n    },\n    { upsert: true }\n);   Par le settings.json", 
            "title": "github"
        }, 
        {
            "location": "/social-auth/#facebook", 
            "text": "Service Configuration:   Par javascript   \nServiceConfiguration.configurations.update(\n    { service:  facebook  },\n    { $set: {\n        appId:  XXXXXXXXXXXXXXX ,\n        secret:  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX \n      }\n    },\n    { upsert: true }\n);", 
            "title": "Facebook"
        }, 
        {
            "location": "/social-auth/#google", 
            "text": "Service Configuration:   Par javascript   \nServiceConfiguration.configurations.update(\n    { service:  google  },\n    { $set: {\n        clientId:  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX ,\n        client_email:  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX ,\n        secret:  XXXXXXXXXXXXXXXXXXXXXXXX \n      }\n    },\n    { upsert: true }\n);", 
            "title": "Google"
        }, 
        {
            "location": "/social-auth/#meteor-developer", 
            "text": "Service Configuration:   Par javascript   \nServiceConfiguration.configurations.update(\n    { service:  meteor-developer  },\n    { $set: {\n        clientId:  XXXXXXXXXXXXXXXXX ,\n        secret:  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX \n      }\n    },\n    { upsert: true }\n);", 
            "title": "meteor-developer"
        }, 
        {
            "location": "/autoform-semantic-ui/", 
            "text": "semantic-ui - autoform et autres composants\n\n\nTemplate Semantic-ui pour le package aldeed:autoform.\n\n\n\n\nhttps://atmospherejs.com/fabienb4/autoform-semantic-ui\n\n\nhttps://github.com/fabienb4/meteor-autoform-semantic-ui\n\n\n\n\nInstallation\n\n\nD\u00e9pendances: templating, underscore, aldeed:autoform\n\n\n$ meteor add semantic:ui-css\n$ meteor add fabienb4:autoform-semantic-ui\n$ meteor add fabienb4:semantic-ui-components\n\n\n\n\nConfiguration globale:\n\n\n\n//client/startup.js\nMeteor.startup(function() {\n    AutoForm.setDefaultTemplate(\nsemanticUI\n);\n});\n\n\n\n\n\nConfiguration par formulaire:\n\n\n{{#autoForm collection=\nItems\n id=\nitemsInsertForm\n type=\ninsert\n template=\nsemanticUI\n}}\n...\n{{/autoForm}}\n\n\n\n\nUsage\n\n\nChamps select\n - http://semantic-ui.com/collections/form.html#basic-select\n\n\n{{\n afQuickField name=\nitems\n type=\nbasic-select\n options=items}}\n\n\n\n\n\n// Template helpers:\nTemplate.main.helpers({\n    items: [\n      { value: \n1\n, label: \nItem 1\n },\n      { value: \n2\n, label: \nItem 2\n }\n    ];\n});\n\n\n\n\nsemantic-ui-components\n\n\n\n\nhttps://atmospherejs.com/fabienb4/semantic-ui-components\n\n\nhttps://github.com/fabienb4/meteor-semantic-ui-components/\n\n\n\n\nConnectionLost\n\n\nRouter.configure({\n  loadingTemplate: \"Loading\",\n  onBeforeAction: function() {\n    if (! Meteor.status().connected) {\n      this.render(\"ConnectionLost\");\n    } else {\n      this.next();\n    }\n  }\n});\n\n\n\nprogressBar\n\n\nExemples avec des variables Reactive (maxValue \n currentValue)\n\n\n// Small inverted progress bar\n{{\n progressBar classNames=\"small inverted\" current=currentValue total=maxValue}}\n\n// Progress bar that changes color when completed\n{{\n progressBar current=currentValue total=maxValue completeClass=\"green\"}}\n\n// Progress bar with style when low (useful for countdown)\n{{\n progressBar current=currentValue total=maxValue styleLowBar=true low=20 veryLow=10}}\n\n// Progress bar with ratio display\n{{\n progressBar current=currentValue total=maxValue showRatio=true}}\n\n// Progress bar with percent display\n{{\n progressBar current=currentValue total=maxValue showPercent=true}}\n\n// Colored progress bar with label display\n{{\n progressBar classNames=\"labeled green\" label=\"Capacity\" current=currentValue total=maxValue}}\n\n// Colored progress bar with label \n ratio display\n{{\n progressBar label=\"Capacity\" current=currentValue total=maxValue showRatio=true}}\n\n\n\nsearchInput\n\n\n{{\n searchInput}}\n\n// With ID\n{{\n searchInput id=\"searchName\"}}\n\n// With placeholder\n{{\n searchInput placeholder=\"Search...\"}}\n\n\n\nselectDropdown\n\n\n// Simple\nitems = [\n  { value: \"1\", label: \"Item 1\" },\n  { value: \"2\", label: \"Item 2\" }\n];\n\n// With icons/flags\nitems = [\n  { value: \"1\", label: \"Item 1\", icon: \"file text icon\" },\n  { value: \"2\", label: \"Item 2\", icon: \"bz flag\" }\n];\n\n// Groups with headers\nitems = [\n  {\n    itemGroup: \"Group one\",\n    items: [\n      { value: \"1\", label: \"Item 1\" },\n      { value: \"2\", label: \"Item 2\" }\n    ]\n  },\n  {\n    itemGroup: \"Group two\",\n    items: [\n      { value: \"3\", label: \"Item 3\" },\n      { value: \"4\", label: \"Item 4\" }\n    ]\n  }\n]\n\n// Simple\n{{\n selectDropdown items=items label=\"Items\" name=\"items\"}}\n\n// With a custom placeholder\n{{\n selectDropdown items=items label=\"Items\" name=\"items\" placeholder=\"Select an item\"}}\n\n// Required select\n{{\n selectDropdown items=items label=\"Items\" name=\"items\" required=true}}\n\n// Searchable select\n{{\n selectDropdown items=items label=\"Items\" name=\"items\" search=true}}\n\n// Searchable select with full text search\n{{\n selectDropdown items=items label=\"Items\" name=\"items\" fullTextSearch=true}}\n\n\n\nReversing animation\n\n\ni class=\"reversing magnet icon\"\n/i", 
            "title": "autoform-semantic-ui"
        }, 
        {
            "location": "/autoform-semantic-ui/#semantic-ui-autoform-et-autres-composants", 
            "text": "Template Semantic-ui pour le package aldeed:autoform.   https://atmospherejs.com/fabienb4/autoform-semantic-ui  https://github.com/fabienb4/meteor-autoform-semantic-ui   Installation  D\u00e9pendances: templating, underscore, aldeed:autoform  $ meteor add semantic:ui-css\n$ meteor add fabienb4:autoform-semantic-ui\n$ meteor add fabienb4:semantic-ui-components  Configuration globale:  \n//client/startup.js\nMeteor.startup(function() {\n    AutoForm.setDefaultTemplate( semanticUI );\n});  Configuration par formulaire:  {{#autoForm collection= Items  id= itemsInsertForm  type= insert  template= semanticUI }}\n...\n{{/autoForm}}  Usage  Champs select  - http://semantic-ui.com/collections/form.html#basic-select  {{  afQuickField name= items  type= basic-select  options=items}}  // Template helpers:\nTemplate.main.helpers({\n    items: [\n      { value:  1 , label:  Item 1  },\n      { value:  2 , label:  Item 2  }\n    ];\n});", 
            "title": "semantic-ui - autoform et autres composants"
        }, 
        {
            "location": "/autoform-semantic-ui/#semantic-ui-components", 
            "text": "https://atmospherejs.com/fabienb4/semantic-ui-components  https://github.com/fabienb4/meteor-semantic-ui-components/   ConnectionLost  Router.configure({\n  loadingTemplate: \"Loading\",\n  onBeforeAction: function() {\n    if (! Meteor.status().connected) {\n      this.render(\"ConnectionLost\");\n    } else {\n      this.next();\n    }\n  }\n});  progressBar  Exemples avec des variables Reactive (maxValue   currentValue)  // Small inverted progress bar\n{{  progressBar classNames=\"small inverted\" current=currentValue total=maxValue}}\n\n// Progress bar that changes color when completed\n{{  progressBar current=currentValue total=maxValue completeClass=\"green\"}}\n\n// Progress bar with style when low (useful for countdown)\n{{  progressBar current=currentValue total=maxValue styleLowBar=true low=20 veryLow=10}}\n\n// Progress bar with ratio display\n{{  progressBar current=currentValue total=maxValue showRatio=true}}\n\n// Progress bar with percent display\n{{  progressBar current=currentValue total=maxValue showPercent=true}}\n\n// Colored progress bar with label display\n{{  progressBar classNames=\"labeled green\" label=\"Capacity\" current=currentValue total=maxValue}}\n\n// Colored progress bar with label   ratio display\n{{  progressBar label=\"Capacity\" current=currentValue total=maxValue showRatio=true}}  searchInput  {{  searchInput}}\n\n// With ID\n{{  searchInput id=\"searchName\"}}\n\n// With placeholder\n{{  searchInput placeholder=\"Search...\"}}  selectDropdown  // Simple\nitems = [\n  { value: \"1\", label: \"Item 1\" },\n  { value: \"2\", label: \"Item 2\" }\n];\n\n// With icons/flags\nitems = [\n  { value: \"1\", label: \"Item 1\", icon: \"file text icon\" },\n  { value: \"2\", label: \"Item 2\", icon: \"bz flag\" }\n];\n\n// Groups with headers\nitems = [\n  {\n    itemGroup: \"Group one\",\n    items: [\n      { value: \"1\", label: \"Item 1\" },\n      { value: \"2\", label: \"Item 2\" }\n    ]\n  },\n  {\n    itemGroup: \"Group two\",\n    items: [\n      { value: \"3\", label: \"Item 3\" },\n      { value: \"4\", label: \"Item 4\" }\n    ]\n  }\n]\n\n// Simple\n{{  selectDropdown items=items label=\"Items\" name=\"items\"}}\n\n// With a custom placeholder\n{{  selectDropdown items=items label=\"Items\" name=\"items\" placeholder=\"Select an item\"}}\n\n// Required select\n{{  selectDropdown items=items label=\"Items\" name=\"items\" required=true}}\n\n// Searchable select\n{{  selectDropdown items=items label=\"Items\" name=\"items\" search=true}}\n\n// Searchable select with full text search\n{{  selectDropdown items=items label=\"Items\" name=\"items\" fullTextSearch=true}}  Reversing animation  i class=\"reversing magnet icon\" /i", 
            "title": "semantic-ui-components"
        }, 
        {
            "location": "/useraccounts/", 
            "text": "useraccounts\n\n\n\n\nhttps://github.com/meteor-useraccounts/core/blob/master/Guide.md\n\n\nhttps://atmospherejs.com/useraccounts/core\n\n\nhttps://github.com/meteor-useraccounts/core/\n\n\nhttps://useraccounts-semantic-ui.meteor.com/\n\n\n\n\nhttps://github.com/meteor-useraccounts/semantic-ui\n\n\n\n\n\n\nD\u00e9mo: http://useraccounts.meteor.com/\n\n\n\n\nBoilerplate pour chaque besoin: https://github.com/meteor-useraccounts/boilerplates\n\n\n\n\nTODO\n\n\n\n\nD\u00e9finition d'un sch\u00e9ma pour la collection Meteor.users\n\n\nRendre obligatoire l'auth sur les routes /admin/* par exemple\n\n\nUsage de la collection meteor_accounts_loginServiceConfiguration\n\n\nloginServiceConfiguration (DEFAULT_LOGIN_EXPIRATION_DAYS, ...)\n\n\nhttps://github.com/meteor/meteor/blob/master/packages/accounts-base/accounts_common.js#L55\n\n\nHooks standard: Accounts.onLogin, Accounts.onLoginFailure\n\n\n\n\nIntroduction\n\n\nuseraccounts:core fournit toutes les fonctions de base mais aucun template.\n\n\nil faut utiliser une des extensions comme useraccounts:semantic-ui pour obtenir des templates.\n\n\nExemple avec le bouton de connection:\n\n\n{{\n atNavButton}}\n\n\n\n\n\n\n\nLe code correspondant se trouve dans:\n\n\nhttps://github.com/meteor-useraccounts/semantic-ui/blob/master/lib/at_nav_button.html\n\n\nhttps://github.com/meteor-useraccounts/semantic-ui/blob/master/lib/at_nav_button.js\n\n\n\n\n\n\n\n\nRelation avec les packages standard Meteor\n\n\n\n\n\n\nhttps://www.meteor.com/accounts\n\n\nA priori, appartient \u00e0 accounts-ui-unstyled - https://github.com/meteor/meteor/tree/devel/packages/accounts-ui-unstyled\npasswordSignupFields: 'EMAIL_ONLY'\n\n\nAccounts.ui.config({\n  requestPermissions: {\n    facebook: ['user_likes'],\n    github: ['user', 'repo']\n  },\n  requestOfflineToken: {\n    google: true\n  },\n  passwordSignupFields: 'USERNAME_AND_OPTIONAL_EMAIL' //  'USERNAME_AND_EMAIL', 'USERNAME_AND_OPTIONAL_EMAIL', 'USERNAME_ONLY', or 'EMAIL_ONLY' (default).\n});\n\n\nAccounts.validateLoginAttempt\nAccounts.onLoginFailure\nAccounts.onLogin\nMeteor.logoutOtherClients\n//locked-account or unauthorized-ip.\nMeteor.user()\nMeteor.loggingIn()\n\n\naccounts-ui\n    Accounts.loginWithPassword, Accounts.loginWithFacebook, Accounts.createUser and Accounts.forgotPassword\n\n\n\n\n\n\nExemple d'Installation - Authentification par mot de passe - Templates Semantic-ui\n\n\n\n\nNe pas installer accounts-ui ?\n\n\nLe package installe d\u00e9j\u00e0 useraccounts:core accounts-base\n\n\nIl ne faut pas installer directement le package useraccounts:core mais son impl\u00e9mentation selon le framework utilis\u00e9\n\n\nInstaller les packages providers comme accounts-password, accounts-github, ... selon les besoins\n\n\n\n\n$ meteor add accounts-password\n$ meteor add semantic:ui-css\n$ meteor add useraccounts:semantic-ui\n\n\n\n\nPlugin ensureSignedIn\n\n\n\n\nRend obligatoire l'authentification pour toutes les routes\n\n\n\n\n\nRouter.plugin('ensureSignedIn');\n\n\n\n\n\n\n\n\n\nRend obligatoire l'authentification pour les routes plac\u00e9s dans only[]\n\n\n\n\n\n\nVoir diff\u00e9rence avec AccountsTemplates.configureRoute('ensureSignedIn') ?\n\n\n\n\n\n\n\nRouter.plugin('ensureSignedIn', {\n  only: ['private']\n});\n\n\n\n\n\n\n\nRend obligatoire l'authentification pour toutes les routes sauf celles plac\u00e9s dans except[]\n\n\n\n\n\nRouter.plugin('ensureSignedIn', {\n    except: ['home', 'atSignIn', 'atSignUp', 'atForgotPassword']\n});\n\n\n\n\n\n\n\nPersonnalisation du template et layout\n\n\n\n\n\nAccountsTemplates.configureRoute('ensureSignedIn', {\n    template: 'myLogin',\n    layoutTemplate: 'myLayout',\n});\n\n\n\n\n\nApi\n\n\n\n\nPackage inclus avec Meteor: Account, AccountsServer\n\n\nCot\u00e9 client, Accounts = new AccountsClient();\n\n\nCot\u00e9 server, Accounts = new AccountsServer(Meteor.server);\n\n\nMeteor.users est remplac\u00e9 par Accounts.users\n\n\n\n\n\n\n\n\nTemplate atForm\n\n\n\n\nPar exemple pour customiser le template d'authentification, placez dans un template\n\n\n\n\n{{\n atForm state='signUp'}}\n\nOU\n\n{{\n atForm}} car le state par d\u00e9faut est signUp\n\n\n\n\n\nStates\n\n\nchangePwd               Formulaire de changement de mot de passe\n\nenrollAccount           Formulaire d'inscription ???\n\nforgotPwd               Formulaire pour saisir une email \u00e0 laquelle sera envoy\u00e9 le lien de r\u00e9cup\u00e9ration de mot de passe\n\nhide                    Aucun\n\nresendVerificationEmail Envoi d'un nouveau mail de v\u00e9rification\n\nresetPwd                R\u00e9initialisation du mot de passe\n\nsignIn                  Formulaire d'authentification\n\nsignUp                  ?\n\nverifyEmail             R\u00e9sultat apr\u00e8s avoir cliqu\u00e9 sur le lien de r\u00e9cup\u00e9ration de mot de passe re\u00e7u par mail\n\n\n\nBouton atNavButton\n\n\n\n\n\n\n\nConfiguration\n\n\n\n\n\n\nhttps://github.com/meteor-useraccounts/core/blob/master/Guide.md\n\n\n\n\n\n\nPlacez la configuration dans lib/config/at_config.js\n\n\n\n\n\n\nRoutage\n\n\nIl n'y a aucune route par d\u00e9faut.\n\n\nLa d\u00e9finition des routes par AccountsTemplates.configureRoute() s'utilise comme les routes habituels d'Iron Router\n\n\nChaque route peut \u00eatre d\u00e9finit avec ses param\u00e8tres par d\u00e9faut ou personnalis\u00e9\n\n\n\nAccountsTemplates.configureRoute('signIn');\n\nAccountsTemplates.configureRoute('signIn', {\n    name: 'signin',\n    path: '/login',\n    template: 'myLogin',\n    layoutTemplate: 'myLayout',\n    redirect: '/user-profile',\n});\n\nAccountsTemplates.configureRoute('signIn', {\n    // Redirige vers /user/ae8WQQk6DrtDzA2AZ apr\u00e8s une authentification r\u00e9ussie\n    redirect: function(){\n        var user = Meteor.user();\n        if (user)\n          Router.go('/user/' + user._id);\n    }\n});\n\n\n\n\n\nExemple de configuration compl\u00e8te\n\n\n\n// lib/config/at_config.js\nAccountsTemplates.configure({\n    // Behaviour\n    confirmPassword: true,                  // (default: true) - Demande la confirmation du mot de passe (register)\n    defaultState: \nsignIn\n,                 // (default: signIn) - State par d\u00e9faut\n    enablePasswordChange: true,             // (default: false) - Active la fonction de changement de mot de passe\n    enforceEmailVerification: false,        // (default: false) - experimental - A utiliser seulement avec le service accounts-password\n\n    forbidClientAccountCreation: false,     // (default: false) - Si true, d\u00e9sactive l'enregistrement\n                                            // Remplace Accounts.config({forbidClientAccountCreation : true});\n\n    overrideLoginErrors: true,              // (default: true) - Si true, affiche erreur g\u00e9n\u00e9rique de connection sans pr\u00e9ciser si mauvais login ou pass\n    sendVerificationEmail: false,           // (default: false) - Si true, envoi un lien de confirmation par mail pour chaque nouvel utilisateur\n    redirectTimeout: 2000,                  // (default: 2000) - Timeout de redirection apr\u00e8s: enrollAccount, forgotPwd, resetPwd, ou verifyEmail\n    lowercaseUsername: false,               // (default: false) - A REVOIR\n    socialLoginStyle: 'popup',              // (default: popup) - Voir LoginStyle - choix (redirect, popup)\n                                            // Si popup, ouvre la page d'authentification du service dans un modal\n\n    // Appearance\n    defaultLayout: undefined,               // (default: undefined)\n    hideSignInLink: false,                  // (default: false) - Si true, n'affiche jamais le lien de connection\n    hideSignUpLink: false,                  // (default: false) - Si true, n'affiche jamais le lien de d\u00e9connection\n    showAddRemoveServices: false,           // (default: false) - A revoir - en rapport avec synchro comptes sociaux - https://atmospherejs.com/splendido/accounts-meld\n    showForgotPasswordLink: false,          // (default: false) - Si true, affiche lien de r\u00e9cup\u00e9ration de mot de passe\n    showLabels: true,                       // (default: true) - si true, affiche les label au dessous des champs dans les formulaires\n    showPlaceholders: true,                 // (default: false) - si true, Affiche les placeholders dans les champs\n    showResendVerificationEmailLink: false, // (default: false) - Si true, affiche le lien pour envoyer \u00e0 nouveau le mail de v\u00e9rification\n\n    // Client-side Validation\n    continuousValidation: false,            // (default: false) - Active la validation cot\u00e9 client pendant la saisie\n    negativeFeedback: false,                // (default: false) - continuousValidation\n    negativeValidation: true,               // (default: false) - continuousValidation\n    positiveValidation: true,               // (default: false) - continuousValidation\n    positiveFeedback: true,                 // (default: false) - continuousValidation\n    showValidating: true,                   // (default: false) -\n\n    // Links\n    homeRoutePath: '/',                     // (default: /) - Pas Home pour les redirections\n    //privacyUrl: 'privacy',                // (default: undefined) - Affiche lien ?\n    //termsUrl: 'terms-of-use',             // (default: undefined) - Affiche lien ?\n\n    // Hooks\n    //onLogoutHook: myLogoutFunc,           // Hook de routage appell\u00e9 par AccountsTemplates.logout\n    //onSubmitHook: mySubmitFunc,           // Hook appell\u00e9 quand submit d'un des formulaire est ok - func(error, state)\n    //preSignUpHook: myPreSubmitFunc,       // Comme ci-dessous mais appell\u00e9 avant submit - func(password, info)\n\n    // Texts customization\n    /*\n    texts: {\n      button: {\n          signUp: \nRegister Now!\n\n      },\n      socialSignUp: \nRegister\n,\n      socialIcons: {\n          \nmeteor-developer\n: \nfa fa-rocket\n\n      },\n      title: {\n          forgotPwd: \nRecover Your Password\n\n      },\n    },\n    */\n});\n\n\n\n\n\nConfiguration ReCapcha\n\n\nrecaptcha\n\n\nLes cl\u00e9s peuvent se configurer ici ou dans Meteor.Settings ou dans settings.json\n\n\nAccountsTemplates.configure({\n    reCaptcha: {\n        siteKey: YOUR SITE KEY,\n        secretKey: YOUR SECRET KEY,\n        theme: \nlight\n, // light ou dark\n        data_type: \nimage\n // image ou audio\n    },\n    showReCaptcha: true\n});\n\n\n\n\n\nExemple de SubmitHook\n\n\n\nvar mySubmitFunc = function(error, state){\n  if (!error) {\n    if (state === \nsignIn\n) {\n      // Successfully logged in\n      // ...\n    }\n    if (state === \nsignUp\n) {\n      // Successfully registered\n      // ...\n    }\n  }\n};\n\nAccountsTemplates.configure({\n    onSubmitHook: mySubmitFunc\n});\n\n\n\n\nPersonnalisation de la structure des champs de formulaire\n\n\nExemple de personnalisation des champs avec \naldeed:template-extension\n pour le package \nuseraccounts:semantic-ui\n\n\nChamps sp\u00e9ciaux qu'il faut supprimer avant de red\u00e9finir\n\n\ncurrent_password\nemail\npassword\npassword_again\nusername\nusername_and_email\n\n\n\nExemple avec le champs password\n\n\nAccountsTemplates.removeField('password');\nAccountsTemplates.addField({\n    _id: 'password',\n    type: 'password',\n    required: true,\n    minLength: 6,\n    re: /(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}/,\n    errStr: 'At least 1 digit, 1 lower-case and 1 upper-case',\n});\n\n\n\n\nParticularit\u00e9 de la customisation des champs username ou email\n\n\nIl faut imp\u00e9rativement supprimer le champs password avant de r\u00e9d\u00e9finir username ou password\n\n\nPour ne pas avoir \u00e0 d\u00e9finir \u00e0 nouveau password, proc\u00e9dez comme ci-dessous:\n\n\nvar pwd = AccountsTemplates.removeField('password');\nAccountsTemplates.removeField('email');\nAccountsTemplates.addFields([\n  {\n      _id: \nusername\n,\n      type: \ntext\n,\n      displayName: \nusername\n,\n      required: true,\n      minLength: 5,\n  },\n  {\n      _id: 'email',\n      type: 'email',\n      required: true,\n      displayName: \nemail\n,\n      re: /.+@(.+){2,}\\.(.+){2,}/,\n      errStr: 'Invalid email',\n  },\n  pwd\n]);\n\n\n\n\nChangement de la politique de mot de passe\n\n\n**Demande un mot de passe d'au minimum 6 caract\u00e8res\n\n\nAccountsTemplates.addField({\n    _id: 'password',\n    type: 'password',\n    placeholder: {\n        signUp: \nAt least six characters\n\n    },\n    required: true,\n    minLength: 6,\n    re: /(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}/,\n    errStr: 'At least 1 digit, 1 lowercase and 1 uppercase',\n});\n\n\n\n\nAjoute un champs t\u00e9l\u00e9phone\n\n\nChamps phone avec validation cot\u00e9 serveur (fonction isValidPhone \u00e0 d\u00e9finir):\n\n\nAccountsTemplates.addField({\n    _id: 'phone',\n    type: 'tel',\n    displayName: \nPhone\n,\n    required: true,\n    func: function (number) {\n        if (Meteor.isServer){\n          if (isValidPhone(number))\n              return false; // meaning no error!\n          return true; // Validation error!\n        }\n    },\n    errStr: 'Invalid Phone number!',\n});\n\n\n\n\nV\u00e9rifie si le username existe d\u00e9j\u00e0\n\n\n// server/methods.js\nif (Meteor.isServer){\n    Meteor.methods({\n        \nuserExists\n: function(username){\n            return !!Meteor.users.findOne({username: username});\n        },\n    });\n}\n\n// lib/config/at_config.js\nAccountsTemplates.addField({\n    _id: 'username',\n    type: 'text',\n    required: true,\n    func: function(value){\n        if (Meteor.isClient) {\n            console.log(\nValidating username...\n);\n            var self = this;\n            Meteor.call(\nuserExists\n, value, function(err, userExists){\n                if (!userExists)\n                    self.setSuccess();\n                else\n                    self.setError(userExists);\n                self.setValidating(false);\n            });\n            return;\n        }\n        // Server\n        return Meteor.call(\nuserExists\n, value);\n    },\n});\n\n\n\n\nVOIR AUSSI:\n\n\n//Dans la d\u00e9finition d'un sch\u00e9ma\nusername: {\n  type: String,\n  regEx: /^[a-z0-9A-Z_]{3,15}$/,\n  unique: true,\n  custom: function () {\n    if (Meteor.isClient \n this.isSet) {\n      Meteor.call(\naccountsIsUsernameAvailable\n, this.value, function (error, result) {\n        if (!result) {\n          Meteor.users.simpleSchema().namedContext(\ncreateUserForm\n).addInvalidKeys([{name: \nusername\n, type: \nnotUnique\n}]);\n        }\n      });\n    }\n  }\n}\n\n\n\n\nAjout d'un champs Genre\n\n\nAccountsTemplates.addField({\n    _id: \ngender\n,\n    type: \nselect\n,\n    displayName: \nGender\n,\n    select: [\n        {\n            text: \nMale\n,\n            value: \nmale\n,\n        },\n        {\n            text: \nFemale\n,\n            value: \nfemale\n,\n        },\n    ],\n});\n\n\n\n\nChamps de souscription \u00e0 la mailing list\n\n\nAccountsTemplates.addField({\n    _id: \nmailing_list\n,\n    type: \ncheckbox\n,\n    displayName: \nSubscribe me to mailing List\n,\n});\n\n\n\n\nChamps cach\u00e9 contenant un code de validation\n\n\n// http://my.splendido.site/sign-up?email=giorgio@example.com\nreg_code=123\nAccountsTemplates.addField({\n    _id: 'reg_code',\n    type: 'hidden'\n});\n\n\n\n\nInternationalisation - i18n\n\n\naccounts-t9n\n\n\n$ meteor add softwarerero:accounts-t9n\n\n\n\n\n// /lib/config/at_config.js\nT9n.setLanguage(\nfr\n);\n\n\n\n\nPersonnalisation des formulaires UI\n\n\nRequis: \ntemplate-extension\n\n\n$ meteor add aldeed:template-extension\n\n\n\n\ntemplate name=\nappAtInput\n\n  {{#if options.dividerBefore}}\nhr\n{{/if}}\n\n  {{\n Template.dynamic template=templateName}}\n\n/template\n\n\n\n\n\nAccountsTemplates.addField({\n  _id: \naddress\n,\n  type: \ntext\n,\n\n  // Options qui seront pass\u00e9s au formulaire\n  options: {\n    dividerBefore: true\n  }\n});\n\nTemplate.appAtInput.replaces(\natInput\n);\n\n\n\n\nSolution compl\u00e8te avec semantic-ui - hors authentification sociale\n\n\nInstallation\n\n\n$ meteor add accounts-ui-unstyled\n$ meteor add accounts-password\n$ meteor add semantic:ui-css\n$ meteor add softwarerero:accounts-t9n\n$ meteor add useraccounts:semantic-ui\n\n# OU\n$ meteor add accounts-ui-unstyled accounts-password semantic:ui-css softwarerero:accounts-t9n useraccounts:semantic-ui\n\n# OU pour iron cli\n$ iron add accounts-ui-unstyled accounts-password semantic:ui-css softwarerero:accounts-t9n useraccounts:semantic-ui\n\n\n\n\n\nD\u00e9pendances:\n\n\nless\nreactive-var\nhttp\nunderscore\naccounts-base\nreactive-dict\ncheck\nmeteor\ntemplating\nblaze\nuseraccounts:core\niron:router\nsoftwarerero:accounts-t9n\n\n\n\nConfiguration\n\n\nTips - Solution d\u00e9di\u00e9 mobile avec Ratchet\n\n\n\n\nhttps://atmospherejs.com/useraccounts/ratchet\n\n\n\n\nStructure d'un enregistrement d'un compte utilisateur\n\n\n\n\nLa structure peut varier mais il y a des \u00e9l\u00e9ments important \u00e0 noter:\n\n\nemails est une liste d'objet\n\n\nservices est une collections avec comme cl\u00e9, le nom du service\n\n\n\n\n\n\n\n\n{\n  _id: \nbbca5d6a-2156-41c4-89da-0329e8c99a4f\n,  // Meteor.userId()\n  username: \ncool_kid_13\n, // unique name\n  emails: [\n    { address: \ncool@example.com\n, verified: true },\n    { address: \nanother@different.com\n, verified: false }\n  ],\n  createdAt: Wed Aug 21 2013 15:16:52 GMT-0700 (PDT),\n  profile: {\n    name: \nJoe Schmoe\n\n  },\n  services: {\n    facebook: {\n      id: \n709050\n, // facebook id\n      accessToken: \nAAACCgdX7G2...AbV9AZDZD\n\n    },\n    resume: {\n      loginTokens: [\n        { token: \n97e8c205-c7e4-47c9-9bea-8e2ccc0694cd\n,\n          when: 1349761684048 }\n      ]\n    }\n  }\n}\n\n\n\n\n\n\nTips - Publish - Liste des utilisateurs\n\n\n\n\nSource \nmeteor-cookbook\n\n\n\n\n// server/publish.js\nMeteor.publish(\nusersDirectory\n, function () {\n  try{\n    return Meteor.users.find({}, {fields: {\n      '_id': true,\n      'username': true,\n      'profile': true,\n      'profile.name': true,\n      'profile.avatar': true,\n      'profile.username': true,\n\n      'emails': true,\n      'emails[0].address': true,\n      'emails.address': true\n    }});\n  }catch(error){\n    console.log(error);\n  }\n});\n\n\n\n\nTips - Autres solutions\n\n\n\n\nhttps://atmospherejs.com/juliancwirko/s-id\n\n\nSolution Manuelle\n\n\naccounts-entry\n\n\n\n\nTips - Profile Utilisateur et pr\u00e9f\u00e9rences\n\n\n\n// A VOIR\nMeteor.publish(\nUserProfile\n, function(profileUserId) {\n  var permissions;\n  check(profileUserId, Match.OneOf(String, null));\n  permissions = ['dashboard/orders', 'owner', 'admin', 'dashboard/customers'];\n  if (profileUserId !== this.userId) {\n    if (this.userId \n (Roles.userIsInRole(this.userId, permissions, ReactionCore.getCurrentShop(this)._id || Roles.userIsInRole(this.userId, permissions, Roles.GLOBAL_GROUP)))) {\n      return Meteor.users.find({\n        _id: profileUserId\n      }, {\n        fields: {\n          \nemails\n: true,\n          \nprofile.firstName\n: true,\n          \nprofile.lastName\n: true,\n          \nprofile.familyName\n: true,\n          \nprofile.secondName\n: true,\n          \nprofile.name\n: true,\n          \nservices.twitter.profile_image_url_https\n: true,\n          \nservices.facebook.id\n: true,\n          \nservices.google.picture\n: true,\n          \nservices.github.username\n: true,\n          \nservices.instagram.profile_picture\n: true\n        }\n      });\n    } else {\n      ReactionCore.Events.info(\nuser profile access denied\n);\n      return [];\n    }\n  } else if (this.userId) {\n    return Meteor.users.find({\n      _id: this.userId\n    });\n  } else {\n    return [];\n  }\n});\n\n\n\n\nTips - Int\u00e9gration de iron-router-auth\n\n\n\n\nhttps://github.com/zimme/meteor-iron-router-auth\n\n\n\n\n$ meteor add zimme:iron-router-auth\n\n\n\n\n{\n  authenticate: {\n    home: 'home',\n    layout: undefined,\n    logout: 'logout',\n    replaceState: undefined,\n    route: 'login',\n    template: undefined\n  },\n  authorize: {\n    allow: function() {return true},\n    deny: function() {return false}, // deny overrides allow\n    layout: undefined,\n    replaceState: undefined,\n    route: undefined,\n    template: 'notAuthorized'\n  },\n  except: ['enroll', 'forgotPassword', 'home', 'login', 'reset', 'verify'],\n  noAuth: {\n    dashboard: 'dashboard',\n    home: 'home',\n    replaceState: undefined\n  },\n  only: ['enroll', 'login']\n}", 
            "title": "useraccounts"
        }, 
        {
            "location": "/useraccounts/#useraccounts", 
            "text": "https://github.com/meteor-useraccounts/core/blob/master/Guide.md  https://atmospherejs.com/useraccounts/core  https://github.com/meteor-useraccounts/core/  https://useraccounts-semantic-ui.meteor.com/   https://github.com/meteor-useraccounts/semantic-ui    D\u00e9mo: http://useraccounts.meteor.com/   Boilerplate pour chaque besoin: https://github.com/meteor-useraccounts/boilerplates", 
            "title": "useraccounts"
        }, 
        {
            "location": "/useraccounts/#todo", 
            "text": "D\u00e9finition d'un sch\u00e9ma pour la collection Meteor.users  Rendre obligatoire l'auth sur les routes /admin/* par exemple  Usage de la collection meteor_accounts_loginServiceConfiguration  loginServiceConfiguration (DEFAULT_LOGIN_EXPIRATION_DAYS, ...)  https://github.com/meteor/meteor/blob/master/packages/accounts-base/accounts_common.js#L55  Hooks standard: Accounts.onLogin, Accounts.onLoginFailure", 
            "title": "TODO"
        }, 
        {
            "location": "/useraccounts/#introduction", 
            "text": "useraccounts:core fournit toutes les fonctions de base mais aucun template.  il faut utiliser une des extensions comme useraccounts:semantic-ui pour obtenir des templates.  Exemple avec le bouton de connection:  {{  atNavButton}}   Le code correspondant se trouve dans:  https://github.com/meteor-useraccounts/semantic-ui/blob/master/lib/at_nav_button.html  https://github.com/meteor-useraccounts/semantic-ui/blob/master/lib/at_nav_button.js", 
            "title": "Introduction"
        }, 
        {
            "location": "/useraccounts/#relation-avec-les-packages-standard-meteor", 
            "text": "https://www.meteor.com/accounts  A priori, appartient \u00e0 accounts-ui-unstyled - https://github.com/meteor/meteor/tree/devel/packages/accounts-ui-unstyled\npasswordSignupFields: 'EMAIL_ONLY'  Accounts.ui.config({\n  requestPermissions: {\n    facebook: ['user_likes'],\n    github: ['user', 'repo']\n  },\n  requestOfflineToken: {\n    google: true\n  },\n  passwordSignupFields: 'USERNAME_AND_OPTIONAL_EMAIL' //  'USERNAME_AND_EMAIL', 'USERNAME_AND_OPTIONAL_EMAIL', 'USERNAME_ONLY', or 'EMAIL_ONLY' (default).\n});  Accounts.validateLoginAttempt\nAccounts.onLoginFailure\nAccounts.onLogin\nMeteor.logoutOtherClients\n//locked-account or unauthorized-ip.\nMeteor.user()\nMeteor.loggingIn()  accounts-ui\n    Accounts.loginWithPassword, Accounts.loginWithFacebook, Accounts.createUser and Accounts.forgotPassword", 
            "title": "Relation avec les packages standard Meteor"
        }, 
        {
            "location": "/useraccounts/#exemple-dinstallation-authentification-par-mot-de-passe-templates-semantic-ui", 
            "text": "Ne pas installer accounts-ui ?  Le package installe d\u00e9j\u00e0 useraccounts:core accounts-base  Il ne faut pas installer directement le package useraccounts:core mais son impl\u00e9mentation selon le framework utilis\u00e9  Installer les packages providers comme accounts-password, accounts-github, ... selon les besoins   $ meteor add accounts-password\n$ meteor add semantic:ui-css\n$ meteor add useraccounts:semantic-ui", 
            "title": "Exemple d'Installation - Authentification par mot de passe - Templates Semantic-ui"
        }, 
        {
            "location": "/useraccounts/#plugin-ensuresignedin", 
            "text": "Rend obligatoire l'authentification pour toutes les routes   \nRouter.plugin('ensureSignedIn');    Rend obligatoire l'authentification pour les routes plac\u00e9s dans only[]    Voir diff\u00e9rence avec AccountsTemplates.configureRoute('ensureSignedIn') ?    \nRouter.plugin('ensureSignedIn', {\n  only: ['private']\n});   Rend obligatoire l'authentification pour toutes les routes sauf celles plac\u00e9s dans except[]   \nRouter.plugin('ensureSignedIn', {\n    except: ['home', 'atSignIn', 'atSignUp', 'atForgotPassword']\n});   Personnalisation du template et layout   \nAccountsTemplates.configureRoute('ensureSignedIn', {\n    template: 'myLogin',\n    layoutTemplate: 'myLayout',\n});", 
            "title": "Plugin ensureSignedIn"
        }, 
        {
            "location": "/useraccounts/#api", 
            "text": "Package inclus avec Meteor: Account, AccountsServer  Cot\u00e9 client, Accounts = new AccountsClient();  Cot\u00e9 server, Accounts = new AccountsServer(Meteor.server);  Meteor.users est remplac\u00e9 par Accounts.users", 
            "title": "Api"
        }, 
        {
            "location": "/useraccounts/#template-atform", 
            "text": "Par exemple pour customiser le template d'authentification, placez dans un template   {{  atForm state='signUp'}}\n\nOU\n\n{{  atForm}} car le state par d\u00e9faut est signUp", 
            "title": "Template atForm"
        }, 
        {
            "location": "/useraccounts/#states", 
            "text": "changePwd               Formulaire de changement de mot de passe\n\nenrollAccount           Formulaire d'inscription ???\n\nforgotPwd               Formulaire pour saisir une email \u00e0 laquelle sera envoy\u00e9 le lien de r\u00e9cup\u00e9ration de mot de passe\n\nhide                    Aucun\n\nresendVerificationEmail Envoi d'un nouveau mail de v\u00e9rification\n\nresetPwd                R\u00e9initialisation du mot de passe\n\nsignIn                  Formulaire d'authentification\n\nsignUp                  ?\n\nverifyEmail             R\u00e9sultat apr\u00e8s avoir cliqu\u00e9 sur le lien de r\u00e9cup\u00e9ration de mot de passe re\u00e7u par mail", 
            "title": "States"
        }, 
        {
            "location": "/useraccounts/#bouton-atnavbutton", 
            "text": "", 
            "title": "Bouton atNavButton"
        }, 
        {
            "location": "/useraccounts/#configuration", 
            "text": "https://github.com/meteor-useraccounts/core/blob/master/Guide.md    Placez la configuration dans lib/config/at_config.js    Routage  Il n'y a aucune route par d\u00e9faut.  La d\u00e9finition des routes par AccountsTemplates.configureRoute() s'utilise comme les routes habituels d'Iron Router  Chaque route peut \u00eatre d\u00e9finit avec ses param\u00e8tres par d\u00e9faut ou personnalis\u00e9  \nAccountsTemplates.configureRoute('signIn');\n\nAccountsTemplates.configureRoute('signIn', {\n    name: 'signin',\n    path: '/login',\n    template: 'myLogin',\n    layoutTemplate: 'myLayout',\n    redirect: '/user-profile',\n});\n\nAccountsTemplates.configureRoute('signIn', {\n    // Redirige vers /user/ae8WQQk6DrtDzA2AZ apr\u00e8s une authentification r\u00e9ussie\n    redirect: function(){\n        var user = Meteor.user();\n        if (user)\n          Router.go('/user/' + user._id);\n    }\n});  Exemple de configuration compl\u00e8te  \n// lib/config/at_config.js\nAccountsTemplates.configure({\n    // Behaviour\n    confirmPassword: true,                  // (default: true) - Demande la confirmation du mot de passe (register)\n    defaultState:  signIn ,                 // (default: signIn) - State par d\u00e9faut\n    enablePasswordChange: true,             // (default: false) - Active la fonction de changement de mot de passe\n    enforceEmailVerification: false,        // (default: false) - experimental - A utiliser seulement avec le service accounts-password\n\n    forbidClientAccountCreation: false,     // (default: false) - Si true, d\u00e9sactive l'enregistrement\n                                            // Remplace Accounts.config({forbidClientAccountCreation : true});\n\n    overrideLoginErrors: true,              // (default: true) - Si true, affiche erreur g\u00e9n\u00e9rique de connection sans pr\u00e9ciser si mauvais login ou pass\n    sendVerificationEmail: false,           // (default: false) - Si true, envoi un lien de confirmation par mail pour chaque nouvel utilisateur\n    redirectTimeout: 2000,                  // (default: 2000) - Timeout de redirection apr\u00e8s: enrollAccount, forgotPwd, resetPwd, ou verifyEmail\n    lowercaseUsername: false,               // (default: false) - A REVOIR\n    socialLoginStyle: 'popup',              // (default: popup) - Voir LoginStyle - choix (redirect, popup)\n                                            // Si popup, ouvre la page d'authentification du service dans un modal\n\n    // Appearance\n    defaultLayout: undefined,               // (default: undefined)\n    hideSignInLink: false,                  // (default: false) - Si true, n'affiche jamais le lien de connection\n    hideSignUpLink: false,                  // (default: false) - Si true, n'affiche jamais le lien de d\u00e9connection\n    showAddRemoveServices: false,           // (default: false) - A revoir - en rapport avec synchro comptes sociaux - https://atmospherejs.com/splendido/accounts-meld\n    showForgotPasswordLink: false,          // (default: false) - Si true, affiche lien de r\u00e9cup\u00e9ration de mot de passe\n    showLabels: true,                       // (default: true) - si true, affiche les label au dessous des champs dans les formulaires\n    showPlaceholders: true,                 // (default: false) - si true, Affiche les placeholders dans les champs\n    showResendVerificationEmailLink: false, // (default: false) - Si true, affiche le lien pour envoyer \u00e0 nouveau le mail de v\u00e9rification\n\n    // Client-side Validation\n    continuousValidation: false,            // (default: false) - Active la validation cot\u00e9 client pendant la saisie\n    negativeFeedback: false,                // (default: false) - continuousValidation\n    negativeValidation: true,               // (default: false) - continuousValidation\n    positiveValidation: true,               // (default: false) - continuousValidation\n    positiveFeedback: true,                 // (default: false) - continuousValidation\n    showValidating: true,                   // (default: false) -\n\n    // Links\n    homeRoutePath: '/',                     // (default: /) - Pas Home pour les redirections\n    //privacyUrl: 'privacy',                // (default: undefined) - Affiche lien ?\n    //termsUrl: 'terms-of-use',             // (default: undefined) - Affiche lien ?\n\n    // Hooks\n    //onLogoutHook: myLogoutFunc,           // Hook de routage appell\u00e9 par AccountsTemplates.logout\n    //onSubmitHook: mySubmitFunc,           // Hook appell\u00e9 quand submit d'un des formulaire est ok - func(error, state)\n    //preSignUpHook: myPreSubmitFunc,       // Comme ci-dessous mais appell\u00e9 avant submit - func(password, info)\n\n    // Texts customization\n    /*\n    texts: {\n      button: {\n          signUp:  Register Now! \n      },\n      socialSignUp:  Register ,\n      socialIcons: {\n           meteor-developer :  fa fa-rocket \n      },\n      title: {\n          forgotPwd:  Recover Your Password \n      },\n    },\n    */\n});  Configuration ReCapcha  recaptcha  Les cl\u00e9s peuvent se configurer ici ou dans Meteor.Settings ou dans settings.json  AccountsTemplates.configure({\n    reCaptcha: {\n        siteKey: YOUR SITE KEY,\n        secretKey: YOUR SECRET KEY,\n        theme:  light , // light ou dark\n        data_type:  image  // image ou audio\n    },\n    showReCaptcha: true\n});  Exemple de SubmitHook  \nvar mySubmitFunc = function(error, state){\n  if (!error) {\n    if (state ===  signIn ) {\n      // Successfully logged in\n      // ...\n    }\n    if (state ===  signUp ) {\n      // Successfully registered\n      // ...\n    }\n  }\n};\n\nAccountsTemplates.configure({\n    onSubmitHook: mySubmitFunc\n});", 
            "title": "Configuration"
        }, 
        {
            "location": "/useraccounts/#personnalisation-de-la-structure-des-champs-de-formulaire", 
            "text": "Exemple de personnalisation des champs avec  aldeed:template-extension  pour le package  useraccounts:semantic-ui", 
            "title": "Personnalisation de la structure des champs de formulaire"
        }, 
        {
            "location": "/useraccounts/#champs-speciaux-quil-faut-supprimer-avant-de-redefinir", 
            "text": "current_password\nemail\npassword\npassword_again\nusername\nusername_and_email  Exemple avec le champs password  AccountsTemplates.removeField('password');\nAccountsTemplates.addField({\n    _id: 'password',\n    type: 'password',\n    required: true,\n    minLength: 6,\n    re: /(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}/,\n    errStr: 'At least 1 digit, 1 lower-case and 1 upper-case',\n});  Particularit\u00e9 de la customisation des champs username ou email  Il faut imp\u00e9rativement supprimer le champs password avant de r\u00e9d\u00e9finir username ou password  Pour ne pas avoir \u00e0 d\u00e9finir \u00e0 nouveau password, proc\u00e9dez comme ci-dessous:  var pwd = AccountsTemplates.removeField('password');\nAccountsTemplates.removeField('email');\nAccountsTemplates.addFields([\n  {\n      _id:  username ,\n      type:  text ,\n      displayName:  username ,\n      required: true,\n      minLength: 5,\n  },\n  {\n      _id: 'email',\n      type: 'email',\n      required: true,\n      displayName:  email ,\n      re: /.+@(.+){2,}\\.(.+){2,}/,\n      errStr: 'Invalid email',\n  },\n  pwd\n]);", 
            "title": "Champs sp\u00e9ciaux qu'il faut supprimer avant de red\u00e9finir"
        }, 
        {
            "location": "/useraccounts/#changement-de-la-politique-de-mot-de-passe", 
            "text": "**Demande un mot de passe d'au minimum 6 caract\u00e8res  AccountsTemplates.addField({\n    _id: 'password',\n    type: 'password',\n    placeholder: {\n        signUp:  At least six characters \n    },\n    required: true,\n    minLength: 6,\n    re: /(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}/,\n    errStr: 'At least 1 digit, 1 lowercase and 1 uppercase',\n});", 
            "title": "Changement de la politique de mot de passe"
        }, 
        {
            "location": "/useraccounts/#ajoute-un-champs-telephone", 
            "text": "Champs phone avec validation cot\u00e9 serveur (fonction isValidPhone \u00e0 d\u00e9finir):  AccountsTemplates.addField({\n    _id: 'phone',\n    type: 'tel',\n    displayName:  Phone ,\n    required: true,\n    func: function (number) {\n        if (Meteor.isServer){\n          if (isValidPhone(number))\n              return false; // meaning no error!\n          return true; // Validation error!\n        }\n    },\n    errStr: 'Invalid Phone number!',\n});", 
            "title": "Ajoute un champs t\u00e9l\u00e9phone"
        }, 
        {
            "location": "/useraccounts/#verifie-si-le-username-existe-deja", 
            "text": "// server/methods.js\nif (Meteor.isServer){\n    Meteor.methods({\n         userExists : function(username){\n            return !!Meteor.users.findOne({username: username});\n        },\n    });\n}\n\n// lib/config/at_config.js\nAccountsTemplates.addField({\n    _id: 'username',\n    type: 'text',\n    required: true,\n    func: function(value){\n        if (Meteor.isClient) {\n            console.log( Validating username... );\n            var self = this;\n            Meteor.call( userExists , value, function(err, userExists){\n                if (!userExists)\n                    self.setSuccess();\n                else\n                    self.setError(userExists);\n                self.setValidating(false);\n            });\n            return;\n        }\n        // Server\n        return Meteor.call( userExists , value);\n    },\n});  VOIR AUSSI:  //Dans la d\u00e9finition d'un sch\u00e9ma\nusername: {\n  type: String,\n  regEx: /^[a-z0-9A-Z_]{3,15}$/,\n  unique: true,\n  custom: function () {\n    if (Meteor.isClient   this.isSet) {\n      Meteor.call( accountsIsUsernameAvailable , this.value, function (error, result) {\n        if (!result) {\n          Meteor.users.simpleSchema().namedContext( createUserForm ).addInvalidKeys([{name:  username , type:  notUnique }]);\n        }\n      });\n    }\n  }\n}", 
            "title": "V\u00e9rifie si le username existe d\u00e9j\u00e0"
        }, 
        {
            "location": "/useraccounts/#ajout-dun-champs-genre", 
            "text": "AccountsTemplates.addField({\n    _id:  gender ,\n    type:  select ,\n    displayName:  Gender ,\n    select: [\n        {\n            text:  Male ,\n            value:  male ,\n        },\n        {\n            text:  Female ,\n            value:  female ,\n        },\n    ],\n});", 
            "title": "Ajout d'un champs Genre"
        }, 
        {
            "location": "/useraccounts/#champs-de-souscription-a-la-mailing-list", 
            "text": "AccountsTemplates.addField({\n    _id:  mailing_list ,\n    type:  checkbox ,\n    displayName:  Subscribe me to mailing List ,\n});", 
            "title": "Champs de souscription \u00e0 la mailing list"
        }, 
        {
            "location": "/useraccounts/#champs-cache-contenant-un-code-de-validation", 
            "text": "// http://my.splendido.site/sign-up?email=giorgio@example.com reg_code=123\nAccountsTemplates.addField({\n    _id: 'reg_code',\n    type: 'hidden'\n});", 
            "title": "Champs cach\u00e9 contenant un code de validation"
        }, 
        {
            "location": "/useraccounts/#internationalisation-i18n", 
            "text": "accounts-t9n  $ meteor add softwarerero:accounts-t9n  // /lib/config/at_config.js\nT9n.setLanguage( fr );", 
            "title": "Internationalisation - i18n"
        }, 
        {
            "location": "/useraccounts/#personnalisation-des-formulaires-ui", 
            "text": "Requis:  template-extension  $ meteor add aldeed:template-extension  template name= appAtInput \n  {{#if options.dividerBefore}} hr {{/if}}\n\n  {{  Template.dynamic template=templateName}} /template   AccountsTemplates.addField({\n  _id:  address ,\n  type:  text ,\n\n  // Options qui seront pass\u00e9s au formulaire\n  options: {\n    dividerBefore: true\n  }\n});\n\nTemplate.appAtInput.replaces( atInput );", 
            "title": "Personnalisation des formulaires UI"
        }, 
        {
            "location": "/useraccounts/#solution-complete-avec-semantic-ui-hors-authentification-sociale", 
            "text": "", 
            "title": "Solution compl\u00e8te avec semantic-ui - hors authentification sociale"
        }, 
        {
            "location": "/useraccounts/#installation", 
            "text": "$ meteor add accounts-ui-unstyled\n$ meteor add accounts-password\n$ meteor add semantic:ui-css\n$ meteor add softwarerero:accounts-t9n\n$ meteor add useraccounts:semantic-ui\n\n# OU\n$ meteor add accounts-ui-unstyled accounts-password semantic:ui-css softwarerero:accounts-t9n useraccounts:semantic-ui\n\n# OU pour iron cli\n$ iron add accounts-ui-unstyled accounts-password semantic:ui-css softwarerero:accounts-t9n useraccounts:semantic-ui  D\u00e9pendances:  less\nreactive-var\nhttp\nunderscore\naccounts-base\nreactive-dict\ncheck\nmeteor\ntemplating\nblaze\nuseraccounts:core\niron:router\nsoftwarerero:accounts-t9n", 
            "title": "Installation"
        }, 
        {
            "location": "/useraccounts/#configuration_1", 
            "text": "", 
            "title": "Configuration"
        }, 
        {
            "location": "/useraccounts/#tips-solution-dedie-mobile-avec-ratchet", 
            "text": "https://atmospherejs.com/useraccounts/ratchet", 
            "title": "Tips - Solution d\u00e9di\u00e9 mobile avec Ratchet"
        }, 
        {
            "location": "/useraccounts/#structure-dun-enregistrement-dun-compte-utilisateur", 
            "text": "La structure peut varier mais il y a des \u00e9l\u00e9ments important \u00e0 noter:  emails est une liste d'objet  services est une collections avec comme cl\u00e9, le nom du service     {\n  _id:  bbca5d6a-2156-41c4-89da-0329e8c99a4f ,  // Meteor.userId()\n  username:  cool_kid_13 , // unique name\n  emails: [\n    { address:  cool@example.com , verified: true },\n    { address:  another@different.com , verified: false }\n  ],\n  createdAt: Wed Aug 21 2013 15:16:52 GMT-0700 (PDT),\n  profile: {\n    name:  Joe Schmoe \n  },\n  services: {\n    facebook: {\n      id:  709050 , // facebook id\n      accessToken:  AAACCgdX7G2...AbV9AZDZD \n    },\n    resume: {\n      loginTokens: [\n        { token:  97e8c205-c7e4-47c9-9bea-8e2ccc0694cd ,\n          when: 1349761684048 }\n      ]\n    }\n  }\n}", 
            "title": "Structure d'un enregistrement d'un compte utilisateur"
        }, 
        {
            "location": "/useraccounts/#tips-publish-liste-des-utilisateurs", 
            "text": "Source  meteor-cookbook   // server/publish.js\nMeteor.publish( usersDirectory , function () {\n  try{\n    return Meteor.users.find({}, {fields: {\n      '_id': true,\n      'username': true,\n      'profile': true,\n      'profile.name': true,\n      'profile.avatar': true,\n      'profile.username': true,\n\n      'emails': true,\n      'emails[0].address': true,\n      'emails.address': true\n    }});\n  }catch(error){\n    console.log(error);\n  }\n});", 
            "title": "Tips - Publish - Liste des utilisateurs"
        }, 
        {
            "location": "/useraccounts/#tips-autres-solutions", 
            "text": "https://atmospherejs.com/juliancwirko/s-id  Solution Manuelle  accounts-entry", 
            "title": "Tips - Autres solutions"
        }, 
        {
            "location": "/useraccounts/#tips-profile-utilisateur-et-preferences", 
            "text": "// A VOIR\nMeteor.publish( UserProfile , function(profileUserId) {\n  var permissions;\n  check(profileUserId, Match.OneOf(String, null));\n  permissions = ['dashboard/orders', 'owner', 'admin', 'dashboard/customers'];\n  if (profileUserId !== this.userId) {\n    if (this.userId   (Roles.userIsInRole(this.userId, permissions, ReactionCore.getCurrentShop(this)._id || Roles.userIsInRole(this.userId, permissions, Roles.GLOBAL_GROUP)))) {\n      return Meteor.users.find({\n        _id: profileUserId\n      }, {\n        fields: {\n           emails : true,\n           profile.firstName : true,\n           profile.lastName : true,\n           profile.familyName : true,\n           profile.secondName : true,\n           profile.name : true,\n           services.twitter.profile_image_url_https : true,\n           services.facebook.id : true,\n           services.google.picture : true,\n           services.github.username : true,\n           services.instagram.profile_picture : true\n        }\n      });\n    } else {\n      ReactionCore.Events.info( user profile access denied );\n      return [];\n    }\n  } else if (this.userId) {\n    return Meteor.users.find({\n      _id: this.userId\n    });\n  } else {\n    return [];\n  }\n});", 
            "title": "Tips - Profile Utilisateur et pr\u00e9f\u00e9rences"
        }, 
        {
            "location": "/useraccounts/#tips-integration-de-iron-router-auth", 
            "text": "https://github.com/zimme/meteor-iron-router-auth   $ meteor add zimme:iron-router-auth  {\n  authenticate: {\n    home: 'home',\n    layout: undefined,\n    logout: 'logout',\n    replaceState: undefined,\n    route: 'login',\n    template: undefined\n  },\n  authorize: {\n    allow: function() {return true},\n    deny: function() {return false}, // deny overrides allow\n    layout: undefined,\n    replaceState: undefined,\n    route: undefined,\n    template: 'notAuthorized'\n  },\n  except: ['enroll', 'forgotPassword', 'home', 'login', 'reset', 'verify'],\n  noAuth: {\n    dashboard: 'dashboard',\n    home: 'home',\n    replaceState: undefined\n  },\n  only: ['enroll', 'login']\n}", 
            "title": "Tips - Int\u00e9gration de iron-router-auth"
        }, 
        {
            "location": "/collection-timestampable/", 
            "text": "collection-timestampable\n\n\nhttps://atmospherejs.com/zimme/collection-timestampable\n\n\nPeut ajouter les champs createdAt, createdBy, updatedAt, updatedBy \u00e0 chaque document\n\n\nPackages utilis\u00e9s\n\n\n'matb33:collection-hooks@0.7.6'\n'zimme:collection-behaviours@1.0.3'\n'aldeed:autoform@4.0.0 || 5.0.0'\n'aldeed:collection2@2.0.0'\n'aldeed:simple-schema@1.0.3'\n\n\n\nInstallation\n\n\n$ meteor add zimme:collection-timestampable\n\n\nUsage\n\n\n    Posts = new Mongo.Collection('posts');\n\n    // Default options\n    Posts.attachBehaviour('timestampable');\n\n    // Custom options\n    Posts.attachBehaviour('timestampable', {\n      createdAt: 'insertedAt' // nom du champs dans le document\n      createdBy: 'insertedBy'\n      updatedAt: 'modifiedAt'\n      updatedBy: false\n    });", 
            "title": "collection-timestampable"
        }, 
        {
            "location": "/collection-timestampable/#collection-timestampable", 
            "text": "https://atmospherejs.com/zimme/collection-timestampable  Peut ajouter les champs createdAt, createdBy, updatedAt, updatedBy \u00e0 chaque document", 
            "title": "collection-timestampable"
        }, 
        {
            "location": "/collection-timestampable/#packages-utilises", 
            "text": "'matb33:collection-hooks@0.7.6'\n'zimme:collection-behaviours@1.0.3'\n'aldeed:autoform@4.0.0 || 5.0.0'\n'aldeed:collection2@2.0.0'\n'aldeed:simple-schema@1.0.3'", 
            "title": "Packages utilis\u00e9s"
        }, 
        {
            "location": "/collection-timestampable/#installation", 
            "text": "$ meteor add zimme:collection-timestampable", 
            "title": "Installation"
        }, 
        {
            "location": "/collection-timestampable/#usage", 
            "text": "Posts = new Mongo.Collection('posts');\n\n    // Default options\n    Posts.attachBehaviour('timestampable');\n\n    // Custom options\n    Posts.attachBehaviour('timestampable', {\n      createdAt: 'insertedAt' // nom du champs dans le document\n      createdBy: 'insertedBy'\n      updatedAt: 'modifiedAt'\n      updatedBy: false\n    });", 
            "title": "Usage"
        }, 
        {
            "location": "/collection-softremovable/", 
            "text": "collection-softremovable\n\n\nAjoute dynamiquement \u00e0 une collection des champs et fonctions pour placer des documents supprim\u00e9s \u00e0 la corbeille au lieu d'une suppression d\u00e9finitive.\n\n\n\n\nAtmosphere\n\n\nSources\n\n\n\n\nInstallation\n\n\nmeteor add zimme:collection-softremovable\n\n\n\nConfiguration d'une collection\n\n\nPosts = new Mongo.Collection('posts');\n\n//Attach behaviour with the default options\nPosts.attachBehaviour('softRemovable');\n\n//Attach behaviour with custom options\nPosts.attachBehaviour('softRemovable', {\n  removed: 'deleted',\n  removedBy: false,\n  restoredAt: 'undeletedAt',\n  restoredBy: false\n});\n\n\n\nRemove/Restore\n\n\n// Soft remove document by _id\nPosts.softRemove({_id: 'BFpDzGuWG8extPwrE'});\n\n// Restore document by _id\nPosts.restore('BFpDzGuWG8extPwrE');\n\n// Actually remove document from collection\nPosts.remove({_id: 'BFpDzGuWG8extPwrE'});\n\n\n\nRecherches\n\n\n// Find all posts except soft removed posts\nPosts.find({});\n\n// Find only posts that have been soft removed\nPosts.find({removed: true});\n\n// Find all posts including removed\nPosts.find({}, {removed: true});", 
            "title": "collection-softremovable"
        }, 
        {
            "location": "/collection-softremovable/#collection-softremovable", 
            "text": "Ajoute dynamiquement \u00e0 une collection des champs et fonctions pour placer des documents supprim\u00e9s \u00e0 la corbeille au lieu d'une suppression d\u00e9finitive.   Atmosphere  Sources", 
            "title": "collection-softremovable"
        }, 
        {
            "location": "/collection-softremovable/#installation", 
            "text": "meteor add zimme:collection-softremovable", 
            "title": "Installation"
        }, 
        {
            "location": "/collection-softremovable/#configuration-dune-collection", 
            "text": "Posts = new Mongo.Collection('posts');\n\n//Attach behaviour with the default options\nPosts.attachBehaviour('softRemovable');\n\n//Attach behaviour with custom options\nPosts.attachBehaviour('softRemovable', {\n  removed: 'deleted',\n  removedBy: false,\n  restoredAt: 'undeletedAt',\n  restoredBy: false\n});", 
            "title": "Configuration d'une collection"
        }, 
        {
            "location": "/collection-softremovable/#removerestore", 
            "text": "// Soft remove document by _id\nPosts.softRemove({_id: 'BFpDzGuWG8extPwrE'});\n\n// Restore document by _id\nPosts.restore('BFpDzGuWG8extPwrE');\n\n// Actually remove document from collection\nPosts.remove({_id: 'BFpDzGuWG8extPwrE'});", 
            "title": "Remove/Restore"
        }, 
        {
            "location": "/collection-softremovable/#recherches", 
            "text": "// Find all posts except soft removed posts\nPosts.find({});\n\n// Find only posts that have been soft removed\nPosts.find({removed: true});\n\n// Find all posts including removed\nPosts.find({}, {removed: true});", 
            "title": "Recherches"
        }, 
        {
            "location": "/meteor-collection-helpers/", 
            "text": "collection-helpers\n\n\nAjoute des fonctions aux collections\n\n\nhttps://github.com/dburles/meteor-collection-helpers\n\n\nInstallation\n\n\n$ meteor add dburles:collection-helpers\n\n\n\n\nUtilisation\n\n\nDans Javascript:\n\n\nAppInstances.helpers({\n  hosts: function () {\n    var dockerHosts = this.dockerHosts || [];\n    return Hosts.find({_id: {$in: dockerHosts}}).fetch();  // fetch ??\n  },\n});\n\n\n\n\nDans les templates:\n\n\nth\nHosts\n/th\n\n\ntd\n\n  {{#each hosts}}\n  \ndiv\n\n    \na href=\nhttp://{{this.publicHost}}\n target=\n_blank\n{{this.publicHost}}\n/a\n\n  \n/div\n\n  {{/each}}\n\n/td", 
            "title": "meteor-collection-helpers"
        }, 
        {
            "location": "/meteor-collection-helpers/#collection-helpers", 
            "text": "Ajoute des fonctions aux collections  https://github.com/dburles/meteor-collection-helpers", 
            "title": "collection-helpers"
        }, 
        {
            "location": "/meteor-collection-helpers/#installation", 
            "text": "$ meteor add dburles:collection-helpers", 
            "title": "Installation"
        }, 
        {
            "location": "/meteor-collection-helpers/#utilisation", 
            "text": "Dans Javascript:  AppInstances.helpers({\n  hosts: function () {\n    var dockerHosts = this.dockerHosts || [];\n    return Hosts.find({_id: {$in: dockerHosts}}).fetch();  // fetch ??\n  },\n});  Dans les templates:  th Hosts /th  td \n  {{#each hosts}}\n   div \n     a href= http://{{this.publicHost}}  target= _blank {{this.publicHost}} /a \n   /div \n  {{/each}} /td", 
            "title": "Utilisation"
        }, 
        {
            "location": "/useraccounts-roles/", 
            "text": "Meteor Roles\n\n\n\n\nhttps://atmospherejs.com/alanning/roles\n\n\n\n\nhttps://github.com/alanning/meteor-roles\n\n\n\n\n\n\nhttps://github.com/nicolaslopezj/roles\n\n\n\n\n\n\nUtilis\u00e9 par Orion\n\n\n\n\n\n\nhttps://www.discovermeteor.com/blog/allow-deny-a-security-primer/\n\n\n\n\nhttps://www.discovermeteor.com/blog/allow-deny-challenge-results/\n\n\n\n\nR\u00e9f\u00e9rences\n\n\n\n\nhttps://atmospherejs.com/ongoworks/security\n\n\nhttps://github.com/ongoworks/meteor-security\n\n\nhttps://atmospherejs.com/ryw/blog\n\n\n\n\nTODO\n\n\nFiltrer les publish selon roles et appartenance au group\n    - Role: ?\n    - R\u00e9cup\u00e9rer group d'un user et utiliser find({'$in': []})\n\n\nAllow\n    - insert\n      - Role (pas de group)\n    - update\n      - Le group du user doit \u00eatre dans le champs owner_group\n    - remove\n\n\nTips - SimpleSchema - Ajout auto d'un champs owner\n\n\nSchemas.Posts = new SimpleSchema({\n    title: {\n      type: String,\n      max: 60\n    },\n    owner: {\n      type: String,\n      regEx: SimpleSchema.RegEx.Id,\n      autoValue: function() {\n        if (this.isInsert) {\n          return Meteor.userId();\n        }\n      },\n      autoform: {\n        options: function() {\n          return _.map(Meteor.users.find().fetch(), function(user) {\n            return {\n              label: user.emails[0].address,\n              value: user._id\n            };\n          });\n        }\n      }\n    }\n  });\n\n\nR\u00e9f\u00e9rences - Utilis\u00e9 par\n\n\n\n\nhttps://atmospherejs.com/yogiben/admin\n\n\nhttps://atmospherejs.com/reactioncommerce/core\n\n\n\n\nLes diff\u00e9rentes solutions\n\n\nhttps://github.com/perak/user-roles\nhttps://github.com/nicolaslopezj/roles\n    - Utiliser par cms orion\nhttps://github.com/possibilities/meteor-groups\n\n\n\nAjout au mod\u00e8le utilisateur\n\n\nGroupe Global\n  {\n    \"_id\" : \"jdJpzpvCvqr9ZrXvm\",\n    \"username\" : \"admin\",\n    ...\n    \"roles\" : {\n        \"\nglobal_roles\n\" : [\n                \"admin\"\n        ]\n    }\n  }\n\n\nGroupe client1\n    \"roles\" : {\n        \"group1\" : [\n                \"client\"\n        ]\n    }\n\n\nInstallation\n\n\n\n$ meteor add accounts-password\n$ meteor add alanning:roles\n\n\n\n\nLa collection n'est pas publi\u00e9 par d\u00e9faut, il faut le faire avec:\n\n\n// server/publish.js\nMeteor.publish(null, function (){\n  return Meteor.roles.find({})\n});\n\n\n\n\n\nCr\u00e9er / Supprimer des roles - hors user\n\n\nRoles.createRole(role);\n\nRoles.deleteRole(role);\n\n// Refuse la suppression, si le role est affect\u00e9 \u00e0 des utilisateurs:\n\nvar foundExistingUser = Meteor.users.findOne({roles: {$in: [role]}},{fields: {_id: 1}})\n\n\n\n\n\nListe des roles d'un utilisateur\n\n\nRenvoi un tableau de String non tri\u00e9 des roles du user\n\n\nRoles.getRolesForUser(user_or_userid, optional_group);\n\n\n\n\nListe des utilisateurs pour un role\n\n\nRetour un curseur des Meteor.users pour ce role\n\n\nRoles.getUsersInRole(role, group);\n\nRoles.getUsersInRole(role, group).fetch();\n\nRoles.getUsersInRole(\nclient\n).fetch()\n\nRoles.getUsersInRole([\nclient\n, \nmanager\n]).fetch()\n\n\n\n\nListe des groupes d'un utilisateur\n\n\nRenvoi un tableau des groupes non tri\u00e9\n\n\nNe doit fonctionner que si le groupe \u00e0 \u00e9t\u00e9 affect\u00e9 en m\u00eame temps que le role.\n\n\nRoles.getGroupsForUser(user_or_userid, optional_role);\n\n\n\n\nControlleur personnalis\u00e9 avec v\u00e9rification des droits par route\n\n\nV\u00e9rifie avant (onBeforeAction) si l'utilisateur \u00e0 la permission pour cette route\n\n\nShopAdminController = this.ShopController.extend({\n  onBeforeAction: function() {\n    if (!ReactionCore.hasPermission(this.route.getName())) {\n      this.render('unauthorized', {\n        to: 'main'\n      });\n    } else {\n      this.next();\n    }\n  }\n});\n\n\n\n\nAssigner des r\u00f4les au d\u00e9marrage du server\n\n\nhttps://github.com/alanning/meteor-roles/blob/master/examples/rolesWithAccountsUI/server/startup.js\nhttps://github.com/alanning/meteor-roles/blob/master/examples/iron-router/server/server.js\n\n\nSupprimer les roles d'un utilisateur\n\n\nA faire avant la suppression d'un utilisateur\n\n\nRoles.setUserRoles(targetUserId, [], group)\n\n\n\n\nUtilisation dans les Allow - Deny\n\n\nBlacklistIp.allow({\n  insert: function (userId, doc) {\n    //error.invalidKeys` or by calling Books.simpleSchema().namedContext().invalidKeys()\n    //error.reason\n    return !! userId;\n    //return true;\n  },\n\n  update: function (userId, doc, fieldNames, modifier) {\n    return true;\n  },\n\n  remove: function (userId, doc) {\n    return true;\n  }\n});\n\n\n\n\nAssigner automatiquement un role par default\n\n\nIntercepte la cr\u00e9ation d'un utilisateur par la m\u00e9thode Accounts.createUser()\n\n\n// server/methods.js\n  Accounts.onCreateUser(function (options, user) {\n    Roles.setRolesOnUserObj(user, ['admin','view-secrets']);\n    return user\n  });\n\n\nTips - Limiter la cr\u00e9ation d'utilisateurs\n\n\nAutoriser seulement la cr\u00e9ation pour les roles admin ou manage-users:\n\n\n\n//common\nAccounts.validateNewUser(function (user) {\n    var loggedInUser = Meteor.user();\n\n    if (Roles.userIsInRole(loggedInUser, ['admin','manage-users'])) {\n      return true;\n    }\n\n    throw new Meteor.Error(403, \nNot authorized to create new users\n);\n});\n\n\n\n\n\nTips - Exemple de filtrage des donn\u00e9es cot\u00e9 server - Par Groupe utilisateur\n\n\n\n// server/publish.js\nMeteor.publish('secrets', function (group) {\n  if (Roles.userIsInRole(this.userId, ['view-secrets','admin'], group)) {\n\n    return Meteor.secrets.find({group: group});\n\n  } else {\n\n    // user not authorized. do not publish secrets\n    this.stop();\n    return;\n\n  }\n});\n\n\n\n\n\nUtilisation dans les templates\n\n\n\n\ntemplate name=\nheader\n\n  {{#if isInRole 'admin'}}\n    {{\n admin_nav}}\n  {{/if}}\n  {{#if isInRole 'admin,editor'}}\n    {{\n editor_stuff}}\n  {{/if}}\n\n/template\n\n\n// Limiter au group1 avec le role admin ou editor\n\ntemplate name=\nheader\n\n  {{#if isInRole 'admin,editor' 'group1'}}\n    {{\n editor_stuff}}\n  {{/if}}\n\n/template\n\n\n\n\n\n\nCollections\n\n\n\n\nMeteor.roles\n\n\nModifie Meteor.users\n\n\n\n\nAjout de role\n\n\n\n\nusers Array | String\n\n\nroles Array | String\n\n\ngroup String optional (default Roles.GLOBAL_GROUP)\n\n\n\n\naddUsersToRoles vs setUserRoles:\n    addUsersToRoles: ajoute un ou plusieurs roles\n    setUserRoles: affecte ou remplace les roles\n\n\nRoles.addUsersToRoles(userId, 'admin')\n\n\nRoles.addUsersToRoles(userId, ['view-secrets'], 'example.com')\n\n\nRoles.addUsersToRoles([user1, user2], ['user','editor'])\n\n\nRoles.addUsersToRoles([user1, user2], ['glorious-admin', 'perform-action'], 'example.org')\n\n\nRoles.addUsersToRoles(userId, 'admin', Roles.GLOBAL_GROUP)\n\n\nExtension ongoworks-security\n\n\n\n\nhttps://atmospherejs.com/ongoworks/security\n\n\nhttps://github.com/reactioncommerce/reaction-core/blob/5d719c2a74ea6c0e125ad5113af39859f697bf03/server/security.coffee\n\n\n\n\n$ meteor add ongoworks:security\n\n\n\n\nAffecte des permissions par collection\n\n\n// server/security.js:\n\n// Any client may insert, update, or remove a post without restriction\nPosts.permit(['insert', 'update', 'remove']).apply();\n\n// No clients may insert, update, or remove posts\nPosts.permit(['insert', 'update', 'remove']).never().apply();\n\n// Clients may insert posts only if a user is logged in\nPosts.permit('insert').ifLoggedIn().apply();\n\n// Clients may remove posts only if an admin user is logged in\nPosts.permit('remove').ifHasRole('admin').apply();\n\n// Admin users may update any properties of any post, but regular users may\n// update posts only if they don't try to change the `author` or `date` properties\nPosts.permit('update').ifHasRole('admin').apply();\nPosts.permit('update').ifLoggedIn().exceptProps(['author', 'date']).apply();\n\n\n\n\nM\u00e9thodes chainables:\n\n\nnever() - Jamais\n\n\nifLoggedIn() - Si l'utilisateur est authentifi\u00e9\n\n\nifHasUserId(userId) - N'autorise que le userid\n\n\nifHasRole(role) - Autorise si l'utilisateur \u00e0 le role\n\n\nifHasRole({role: 'admin', group: 'mygroup'}\n\n\nifHasRole({role: role, group: group})\n\n\nonlyProps(props) - N'autorise que la modification de ces champs\n\n\nexceptProps(['owner', 'owner_group'])\n\n\nexceptProps(props) - ?\n\n\nPersonnalisation de methods\n\n\n\n// usage: Posts.permit('remove').ifLoggedIn().apply();\nSecurity.defineMethod(\nifLoggedIn\n, {\n  fetch: [],\n  transform: null,\n  deny: function (type, arg, userId) {\n    return !userId;\n  }\n});\n\n// ifHasUserId\nSecurity.defineMethod(\nifHasUserId\n, {\n  fetch: [],\n  transform: null,\n  deny: function (type, arg, userId) {\n    return userId !== arg;\n  }\n});\n\nSecurity.defineMethod(\nifIsCurrentUser\n, {\n  fetch: [],\n  transform: null,\n  deny: function (type, arg, userId, doc) {\n    return userId !== doc._id;\n  }\n});\n\n\n\n\nuserIsInRole\n\n\nRoles.userIsInRole(Meteor.userId(), [\nadmin\n]);\n\n\n\n\ngetAllRoles\n\n\nJSON.stringify(Roles.getAllRoles().fetch(), null, '\\t')\n\n[\n    {\n        \n_id\n: \nus7DSDJsijRsmSQzq\n,\n        \nname\n: \nadmin\n\n    },\n    {\n        \n_id\n: \nJajeKHFCQMRYqvYX6\n,\n        \nname\n: \nclient\n\n    },\n    {\n        \n_id\n: \nzpH3Q76KDFYhMsSNB\n,\n        \nname\n: \nmanager\n\n    },\n    {\n        \n_id\n: \nif4QYbtof6mAh3RYn\n,\n        \nname\n: \nuser\n\n    }\n]", 
            "title": "meteor-roles"
        }, 
        {
            "location": "/useraccounts-roles/#meteor-roles", 
            "text": "https://atmospherejs.com/alanning/roles   https://github.com/alanning/meteor-roles    https://github.com/nicolaslopezj/roles    Utilis\u00e9 par Orion    https://www.discovermeteor.com/blog/allow-deny-a-security-primer/   https://www.discovermeteor.com/blog/allow-deny-challenge-results/", 
            "title": "Meteor Roles"
        }, 
        {
            "location": "/useraccounts-roles/#references", 
            "text": "https://atmospherejs.com/ongoworks/security  https://github.com/ongoworks/meteor-security  https://atmospherejs.com/ryw/blog", 
            "title": "R\u00e9f\u00e9rences"
        }, 
        {
            "location": "/useraccounts-roles/#todo", 
            "text": "Filtrer les publish selon roles et appartenance au group\n    - Role: ?\n    - R\u00e9cup\u00e9rer group d'un user et utiliser find({'$in': []})  Allow\n    - insert\n      - Role (pas de group)\n    - update\n      - Le group du user doit \u00eatre dans le champs owner_group\n    - remove", 
            "title": "TODO"
        }, 
        {
            "location": "/useraccounts-roles/#tips-simpleschema-ajout-auto-dun-champs-owner", 
            "text": "Schemas.Posts = new SimpleSchema({\n    title: {\n      type: String,\n      max: 60\n    },\n    owner: {\n      type: String,\n      regEx: SimpleSchema.RegEx.Id,\n      autoValue: function() {\n        if (this.isInsert) {\n          return Meteor.userId();\n        }\n      },\n      autoform: {\n        options: function() {\n          return _.map(Meteor.users.find().fetch(), function(user) {\n            return {\n              label: user.emails[0].address,\n              value: user._id\n            };\n          });\n        }\n      }\n    }\n  });", 
            "title": "Tips - SimpleSchema - Ajout auto d'un champs owner"
        }, 
        {
            "location": "/useraccounts-roles/#references-utilise-par", 
            "text": "https://atmospherejs.com/yogiben/admin  https://atmospherejs.com/reactioncommerce/core", 
            "title": "R\u00e9f\u00e9rences - Utilis\u00e9 par"
        }, 
        {
            "location": "/useraccounts-roles/#les-differentes-solutions", 
            "text": "https://github.com/perak/user-roles\nhttps://github.com/nicolaslopezj/roles\n    - Utiliser par cms orion\nhttps://github.com/possibilities/meteor-groups", 
            "title": "Les diff\u00e9rentes solutions"
        }, 
        {
            "location": "/useraccounts-roles/#ajout-au-modele-utilisateur", 
            "text": "Groupe Global\n  {\n    \"_id\" : \"jdJpzpvCvqr9ZrXvm\",\n    \"username\" : \"admin\",\n    ...\n    \"roles\" : {\n        \" global_roles \" : [\n                \"admin\"\n        ]\n    }\n  }  Groupe client1\n    \"roles\" : {\n        \"group1\" : [\n                \"client\"\n        ]\n    }", 
            "title": "Ajout au mod\u00e8le utilisateur"
        }, 
        {
            "location": "/useraccounts-roles/#installation", 
            "text": "$ meteor add accounts-password\n$ meteor add alanning:roles  La collection n'est pas publi\u00e9 par d\u00e9faut, il faut le faire avec:  // server/publish.js\nMeteor.publish(null, function (){\n  return Meteor.roles.find({})\n});", 
            "title": "Installation"
        }, 
        {
            "location": "/useraccounts-roles/#creer-supprimer-des-roles-hors-user", 
            "text": "Roles.createRole(role);\n\nRoles.deleteRole(role);\n\n// Refuse la suppression, si le role est affect\u00e9 \u00e0 des utilisateurs:\n\nvar foundExistingUser = Meteor.users.findOne({roles: {$in: [role]}},{fields: {_id: 1}})", 
            "title": "Cr\u00e9er / Supprimer des roles - hors user"
        }, 
        {
            "location": "/useraccounts-roles/#liste-des-roles-dun-utilisateur", 
            "text": "Renvoi un tableau de String non tri\u00e9 des roles du user  Roles.getRolesForUser(user_or_userid, optional_group);", 
            "title": "Liste des roles d'un utilisateur"
        }, 
        {
            "location": "/useraccounts-roles/#liste-des-utilisateurs-pour-un-role", 
            "text": "Retour un curseur des Meteor.users pour ce role  Roles.getUsersInRole(role, group);\n\nRoles.getUsersInRole(role, group).fetch();\n\nRoles.getUsersInRole( client ).fetch()\n\nRoles.getUsersInRole([ client ,  manager ]).fetch()", 
            "title": "Liste des utilisateurs pour un role"
        }, 
        {
            "location": "/useraccounts-roles/#liste-des-groupes-dun-utilisateur", 
            "text": "Renvoi un tableau des groupes non tri\u00e9  Ne doit fonctionner que si le groupe \u00e0 \u00e9t\u00e9 affect\u00e9 en m\u00eame temps que le role.  Roles.getGroupsForUser(user_or_userid, optional_role);", 
            "title": "Liste des groupes d'un utilisateur"
        }, 
        {
            "location": "/useraccounts-roles/#controlleur-personnalise-avec-verification-des-droits-par-route", 
            "text": "V\u00e9rifie avant (onBeforeAction) si l'utilisateur \u00e0 la permission pour cette route  ShopAdminController = this.ShopController.extend({\n  onBeforeAction: function() {\n    if (!ReactionCore.hasPermission(this.route.getName())) {\n      this.render('unauthorized', {\n        to: 'main'\n      });\n    } else {\n      this.next();\n    }\n  }\n});", 
            "title": "Controlleur personnalis\u00e9 avec v\u00e9rification des droits par route"
        }, 
        {
            "location": "/useraccounts-roles/#assigner-des-roles-au-demarrage-du-server", 
            "text": "https://github.com/alanning/meteor-roles/blob/master/examples/rolesWithAccountsUI/server/startup.js\nhttps://github.com/alanning/meteor-roles/blob/master/examples/iron-router/server/server.js", 
            "title": "Assigner des r\u00f4les au d\u00e9marrage du server"
        }, 
        {
            "location": "/useraccounts-roles/#supprimer-les-roles-dun-utilisateur", 
            "text": "A faire avant la suppression d'un utilisateur  Roles.setUserRoles(targetUserId, [], group)", 
            "title": "Supprimer les roles d'un utilisateur"
        }, 
        {
            "location": "/useraccounts-roles/#utilisation-dans-les-allow-deny", 
            "text": "BlacklistIp.allow({\n  insert: function (userId, doc) {\n    //error.invalidKeys` or by calling Books.simpleSchema().namedContext().invalidKeys()\n    //error.reason\n    return !! userId;\n    //return true;\n  },\n\n  update: function (userId, doc, fieldNames, modifier) {\n    return true;\n  },\n\n  remove: function (userId, doc) {\n    return true;\n  }\n});", 
            "title": "Utilisation dans les Allow - Deny"
        }, 
        {
            "location": "/useraccounts-roles/#assigner-automatiquement-un-role-par-default", 
            "text": "Intercepte la cr\u00e9ation d'un utilisateur par la m\u00e9thode Accounts.createUser()  // server/methods.js\n  Accounts.onCreateUser(function (options, user) {\n    Roles.setRolesOnUserObj(user, ['admin','view-secrets']);\n    return user\n  });", 
            "title": "Assigner automatiquement un role par default"
        }, 
        {
            "location": "/useraccounts-roles/#tips-limiter-la-creation-dutilisateurs", 
            "text": "Autoriser seulement la cr\u00e9ation pour les roles admin ou manage-users:  \n//common\nAccounts.validateNewUser(function (user) {\n    var loggedInUser = Meteor.user();\n\n    if (Roles.userIsInRole(loggedInUser, ['admin','manage-users'])) {\n      return true;\n    }\n\n    throw new Meteor.Error(403,  Not authorized to create new users );\n});", 
            "title": "Tips - Limiter la cr\u00e9ation d'utilisateurs"
        }, 
        {
            "location": "/useraccounts-roles/#tips-exemple-de-filtrage-des-donnees-cote-server-par-groupe-utilisateur", 
            "text": "// server/publish.js\nMeteor.publish('secrets', function (group) {\n  if (Roles.userIsInRole(this.userId, ['view-secrets','admin'], group)) {\n\n    return Meteor.secrets.find({group: group});\n\n  } else {\n\n    // user not authorized. do not publish secrets\n    this.stop();\n    return;\n\n  }\n});", 
            "title": "Tips - Exemple de filtrage des donn\u00e9es cot\u00e9 server - Par Groupe utilisateur"
        }, 
        {
            "location": "/useraccounts-roles/#utilisation-dans-les-templates", 
            "text": "template name= header \n  {{#if isInRole 'admin'}}\n    {{  admin_nav}}\n  {{/if}}\n  {{#if isInRole 'admin,editor'}}\n    {{  editor_stuff}}\n  {{/if}} /template \n\n// Limiter au group1 avec le role admin ou editor template name= header \n  {{#if isInRole 'admin,editor' 'group1'}}\n    {{  editor_stuff}}\n  {{/if}} /template", 
            "title": "Utilisation dans les templates"
        }, 
        {
            "location": "/useraccounts-roles/#collections", 
            "text": "Meteor.roles  Modifie Meteor.users", 
            "title": "Collections"
        }, 
        {
            "location": "/useraccounts-roles/#ajout-de-role", 
            "text": "users Array | String  roles Array | String  group String optional (default Roles.GLOBAL_GROUP)   addUsersToRoles vs setUserRoles:\n    addUsersToRoles: ajoute un ou plusieurs roles\n    setUserRoles: affecte ou remplace les roles  Roles.addUsersToRoles(userId, 'admin')  Roles.addUsersToRoles(userId, ['view-secrets'], 'example.com')  Roles.addUsersToRoles([user1, user2], ['user','editor'])  Roles.addUsersToRoles([user1, user2], ['glorious-admin', 'perform-action'], 'example.org')  Roles.addUsersToRoles(userId, 'admin', Roles.GLOBAL_GROUP)", 
            "title": "Ajout de role"
        }, 
        {
            "location": "/useraccounts-roles/#extension-ongoworks-security", 
            "text": "https://atmospherejs.com/ongoworks/security  https://github.com/reactioncommerce/reaction-core/blob/5d719c2a74ea6c0e125ad5113af39859f697bf03/server/security.coffee   $ meteor add ongoworks:security  Affecte des permissions par collection  // server/security.js:\n\n// Any client may insert, update, or remove a post without restriction\nPosts.permit(['insert', 'update', 'remove']).apply();\n\n// No clients may insert, update, or remove posts\nPosts.permit(['insert', 'update', 'remove']).never().apply();\n\n// Clients may insert posts only if a user is logged in\nPosts.permit('insert').ifLoggedIn().apply();\n\n// Clients may remove posts only if an admin user is logged in\nPosts.permit('remove').ifHasRole('admin').apply();\n\n// Admin users may update any properties of any post, but regular users may\n// update posts only if they don't try to change the `author` or `date` properties\nPosts.permit('update').ifHasRole('admin').apply();\nPosts.permit('update').ifLoggedIn().exceptProps(['author', 'date']).apply();  M\u00e9thodes chainables:  never() - Jamais  ifLoggedIn() - Si l'utilisateur est authentifi\u00e9  ifHasUserId(userId) - N'autorise que le userid  ifHasRole(role) - Autorise si l'utilisateur \u00e0 le role  ifHasRole({role: 'admin', group: 'mygroup'}  ifHasRole({role: role, group: group})  onlyProps(props) - N'autorise que la modification de ces champs  exceptProps(['owner', 'owner_group'])  exceptProps(props) - ?  Personnalisation de methods  \n// usage: Posts.permit('remove').ifLoggedIn().apply();\nSecurity.defineMethod( ifLoggedIn , {\n  fetch: [],\n  transform: null,\n  deny: function (type, arg, userId) {\n    return !userId;\n  }\n});\n\n// ifHasUserId\nSecurity.defineMethod( ifHasUserId , {\n  fetch: [],\n  transform: null,\n  deny: function (type, arg, userId) {\n    return userId !== arg;\n  }\n});\n\nSecurity.defineMethod( ifIsCurrentUser , {\n  fetch: [],\n  transform: null,\n  deny: function (type, arg, userId, doc) {\n    return userId !== doc._id;\n  }\n});", 
            "title": "Extension ongoworks-security"
        }, 
        {
            "location": "/useraccounts-roles/#userisinrole", 
            "text": "Roles.userIsInRole(Meteor.userId(), [ admin ]);", 
            "title": "userIsInRole"
        }, 
        {
            "location": "/useraccounts-roles/#getallroles", 
            "text": "JSON.stringify(Roles.getAllRoles().fetch(), null, '\\t') [\n    {\n         _id :  us7DSDJsijRsmSQzq ,\n         name :  admin \n    },\n    {\n         _id :  JajeKHFCQMRYqvYX6 ,\n         name :  client \n    },\n    {\n         _id :  zpH3Q76KDFYhMsSNB ,\n         name :  manager \n    },\n    {\n         _id :  if4QYbtof6mAh3RYn ,\n         name :  user \n    }\n]", 
            "title": "getAllRoles"
        }, 
        {
            "location": "/rest-api/", 
            "text": "Rest APIs\n\n\nrestivus\n\n\nAPI Rest\n\n\nhttps://atmospherejs.com/nimble/restivus\n\n\nInstallation\n\n\n$ meteor add nimble:restivus\n\n\n\n\nConfiguration rapide\n\n\n\nItems = new Mongo.Collection('items');\n\nif (Meteor.isServer) {\n\n  Restivus.configure({\n    useAuth: true,\n    prettyJson: true\n  });\n\n  // Generates: GET, POST, DELETE on /api/items and GET, PUT, DELETE on\n  // /api/items/:id for Items collection\n  Restivus.addCollection(Items);\n\n}\n\n\n\n\n\nCollection Meteor.users\n\n\nRestivus.addCollection(Meteor.users, {\n    excludedEndpoints: ['deleteAll', 'put'],\n    routeOptions: {\n      authRequired: true\n    },\n    endpoints: {\n      post: {\n        authRequired: false\n      },\n      delete: {\n        roleRequired: 'admin'\n      }\n    }\n});\n\n\n\nParticularit\u00e9s du POST de la collection Meteor.users\n\n\nSeuls les champs reconnus par Accounts.createUser() sont autoris\u00e9s dans le POST\n\n\nCes champs sont: email, username, password, et profile\n\n\nSolution: il faut surement personnalis\u00e9 avec l'utilisation d'un Accounts.setPassword(userId, newPassword, [options])\n\n\nPOST http://localhost:3000/api/users\n\n\n{\n    \"email\": \"jack@mail.com\",\n    \"password\": \"password\",\n    \"profile\": {\n      \"firstName\": \"Jack\",\n      \"lastName\": \"Rose\"\n    }\n  }\n\n\ncollectionapi\n\n\nhttps://github.com/xcv58/meteor-collectionapi\n\n\nhttps://github.com/xcv58/meteor-collectionapi-demo/blob/cf233f31d973191e6cd4510ed5e017ad695b33f8/server/restful.js#L36\n\n\nFournit un serveur d\u00e9di\u00e9 \u00e0 l'api, ind\u00e9pendant de l'application.\n\n\nFonctionnalit\u00e9s:\n\n* Authentification custom\n\n\nConfiguration rapide\n\n\nPlayers = new Meteor.Collection(\"players\");\n\n\nif (Meteor.isServer) {\n  Meteor.startup(function () {\n    collectionApi = new CollectionAPI({ authToken: '97f0ad9e24ca5e0408a269748d7fe0a0' });\n    collectionApi.addCollection(Players, 'players');\n    collectionApi.start();\n  });\n}\n\n\n$ curl -H \"X-Auth-Token: 97f0ad9e24ca5e0408a269748d7fe0a0\" http://localhost:3000/collectionapi/players", 
            "title": "API Rest"
        }, 
        {
            "location": "/rest-api/#rest-apis", 
            "text": "", 
            "title": "Rest APIs"
        }, 
        {
            "location": "/rest-api/#restivus", 
            "text": "API Rest  https://atmospherejs.com/nimble/restivus  Installation  $ meteor add nimble:restivus  Configuration rapide  \nItems = new Mongo.Collection('items');\n\nif (Meteor.isServer) {\n\n  Restivus.configure({\n    useAuth: true,\n    prettyJson: true\n  });\n\n  // Generates: GET, POST, DELETE on /api/items and GET, PUT, DELETE on\n  // /api/items/:id for Items collection\n  Restivus.addCollection(Items);\n\n}  Collection Meteor.users  Restivus.addCollection(Meteor.users, {\n    excludedEndpoints: ['deleteAll', 'put'],\n    routeOptions: {\n      authRequired: true\n    },\n    endpoints: {\n      post: {\n        authRequired: false\n      },\n      delete: {\n        roleRequired: 'admin'\n      }\n    }\n});  Particularit\u00e9s du POST de la collection Meteor.users  Seuls les champs reconnus par Accounts.createUser() sont autoris\u00e9s dans le POST  Ces champs sont: email, username, password, et profile  Solution: il faut surement personnalis\u00e9 avec l'utilisation d'un Accounts.setPassword(userId, newPassword, [options])  POST http://localhost:3000/api/users  {\n    \"email\": \"jack@mail.com\",\n    \"password\": \"password\",\n    \"profile\": {\n      \"firstName\": \"Jack\",\n      \"lastName\": \"Rose\"\n    }\n  }", 
            "title": "restivus"
        }, 
        {
            "location": "/rest-api/#collectionapi", 
            "text": "https://github.com/xcv58/meteor-collectionapi  https://github.com/xcv58/meteor-collectionapi-demo/blob/cf233f31d973191e6cd4510ed5e017ad695b33f8/server/restful.js#L36  Fournit un serveur d\u00e9di\u00e9 \u00e0 l'api, ind\u00e9pendant de l'application.  Fonctionnalit\u00e9s: \n* Authentification custom  Configuration rapide  Players = new Meteor.Collection(\"players\");  if (Meteor.isServer) {\n  Meteor.startup(function () {\n    collectionApi = new CollectionAPI({ authToken: '97f0ad9e24ca5e0408a269748d7fe0a0' });\n    collectionApi.addCollection(Players, 'players');\n    collectionApi.start();\n  });\n}\n\n\n$ curl -H \"X-Auth-Token: 97f0ad9e24ca5e0408a269748d7fe0a0\" http://localhost:3000/collectionapi/players", 
            "title": "collectionapi"
        }, 
        {
            "location": "/tap-i18n/", 
            "text": "tab:i18n\n\n\nInternationalisation de projets Meteor\n\n\nhttps://atmospherejs.com/tap/i18n\n\n\nTODO\n\n\n\n\nExtraction pour service crowdin\n\n\nVoir http://i18next.com/\n\n\n\n\nInstallation\n\n\nmeteor add tap:i18n\n\n\nFichiers de langue\n\n\nUn fichier par langue, a placer dans project/i18n/fr.i18n.json\n\n\nMeteor d\u00e9tecte les changement dans ces fichiers.\n\n\n{\n    \nconfigName\n: \nMongrey.io\n,\n    \nconfigTitle\n: \nMake Meteor Apps. Fast.\n,\n    \nconfigSubtitle\n: \nLe seul service de liste grise\n,\n}\n\n\n\n\nConfiguration du language par d\u00e9faut\n\n\nMeteor.startup(function() {\n  if (Meteor.isClient) {\n    return TAPi18n.setLanguage('en');\n  }\n});\n\n\n\n\n\nUtilisation dans les templates\n\n\n    \ndiv class=\nbtn\n{{_ \nsign_up\n}}\n/div\n\n\n    # Avec param\u00e8tre dans la chaine \u00e0 traduire\n    \ntemplate name=\nmessages_today\n\n      \np\n{{_ \ninbox_status\n \nDaniel\n count=18}}\n/p\n\n    \n/template\n\n\n    # Exemple de fichier de lang - i18n/en.i18n.json\n    {\n      \ninbox_status\n: \nHey, %s! You have received one new message today.\n,\n      \ninbox_status_plural\n: \nHey, %s! You have received %s new messages today.\n\n    }\n\n\n\n\nUtilisation dans les scripts\n\n\n\n    Config = {\n      name: 'Title',\n      title: function() {\n        return TAPi18n.__('configTitle');\n      },\n      subtitle: function() {\n        return TAPi18n.__('configSubtitle');\n      },\n    }\n\n\n\n\n\nExtensions\n\n\ntap-i18n-ui\n\n\nhttps://github.com/TAPevents/tap-i18n-ui\n\n\n    meteor add tap:i18n-ui\n\n    {{\n i18n_dropdown}}             // Bootstrap\n    {{\n i18n_dropdown_semantic}}    // Semantic UI\n\n\n\n\ntap-i18n-db\n\n\nhttps://github.com/TAPevents/tap-i18n-db\n\n\nmeteor add tap:i18n-db\n\n\n\n\n    CountryLang = new TAPi18n.Collection(\ncountry_lang\n);\n\n    // Cr\u00e9ation du document et d'une ou plusieurs traductions\n    id = CountryLang.insertTranslations({country: \nfr\n, name: \nFran\u00e7ais\n}, {\n        en: {\n            name: \nFrench\n\n        }\n    });\n\n    # Mise \u00e0 jour d'un document existant\n    CountryLang.updateTranslations(id, {\n        de: {\n            name: \nFranz\u00f6sisch\u043b\u0430\n\n        }\n    });\n\n    # Publication et souscription\n    if (Meteor.isServer) {\n        TAPi18n.publish(\ncountrylang\n, function (query) {\n            return CountryLang.i18nFind(query);\n        });\n    }\n\n    if (Meteor.isClient) {\n        TAPi18n.subscribe(\ncountrylang\n, {});\n    }", 
            "title": "Internationalisation"
        }, 
        {
            "location": "/tap-i18n/#tabi18n", 
            "text": "Internationalisation de projets Meteor  https://atmospherejs.com/tap/i18n", 
            "title": "tab:i18n"
        }, 
        {
            "location": "/tap-i18n/#todo", 
            "text": "Extraction pour service crowdin  Voir http://i18next.com/", 
            "title": "TODO"
        }, 
        {
            "location": "/tap-i18n/#installation", 
            "text": "meteor add tap:i18n", 
            "title": "Installation"
        }, 
        {
            "location": "/tap-i18n/#fichiers-de-langue", 
            "text": "Un fichier par langue, a placer dans project/i18n/fr.i18n.json  Meteor d\u00e9tecte les changement dans ces fichiers.  {\n     configName :  Mongrey.io ,\n     configTitle :  Make Meteor Apps. Fast. ,\n     configSubtitle :  Le seul service de liste grise ,\n}", 
            "title": "Fichiers de langue"
        }, 
        {
            "location": "/tap-i18n/#configuration-du-language-par-defaut", 
            "text": "Meteor.startup(function() {\n  if (Meteor.isClient) {\n    return TAPi18n.setLanguage('en');\n  }\n});", 
            "title": "Configuration du language par d\u00e9faut"
        }, 
        {
            "location": "/tap-i18n/#utilisation-dans-les-templates", 
            "text": "div class= btn {{_  sign_up }} /div \n\n    # Avec param\u00e8tre dans la chaine \u00e0 traduire\n     template name= messages_today \n       p {{_  inbox_status   Daniel  count=18}} /p \n     /template \n\n    # Exemple de fichier de lang - i18n/en.i18n.json\n    {\n       inbox_status :  Hey, %s! You have received one new message today. ,\n       inbox_status_plural :  Hey, %s! You have received %s new messages today. \n    }", 
            "title": "Utilisation dans les templates"
        }, 
        {
            "location": "/tap-i18n/#utilisation-dans-les-scripts", 
            "text": "Config = {\n      name: 'Title',\n      title: function() {\n        return TAPi18n.__('configTitle');\n      },\n      subtitle: function() {\n        return TAPi18n.__('configSubtitle');\n      },\n    }", 
            "title": "Utilisation dans les scripts"
        }, 
        {
            "location": "/tap-i18n/#extensions", 
            "text": "tap-i18n-ui  https://github.com/TAPevents/tap-i18n-ui      meteor add tap:i18n-ui\n\n    {{  i18n_dropdown}}             // Bootstrap\n    {{  i18n_dropdown_semantic}}    // Semantic UI  tap-i18n-db  https://github.com/TAPevents/tap-i18n-db  meteor add tap:i18n-db  \n    CountryLang = new TAPi18n.Collection( country_lang );\n\n    // Cr\u00e9ation du document et d'une ou plusieurs traductions\n    id = CountryLang.insertTranslations({country:  fr , name:  Fran\u00e7ais }, {\n        en: {\n            name:  French \n        }\n    });\n\n    # Mise \u00e0 jour d'un document existant\n    CountryLang.updateTranslations(id, {\n        de: {\n            name:  Franz\u00f6sisch\u043b\u0430 \n        }\n    });\n\n    # Publication et souscription\n    if (Meteor.isServer) {\n        TAPi18n.publish( countrylang , function (query) {\n            return CountryLang.i18nFind(query);\n        });\n    }\n\n    if (Meteor.isClient) {\n        TAPi18n.subscribe( countrylang , {});\n    }", 
            "title": "Extensions"
        }, 
        {
            "location": "/publish-counts/", 
            "text": "publish-counts\n\n\nG\u00e8re des compteurs de collection pour des statistiques par exemple.\n\n\nhttps://github.com/percolatestudio/publish-counts\n\n\n$ meteor add tmeasday:publish-counts\n\n\n\n\nD\u00e9finition d'une collection:\n\n\n\nPlayers = new Mongo.Collection(\nplayers\n);\n\n\n\n\n\nCot\u00e9 Server:\n\n\n\nMeteor.publish('stats', function() {\n    Counts.publish(this, 'player_total', Players.find());\n});\n\n\n\n\n\nCot\u00e9 Client:\n\n\n\nMeteor.subscribe('stats');\n\n\n\n\n\n\n\ntemplate name=\nstats\n\n    \nspan\nTotal players : {{getPublishedCount \nplayer_total\n}}\n/span\n\n\n/template", 
            "title": "publish-counts"
        }, 
        {
            "location": "/publish-counts/#publish-counts", 
            "text": "G\u00e8re des compteurs de collection pour des statistiques par exemple.  https://github.com/percolatestudio/publish-counts  $ meteor add tmeasday:publish-counts  D\u00e9finition d'une collection:  \nPlayers = new Mongo.Collection( players );  Cot\u00e9 Server:  \nMeteor.publish('stats', function() {\n    Counts.publish(this, 'player_total', Players.find());\n});  Cot\u00e9 Client:  \nMeteor.subscribe('stats');   template name= stats \n     span Total players : {{getPublishedCount  player_total }} /span  /template", 
            "title": "publish-counts"
        }, 
        {
            "location": "/sikka/", 
            "text": "sikka\n\n\n\n\nSources\n\n\nAtmosphere\n\n\n\n\nDocumentation\n\n\n\n\n\n\nGoogle ReCaptcha\n\n\n\n\n\n\nFonctionnalit\u00e9s\n\n\n\n\nFirewall app - anti ddos\n\n\nConfigurable par variables d'environnement\n\n\nLimitation request par ip\n\n\nCaptcha\n\n\nG\u00e8re la r\u00e9cup\u00e9ration de l'ip r\u00e9elle derri\u00e8re un proxy comme Nginx\n\n\n\n\nInstallation\n\n\nmeteor add meteorhacks:sikka\n\n\n\nPackages ajout\u00e9s:\n\n\nchuangbo:cookie      added, version 1.1.0\nmeteorhacks:meteorx  added, version 1.3.1\nmeteorhacks:picker   added, version 1.0.2\nmeteorhacks:sikka    added, version 1.0.1\n\n\n\nConfiguration par l'environnement\n\n\nenv: SIKKA_PER_IP_MAX_RPS\nsettings: sikka.rateLimits.perIp\ndefault: 20\n\nenv: SIKKA_BLOCK_IP_FOR_MILLIS\nsettings: sikka.times.blockIpFor\ndefault: 120000\n\nSIKKA_CAPTCHA_SITE_KEY\nsikka.captcha.siteKey\n\nSIKKA_CAPTCHA_SECRET\nsikka.captcha.secret\n\nSIKKA_PER_HUMAN_MAX_RPS\nsikka.times.blockIpFor\nIP Rate Limit\n\nSIKKA_HUMAN_LIVES_UPTO_MILLIS\nsikka.times.humanLivesUpto\n3600000\n\n\n\nConfiguration par settings.json\n\n\n{\n  \"sikka\": {\n       \"captcha\": {\n           \"siteKey\": \"your_new_site_key\",\n           \"secret\":  \"your_new_secret_key\"\n       }\n  }\n}", 
            "title": "S\u00e9curit\u00e9"
        }, 
        {
            "location": "/sikka/#sikka", 
            "text": "Sources  Atmosphere   Documentation    Google ReCaptcha    Fonctionnalit\u00e9s   Firewall app - anti ddos  Configurable par variables d'environnement  Limitation request par ip  Captcha  G\u00e8re la r\u00e9cup\u00e9ration de l'ip r\u00e9elle derri\u00e8re un proxy comme Nginx", 
            "title": "sikka"
        }, 
        {
            "location": "/sikka/#installation", 
            "text": "meteor add meteorhacks:sikka  Packages ajout\u00e9s:  chuangbo:cookie      added, version 1.1.0\nmeteorhacks:meteorx  added, version 1.3.1\nmeteorhacks:picker   added, version 1.0.2\nmeteorhacks:sikka    added, version 1.0.1", 
            "title": "Installation"
        }, 
        {
            "location": "/sikka/#configuration-par-lenvironnement", 
            "text": "env: SIKKA_PER_IP_MAX_RPS\nsettings: sikka.rateLimits.perIp\ndefault: 20\n\nenv: SIKKA_BLOCK_IP_FOR_MILLIS\nsettings: sikka.times.blockIpFor\ndefault: 120000\n\nSIKKA_CAPTCHA_SITE_KEY\nsikka.captcha.siteKey\n\nSIKKA_CAPTCHA_SECRET\nsikka.captcha.secret\n\nSIKKA_PER_HUMAN_MAX_RPS\nsikka.times.blockIpFor\nIP Rate Limit\n\nSIKKA_HUMAN_LIVES_UPTO_MILLIS\nsikka.times.humanLivesUpto\n3600000", 
            "title": "Configuration par l'environnement"
        }, 
        {
            "location": "/sikka/#configuration-par-settingsjson", 
            "text": "{\n  \"sikka\": {\n       \"captcha\": {\n           \"siteKey\": \"your_new_site_key\",\n           \"secret\":  \"your_new_secret_key\"\n       }\n  }\n}", 
            "title": "Configuration par settings.json"
        }, 
        {
            "location": "/plugins-a-etudier/", 
            "text": "Plugins A etudier\n\n\nhttps://atmospherejs.com/zimme/iron-router-auth\n\n\nflash-messages\n\n\nVoir plutot s-alert\n\n\n\n\nhttps://github.com/camilosw/flash-messages\n\n\nhttps://atmospherejs.com/mrt/flash-messages\n\n\nhttps://github.com/JamesLefrere/meteor-flash-messages-semantic-ui\n\n\n\n\nInstallation:\n\n\n$ meteor add jameslefrere:flash-messages-semantic-ui\n\n\n\nConfiguration:\n\n\nFlashMessages.configure({\n    autoHide: true,\n    hideDelay: 5000,\n    autoScroll: true\n});\n\n\n\nUsage:\n\n\n{{\n flashMessages}}\n\nFlashMessages.sendWarning(\"Message\");\nFlashMessages.sendError(\"Message\");\nFlashMessages.sendSuccess(\"Message\");\nFlashMessages.sendInfo(\"Message\");\n\nFlashMessages.sendInfo([\"Message 1\", \"Message 2\", \"Message 3\"]);\n\nFlashMessages.clear();\n\nFlashMessages.sendWarning(\"Message\", { autoHide: false });\nFlashMessages.sendError(\"Message\", { hideDelay: 2000 });\nFlashMessages.sendSuccess(\"Message\", { autoHide: true, hideDelay: 8000 });\n\n\n\nGraphique HighCharts\n\n\n\n\nhttps://github.com/MaazAli/Meteor-HighCharts\n\n\nhttp://highcharts-demo.meteor.com/\n\n\nhttps://github.com/jhuenges/highcharts-demo\n\n\nhttps://github.com/MaazAli/highcharts-gauge\n\n\nhttps://github.com/MaazAli/highcharts-3d\n\n\n\n\nInstallation:\n\n\n$ meteor add maazalik:highcharts\n\n\n\nTemplate:\n\n\n// myTempmlate.html\n{{\n highchartsHelper chartId=\"test\" chartWidth=\"100%\" charHeight=\"100%\" chartObject=topGenresChart}}\n\n\n\nScripts::\n\n\n// myTemplate.js\nTemplate.myTemplate.topGenresChart = function() {\n    return {\n        chart: {\n            plotBackgroundColor: null,\n            plotBorderWidth: null,\n            plotShadow: false\n        },\n        title: {\n            text: this.username + \"'s top genres\"\n        },\n        tooltip: {\n            pointFormat: '\nb\n{point.percentage:.1f}%\n/b\n'\n        },\n        plotOptions: {\n            pie: {\n                allowPointSelect: true,\n                cursor: 'pointer',\n                dataLabels: {\n                    enabled: true,\n                    format: '\nb\n{point.name}\n/b\n: {point.percentage:.1f} %',\n                    style: {\n                        color: (Highcharts.theme \n Highcharts.theme.contrastTextColor) || 'black'\n                    },\n                    connectorColor: 'silver'\n                }\n            }\n        },\n        series: [{\n            type: 'pie',\n            name: 'genre',\n            data: [\n                ['Adventure',   45.0],\n                ['Action',       26.8],\n                ['Ecchi',   12.8],\n                ['Comedy',    8.5],\n                ['Yuri',     6.2]\n            ]\n        }]\n    };\n};\n\n\n\ns-alert\n\n\n\n\nhttps://atmospherejs.com/juliancwirko/s-alert\n\n\nhttp://s-alert.meteor.com/\n\n\nhttp://s-alert-demo.meteor.com/\n\n\n\n\nhttps://github.com/juliancwirko/meteor-s-alert/\n\n\n\n\n\n\nutilise une collection null: sAlert.collection\n\n\n$ meteor add juliancwirko:s-alert\n\n\neffets:\n    scale - meteor add juliancwirko:s-alert-scale\n    slide - meteor add juliancwirko:s-alert-slide\n    genie - meteor add juliancwirko:s-alert-genie\n    jelly - meteor add juliancwirko:s-alert-jelly\n    flip - meteor add juliancwirko:s-alert-flip\n    bouncyflip - meteor add juliancwirko:s-alert-bouncyflip\n\n\nstackslide - meteor add juliancwirko:s-alert-stackslide\n    essai\n\n\n\npositions\n    top-left\n    bottom-left\n    top-right (default)\n    bottom-right\n    top (full width)\n    bottom (full width)\n\n\n\n    {{\n sAlert}}\n\n\n\nclient:\n\n\nMeteor.startup(function () {\n    sAlert.config({\n        effect: 'stackslide',\n        position: 'top',\n        timeout: 5000,\n        html: false,\n        onRouteClose: true,\n        stack: true,\n        offset: 0\n    });\n});\n\n\nsAlert.error('Your message', configOverwrite);\n\n\n\n\n\n\nmeteor-admin\n\n\n\n\nhttps://github.com/yogiben/meteor-admin\n\n\n\n\nConfiguration minimum:\n\n\n@AdminConfig = {\n  name: 'My App'\n  adminEmails: ['ben@code2create.com']\n  collections: {\n    Posts: {}\n  }\n};\n\n\n\n\nmeteorhacks:npm\n\n\nAjoute un fichier packages.json pour d\u00e9clarer des d\u00e9pendances NPM externes.\n\n\n\n\nhttps://atmospherejs.com/meteorhacks/npm\n\n\n\n\nUtilisation des d\u00e9pendances dans Meteor - fichier packages.json:\n\n\n{\n  \nredis\n: \n0.8.2\n,\n  \ngithub\n: \n0.1.8\n\n}\n\n\n\n\n// Cot\u00e9 server seulemement\n// var Github = Meteor.npmRequire('github');\n\nif (Meteor.isServer) {\n  Meteor.methods({\n    'getGists': function getGists(user) {\n      var GithubApi = Meteor.npmRequire('github');\n      var github = new GithubApi({\n          version: \n3.0.0\n\n      });\n\n      var gists = Async.runSync(function(done) {\n        github.gists.getFromUser({user: 'arunoda'}, function(err, data) {\n          done(null, data);\n        });\n      });\n\n      return gists.result;\n    }\n  });\n}\n\n\n\n\nmeteorhacks:async\n\n\n\n\nhttps://atmospherejs.com/meteorhacks/async\n\n\n\n\n$ meteor add meteorhacks:async\n\n\n\n\n// server/methods.js\nvar response = Async.runSync(function(done) {\n  setTimeout(function() {\n    done(null, 1001);\n  }, 100);\n});\n\nconsole.log(response.result); // 1001\n\n\n\n\nmeteorhacks:unblock\n\n\n\n\nhttps://atmospherejs.com/meteorhacks/unblock\n\n\n\n\nEvite \u00e0 l'utilisateur, lors d'appel de m\u00e9thodes bloquantes comme l'envoi d'un mail d'attendre une r\u00e9ponse\n\n\n$ meteor add meteorhacks:unblock\n\n\n\n\n// server/methods.js\nMeteor.methods({\n  longMethod: function() {\n    this.unblock();\n    Meteor._sleepForMs(1000 * 60 * 60);\n  }\n});\n\n\n\n\nmeteorhacks:meteorx\n\n\n\n\nhttps://atmospherejs.com/meteorhacks/meteorx\n\n\n\n\nExpose certaines API Server Meteor\n\n\n$ meteor add meteorhacks:meteorx\n\n\n\n\nAPI expos\u00e9s:\n\n\n\n\nMeteorX.Session - livedata Session\n\n\nMeteorX.Subscription - livedata Subscription\n\n\nMeteorX.SessionCollectionView - livedata SessionCollectionView\n\n\nMeteorX.SessionDocumentView - livedata SessionDocumentView\n\n\nMeteorX.MongoConnection - mongo-livedata MongoConnection\n\n\nMeteorX.MongoCursor - mongo-livedata Cursor\n\n\n\n\nappcache\n\n\n\n\nhttps://github.com/meteor/meteor/tree/devel/packages/appcache\n\n\nhttps://github.com/meteor/meteor/wiki/AppCache\n\n\nVoir aussi https://github.com/buildhybrid/appcache-extra\n\n\nhttps://blog.groupbuddies.com/posts/45-offline-web-apps-with-meteor\n\n\n\n\nMise en cache des assets (fichiers javascripts, css, images, ...)\n\n\n$ meteor add appcache\n\n\n\n\n// Active ou d\u00e9sactive pour certains navigateur\n\n// choix : android, chrome, chromium, chromeMobileIOS, firefox, ie, mobileSafari and safari\nMeteor.AppCache.config({\n  chrome: false,\n  firefox: false\n});\n\n\n\n\ngadicohen:headers\n\n\n\n\nhttps://atmospherejs.com/gadicohen/headers\n\n\n\n\nPermet d'interragir avec les headers, cot\u00e9 client et server\n\n\nFournit des m\u00e9thodes comme headers.getClientIP()\n\n\n$ meteor add gadicohen:headers\n\n\n\n\nstevezhu:lodash\n\n\n\n\nhttps://atmospherejs.com/stevezhu/lodash\n\n\n\n\nCharge et expose la librairie lodash v3.8.0\n\n\nmeteor add stevezhu:lodash\n\n\n\n\nbrowser-policy\n\n\n\n\nhttps://github.com/meteor/meteor/tree/devel/packages/browser-policy\n\n\nhttps://meteorhacks.com/xss-and-meteor\n\n\nhttps://dweldon.silvrback.com/browser-policy\n\n\nhttp://info.meteor.com/blog/defense-in-depth-securing-meteor-apps-with-content-security-policy\n\n\n\n\nD\u00e9finit la politique de s\u00e9curit\u00e9 du navigateur et g\u00e8re les attaques de type clickjacking\n\n\nmeteor add browser-policy\n\n\n\n\n//server/browser_policy.js\n\nBrowserPolicy.framing.disallow();\nBrowserPolicy.content.disallowInlineScripts();\nBrowserPolicy.content.disallowEval();\nBrowserPolicy.content.allowInlineStyles();\nBrowserPolicy.content.allowFontDataUrl();\n\n// Autoriser seulement les scripts externes de ces provenances \u00e0 s'executer\n// Oblige les scripts externes \u00e0 \u00eatre charg\u00e9 en https\nvar trusted = [\n  '*.google-analytics.com',\n  '*.mxpnl.com',\n  '*.zendesk.com'\n];\n\n_.each(trusted, function(origin) {\n  origin = \nhttps://\n + origin;\n  BrowserPolicy.content.allowOriginForAll(origin);\n});\n\n\n\n\nSp\u00e9cifique proxy nginx\n\n\n# Dans la section http\nproxy_buffer_size       128k;\nproxy_buffers           4 256k;\nproxy_busy_buffers_size 256k;\n\n\n\n\nmeteor-user-status\n\n\n\n\nhttps://github.com/mizzao/meteor-user-status\n\n\n\n\nChamps status ajout\u00e9 et mis \u00e0 jour dans Meteor.users par user-status:\n\n\nstatus\n : {\n        \nonline\n : true,\n        \nlastLogin\n : {\n                \ndate\n : ISODate(\n2015-06-24T12:22:29.447Z\n),\n                \nipAddr\n : \n88.175.183.38\n,\n                \nuserAgent\n : \nMozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/43.0.2357.130 Safari/537.36\n\n        },\n        \nidle\n : false\n}\n\n\n\n\nImportant:\n\n\nSi vous avez d\u00e9finit un sch\u00e9ma pour la collection Meteor.users, il faut ajouter une entr\u00e9e pour le champs status\n\n\nApp.Schemas.User = new SimpleSchema({\n  status: {\n    type: Object,\n    optional: true,\n    blackbox: true,\n  },\n  //...\n});", 
            "title": "En cours d'\u00e9valuation"
        }, 
        {
            "location": "/plugins-a-etudier/#plugins-a-etudier", 
            "text": "https://atmospherejs.com/zimme/iron-router-auth", 
            "title": "Plugins A etudier"
        }, 
        {
            "location": "/plugins-a-etudier/#flash-messages", 
            "text": "Voir plutot s-alert   https://github.com/camilosw/flash-messages  https://atmospherejs.com/mrt/flash-messages  https://github.com/JamesLefrere/meteor-flash-messages-semantic-ui   Installation:  $ meteor add jameslefrere:flash-messages-semantic-ui  Configuration:  FlashMessages.configure({\n    autoHide: true,\n    hideDelay: 5000,\n    autoScroll: true\n});  Usage:  {{  flashMessages}}\n\nFlashMessages.sendWarning(\"Message\");\nFlashMessages.sendError(\"Message\");\nFlashMessages.sendSuccess(\"Message\");\nFlashMessages.sendInfo(\"Message\");\n\nFlashMessages.sendInfo([\"Message 1\", \"Message 2\", \"Message 3\"]);\n\nFlashMessages.clear();\n\nFlashMessages.sendWarning(\"Message\", { autoHide: false });\nFlashMessages.sendError(\"Message\", { hideDelay: 2000 });\nFlashMessages.sendSuccess(\"Message\", { autoHide: true, hideDelay: 8000 });", 
            "title": "flash-messages"
        }, 
        {
            "location": "/plugins-a-etudier/#graphique-highcharts", 
            "text": "https://github.com/MaazAli/Meteor-HighCharts  http://highcharts-demo.meteor.com/  https://github.com/jhuenges/highcharts-demo  https://github.com/MaazAli/highcharts-gauge  https://github.com/MaazAli/highcharts-3d   Installation:  $ meteor add maazalik:highcharts  Template:  // myTempmlate.html\n{{  highchartsHelper chartId=\"test\" chartWidth=\"100%\" charHeight=\"100%\" chartObject=topGenresChart}}  Scripts::  // myTemplate.js\nTemplate.myTemplate.topGenresChart = function() {\n    return {\n        chart: {\n            plotBackgroundColor: null,\n            plotBorderWidth: null,\n            plotShadow: false\n        },\n        title: {\n            text: this.username + \"'s top genres\"\n        },\n        tooltip: {\n            pointFormat: ' b {point.percentage:.1f}% /b '\n        },\n        plotOptions: {\n            pie: {\n                allowPointSelect: true,\n                cursor: 'pointer',\n                dataLabels: {\n                    enabled: true,\n                    format: ' b {point.name} /b : {point.percentage:.1f} %',\n                    style: {\n                        color: (Highcharts.theme   Highcharts.theme.contrastTextColor) || 'black'\n                    },\n                    connectorColor: 'silver'\n                }\n            }\n        },\n        series: [{\n            type: 'pie',\n            name: 'genre',\n            data: [\n                ['Adventure',   45.0],\n                ['Action',       26.8],\n                ['Ecchi',   12.8],\n                ['Comedy',    8.5],\n                ['Yuri',     6.2]\n            ]\n        }]\n    };\n};", 
            "title": "Graphique HighCharts"
        }, 
        {
            "location": "/plugins-a-etudier/#s-alert", 
            "text": "https://atmospherejs.com/juliancwirko/s-alert  http://s-alert.meteor.com/  http://s-alert-demo.meteor.com/   https://github.com/juliancwirko/meteor-s-alert/    utilise une collection null: sAlert.collection  $ meteor add juliancwirko:s-alert  effets:\n    scale - meteor add juliancwirko:s-alert-scale\n    slide - meteor add juliancwirko:s-alert-slide\n    genie - meteor add juliancwirko:s-alert-genie\n    jelly - meteor add juliancwirko:s-alert-jelly\n    flip - meteor add juliancwirko:s-alert-flip\n    bouncyflip - meteor add juliancwirko:s-alert-bouncyflip  stackslide - meteor add juliancwirko:s-alert-stackslide\n    essai  positions\n    top-left\n    bottom-left\n    top-right (default)\n    bottom-right\n    top (full width)\n    bottom (full width)  \n    {{  sAlert}}", 
            "title": "s-alert"
        }, 
        {
            "location": "/plugins-a-etudier/#client", 
            "text": "Meteor.startup(function () {\n    sAlert.config({\n        effect: 'stackslide',\n        position: 'top',\n        timeout: 5000,\n        html: false,\n        onRouteClose: true,\n        stack: true,\n        offset: 0\n    });\n});  sAlert.error('Your message', configOverwrite);", 
            "title": "client:"
        }, 
        {
            "location": "/plugins-a-etudier/#meteor-admin", 
            "text": "https://github.com/yogiben/meteor-admin   Configuration minimum:  @AdminConfig = {\n  name: 'My App'\n  adminEmails: ['ben@code2create.com']\n  collections: {\n    Posts: {}\n  }\n};", 
            "title": "meteor-admin"
        }, 
        {
            "location": "/plugins-a-etudier/#meteorhacksnpm", 
            "text": "Ajoute un fichier packages.json pour d\u00e9clarer des d\u00e9pendances NPM externes.   https://atmospherejs.com/meteorhacks/npm   Utilisation des d\u00e9pendances dans Meteor - fichier packages.json:  {\n   redis :  0.8.2 ,\n   github :  0.1.8 \n}  // Cot\u00e9 server seulemement\n// var Github = Meteor.npmRequire('github');\n\nif (Meteor.isServer) {\n  Meteor.methods({\n    'getGists': function getGists(user) {\n      var GithubApi = Meteor.npmRequire('github');\n      var github = new GithubApi({\n          version:  3.0.0 \n      });\n\n      var gists = Async.runSync(function(done) {\n        github.gists.getFromUser({user: 'arunoda'}, function(err, data) {\n          done(null, data);\n        });\n      });\n\n      return gists.result;\n    }\n  });\n}", 
            "title": "meteorhacks:npm"
        }, 
        {
            "location": "/plugins-a-etudier/#meteorhacksasync", 
            "text": "https://atmospherejs.com/meteorhacks/async   $ meteor add meteorhacks:async  // server/methods.js\nvar response = Async.runSync(function(done) {\n  setTimeout(function() {\n    done(null, 1001);\n  }, 100);\n});\n\nconsole.log(response.result); // 1001", 
            "title": "meteorhacks:async"
        }, 
        {
            "location": "/plugins-a-etudier/#meteorhacksunblock", 
            "text": "https://atmospherejs.com/meteorhacks/unblock   Evite \u00e0 l'utilisateur, lors d'appel de m\u00e9thodes bloquantes comme l'envoi d'un mail d'attendre une r\u00e9ponse  $ meteor add meteorhacks:unblock  // server/methods.js\nMeteor.methods({\n  longMethod: function() {\n    this.unblock();\n    Meteor._sleepForMs(1000 * 60 * 60);\n  }\n});", 
            "title": "meteorhacks:unblock"
        }, 
        {
            "location": "/plugins-a-etudier/#meteorhacksmeteorx", 
            "text": "https://atmospherejs.com/meteorhacks/meteorx   Expose certaines API Server Meteor  $ meteor add meteorhacks:meteorx  API expos\u00e9s:   MeteorX.Session - livedata Session  MeteorX.Subscription - livedata Subscription  MeteorX.SessionCollectionView - livedata SessionCollectionView  MeteorX.SessionDocumentView - livedata SessionDocumentView  MeteorX.MongoConnection - mongo-livedata MongoConnection  MeteorX.MongoCursor - mongo-livedata Cursor", 
            "title": "meteorhacks:meteorx"
        }, 
        {
            "location": "/plugins-a-etudier/#appcache", 
            "text": "https://github.com/meteor/meteor/tree/devel/packages/appcache  https://github.com/meteor/meteor/wiki/AppCache  Voir aussi https://github.com/buildhybrid/appcache-extra  https://blog.groupbuddies.com/posts/45-offline-web-apps-with-meteor   Mise en cache des assets (fichiers javascripts, css, images, ...)  $ meteor add appcache  // Active ou d\u00e9sactive pour certains navigateur\n\n// choix : android, chrome, chromium, chromeMobileIOS, firefox, ie, mobileSafari and safari\nMeteor.AppCache.config({\n  chrome: false,\n  firefox: false\n});", 
            "title": "appcache"
        }, 
        {
            "location": "/plugins-a-etudier/#gadicohenheaders", 
            "text": "https://atmospherejs.com/gadicohen/headers   Permet d'interragir avec les headers, cot\u00e9 client et server  Fournit des m\u00e9thodes comme headers.getClientIP()  $ meteor add gadicohen:headers", 
            "title": "gadicohen:headers"
        }, 
        {
            "location": "/plugins-a-etudier/#stevezhulodash", 
            "text": "https://atmospherejs.com/stevezhu/lodash   Charge et expose la librairie lodash v3.8.0  meteor add stevezhu:lodash", 
            "title": "stevezhu:lodash"
        }, 
        {
            "location": "/plugins-a-etudier/#browser-policy", 
            "text": "https://github.com/meteor/meteor/tree/devel/packages/browser-policy  https://meteorhacks.com/xss-and-meteor  https://dweldon.silvrback.com/browser-policy  http://info.meteor.com/blog/defense-in-depth-securing-meteor-apps-with-content-security-policy   D\u00e9finit la politique de s\u00e9curit\u00e9 du navigateur et g\u00e8re les attaques de type clickjacking  meteor add browser-policy  //server/browser_policy.js\n\nBrowserPolicy.framing.disallow();\nBrowserPolicy.content.disallowInlineScripts();\nBrowserPolicy.content.disallowEval();\nBrowserPolicy.content.allowInlineStyles();\nBrowserPolicy.content.allowFontDataUrl();\n\n// Autoriser seulement les scripts externes de ces provenances \u00e0 s'executer\n// Oblige les scripts externes \u00e0 \u00eatre charg\u00e9 en https\nvar trusted = [\n  '*.google-analytics.com',\n  '*.mxpnl.com',\n  '*.zendesk.com'\n];\n\n_.each(trusted, function(origin) {\n  origin =  https://  + origin;\n  BrowserPolicy.content.allowOriginForAll(origin);\n});  Sp\u00e9cifique proxy nginx  # Dans la section http\nproxy_buffer_size       128k;\nproxy_buffers           4 256k;\nproxy_busy_buffers_size 256k;", 
            "title": "browser-policy"
        }, 
        {
            "location": "/plugins-a-etudier/#meteor-user-status", 
            "text": "https://github.com/mizzao/meteor-user-status   Champs status ajout\u00e9 et mis \u00e0 jour dans Meteor.users par user-status:  status  : {\n         online  : true,\n         lastLogin  : {\n                 date  : ISODate( 2015-06-24T12:22:29.447Z ),\n                 ipAddr  :  88.175.183.38 ,\n                 userAgent  :  Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/43.0.2357.130 Safari/537.36 \n        },\n         idle  : false\n}  Important:  Si vous avez d\u00e9finit un sch\u00e9ma pour la collection Meteor.users, il faut ajouter une entr\u00e9e pour le champs status  App.Schemas.User = new SimpleSchema({\n  status: {\n    type: Object,\n    optional: true,\n    blackbox: true,\n  },\n  //...\n});", 
            "title": "meteor-user-status"
        }, 
        {
            "location": "/mongodb/", 
            "text": "MongoDB et Meteor.Collection\n\n\n\n\nhttp://docs.meteor.com/#/full/mongo_collection\n\n\n\n\nG\u00e9n\u00e9ration automatique d'ID\n\n\nPar d\u00e9faut, Meteor, g\u00e9n\u00e8re un String al\u00e9atoire au lieu d'un \nObjectId\n\n\nPour g\u00e9n\u00e9rer un ObjectId, il faut utiliser l'option:\n\n\nChatrooms = new Mongo.Collection(\nchatrooms\n, {idGeneration: 'MONGO'});\n\nChatrooms = new Mongo.Collection(\nchatrooms\n, {idGeneration: 'STRING'});\n// Equivalent \u00e0\nChatrooms = new Mongo.Collection(\nchatrooms\n);\n\n\n\n\nSyntaxe particuli\u00e8re de Meteor\n\n\nMeteor.Collection ne suit pas compl\u00e8tement la syntaxe d'origine de MongoDB\n\n\nTeams = new Mongo.Collection('teams');\nTeams.find(); // finds all your teams\nTeams.find().fetch() // finds all your teams and returns them as JSON\nTeams.insert({name: 'Team 1'}); // Inserts a team into Mongo\nTeams.update({_id: id}, {$set: {name: 'Team 2'}}); // Update a team\nTeams.remove(id); // Removes a team\n\n\n\n\nDiff\u00e9rences entre Meteor.Collection cot\u00e9 server et client\n\n\nCollection null", 
            "title": "MongoDB"
        }, 
        {
            "location": "/mongodb/#mongodb-et-meteorcollection", 
            "text": "http://docs.meteor.com/#/full/mongo_collection", 
            "title": "MongoDB et Meteor.Collection"
        }, 
        {
            "location": "/mongodb/#generation-automatique-did", 
            "text": "Par d\u00e9faut, Meteor, g\u00e9n\u00e8re un String al\u00e9atoire au lieu d'un  ObjectId  Pour g\u00e9n\u00e9rer un ObjectId, il faut utiliser l'option:  Chatrooms = new Mongo.Collection( chatrooms , {idGeneration: 'MONGO'});\n\nChatrooms = new Mongo.Collection( chatrooms , {idGeneration: 'STRING'});\n// Equivalent \u00e0\nChatrooms = new Mongo.Collection( chatrooms );", 
            "title": "G\u00e9n\u00e9ration automatique d'ID"
        }, 
        {
            "location": "/mongodb/#syntaxe-particuliere-de-meteor", 
            "text": "Meteor.Collection ne suit pas compl\u00e8tement la syntaxe d'origine de MongoDB  Teams = new Mongo.Collection('teams');\nTeams.find(); // finds all your teams\nTeams.find().fetch() // finds all your teams and returns them as JSON\nTeams.insert({name: 'Team 1'}); // Inserts a team into Mongo\nTeams.update({_id: id}, {$set: {name: 'Team 2'}}); // Update a team\nTeams.remove(id); // Removes a team", 
            "title": "Syntaxe particuli\u00e8re de Meteor"
        }, 
        {
            "location": "/mongodb/#differences-entre-meteorcollection-cote-server-et-client", 
            "text": "", 
            "title": "Diff\u00e9rences entre Meteor.Collection cot\u00e9 server et client"
        }, 
        {
            "location": "/mongodb/#collection-null", 
            "text": "", 
            "title": "Collection null"
        }, 
        {
            "location": "/email/", 
            "text": "Meteor et les mails\n\n\nIntroduction\n\n\nLe serveur SMTP \u00e0 utiliser pour l'envoi de mail par Meteor semble ne se configurer que par la variable d'environnement MAIL_URL\n\n\n$ export MAIL_URL='smtp://user:password@mailhost:port/'\n\n\n\n\nConfiguration de la variable MAIL_URL au d\u00e9marrage\n\n\n// server/bootstrap.js\n\nMeteor.startup(function () {\n    // Donn\u00e9es provenant de MongoDB ou d'ailleurs\n    smtp = {\n        username: 'xxxx',\n        password: 'xxxx',\n        server:   'smtp.gmail.com',\n        port: 587 //25\n    };\n    process.env.MAIL_URL = 'smtp://' + encodeURIComponent(smtp.username) + ':' + encodeURIComponent(smtp.password) + '@' + encodeURIComponent(smtp.server) + ':' + smtp.port;\n});", 
            "title": "Mails"
        }, 
        {
            "location": "/email/#meteor-et-les-mails", 
            "text": "", 
            "title": "Meteor et les mails"
        }, 
        {
            "location": "/email/#introduction", 
            "text": "Le serveur SMTP \u00e0 utiliser pour l'envoi de mail par Meteor semble ne se configurer que par la variable d'environnement MAIL_URL  $ export MAIL_URL='smtp://user:password@mailhost:port/'", 
            "title": "Introduction"
        }, 
        {
            "location": "/email/#configuration-de-la-variable-mail_url-au-demarrage", 
            "text": "// server/bootstrap.js\n\nMeteor.startup(function () {\n    // Donn\u00e9es provenant de MongoDB ou d'ailleurs\n    smtp = {\n        username: 'xxxx',\n        password: 'xxxx',\n        server:   'smtp.gmail.com',\n        port: 587 //25\n    };\n    process.env.MAIL_URL = 'smtp://' + encodeURIComponent(smtp.username) + ':' + encodeURIComponent(smtp.password) + '@' + encodeURIComponent(smtp.server) + ':' + smtp.port;\n});", 
            "title": "Configuration de la variable MAIL_URL au d\u00e9marrage"
        }, 
        {
            "location": "/app-reactioncommerce/", 
            "text": "Reaction Commerce\n\n\n\n\nSite\n\n\nDocumentation\n\n\nSources\n\n\nStatus des Modules\n\n\nhttps://waffle.io/reactioncommerce/reaction\n\n\n\n\nAuteur de Meteor Security: https://github.com/ongoworks/meteor-security\n\n\nInstallation\n\n\nPar Docker\n\n\n\n\nhttps://github.com/reactioncommerce/reaction/blob/development/Dockerfile\n\n\n\n\nAjout \u00e0 un projet existant\n\n\n$ meteor add reactioncommerce:core\n\n\n\n\nCr\u00e9ation d'un nouveau projet\n\n\n$ meteor add reactioncommerce:core\n$ meteor remove insecure\n$ meteor remove autopublish\n$ meteor add nemo64:bootstrap\n\ncd /workspace\n\ngit clone https://github.com/reactioncommerce/reaction.git\n\ncd reaction \n git checkout master\n\n\n\n\n# n'est pas dans le projet\nmeteor remove force-ssl\n\n\n\n\n NOK\n# https://github.com/reactioncommerce/reaction-core/blob/master/docs/deploying.md\n# Renommer settings/dev.sample.json en settings/dev.json\nmv settings/dev.sample.json settings/dev.json\nmeteor --settings settings/dev.json --raw-logs -p $IP:$PORT\n\nROOT_URL=https://188.165.254.60:444 MONGO_URL=mongodb://localhost/reaction meteor --raw-logs -p $IP:$PORT\n\nIMPORTANT! DEFAULT USER INFO (RANDOM)\n  EMAIL/LOGIN: wpdxynxm@localhost\n  PASSWORD: xxxxxx\n\nRequis:\n    apt-get install -y --no-install-recommends graphicsmagick\n\n--settings\n\n\n\n\n# supp .meteor/local/build/programs/server/assets/packages/reactioncommerce_core/private/data/*.json\n$ meteor reset\n\n\n\n\nInclus\n\n\npackage-stats-opt-out\nmeteor-platform\noauth-encryption\ncoffeescript\nless\n\n# Optional Meteor Packages\naccounts-facebook\nspiderable\naudit-argument-checks\nfastclick\n\n# Community Packages\nnemo64:bootstrap\n#mike:mocha\nsanjo:jasmine\nvelocity:html-reporter\n\n# Reaction Commerce Packages\nreactioncommerce:core\n    https://github.com/reactioncommerce/reaction-core\nreactioncommerce:core-theme\n    https://github.com/reactioncommerce/reaction-core-theme\n\nreactioncommerce:reaction-shipping\n    https://github.com/reactioncommerce/reaction-shipping\n\n#payment\nreactioncommerce:reaction-paypal\n    https://github.com/reactioncommerce/reaction-paypal\nreactioncommerce:reaction-braintree\n    https://github.com/reactioncommerce/reaction-braintree\nreactioncommerce:reaction-stripe\n    https://github.com/reactioncommerce/reaction-stripe\n\n#Auth:\nreactioncommerce:reaction-auth-net\n    https://github.com/reactioncommerce/reaction-auth-net\nreactioncommerce:reaction-social\n    https://github.com/reactioncommerce/reaction-social\n\nspencern:reaction-analytics-libs\nspencern:reaction-analytics\n\nhttps://github.com/reactioncommerce/reaction-google-analytics\nhttps://github.com/reactioncommerce/reaction-search\nhttps://github.com/reactioncommerce/reaction-coupons\n\n\n\n\nConfig mail dans /dashboard/settings/shop\n\n\nusername:\npassword:\nhostname: smtp.gmail.com\nport:\n\n\n\n\nPages static\n\n\n\n\n\n\nPages avec template dans client/templates/static/*.html mais sans scripts\n\n\n\n\n\n\nControler: ShopController\n\n\n\n\n\n\nvar staticPages = [\nabout\n, \nteam\n, \nfaqs\n, \nterms\n, \nprivacy\n];\n\nRouter.map(function() {\n  var i, len, page;\n  for (i = 0, len = staticPages.length; i \n len; i++) {\n    page = staticPages[i];\n    this.route(page, {\n      controller: ShopController,\n      name: page\n    });\n  }\n  return this.route(\nnotFound\n, {\n    path: \n/(.*)\n\n  });\n});", 
            "title": "E-Commerce"
        }, 
        {
            "location": "/app-reactioncommerce/#reaction-commerce", 
            "text": "Site  Documentation  Sources  Status des Modules  https://waffle.io/reactioncommerce/reaction   Auteur de Meteor Security: https://github.com/ongoworks/meteor-security", 
            "title": "Reaction Commerce"
        }, 
        {
            "location": "/app-reactioncommerce/#installation", 
            "text": "", 
            "title": "Installation"
        }, 
        {
            "location": "/app-reactioncommerce/#par-docker", 
            "text": "https://github.com/reactioncommerce/reaction/blob/development/Dockerfile", 
            "title": "Par Docker"
        }, 
        {
            "location": "/app-reactioncommerce/#ajout-a-un-projet-existant", 
            "text": "$ meteor add reactioncommerce:core", 
            "title": "Ajout \u00e0 un projet existant"
        }, 
        {
            "location": "/app-reactioncommerce/#creation-dun-nouveau-projet", 
            "text": "$ meteor add reactioncommerce:core\n$ meteor remove insecure\n$ meteor remove autopublish\n$ meteor add nemo64:bootstrap\n\ncd /workspace\n\ngit clone https://github.com/reactioncommerce/reaction.git\n\ncd reaction   git checkout master  # n'est pas dans le projet\nmeteor remove force-ssl   NOK\n# https://github.com/reactioncommerce/reaction-core/blob/master/docs/deploying.md\n# Renommer settings/dev.sample.json en settings/dev.json\nmv settings/dev.sample.json settings/dev.json\nmeteor --settings settings/dev.json --raw-logs -p $IP:$PORT\n\nROOT_URL=https://188.165.254.60:444 MONGO_URL=mongodb://localhost/reaction meteor --raw-logs -p $IP:$PORT\n\nIMPORTANT! DEFAULT USER INFO (RANDOM)\n  EMAIL/LOGIN: wpdxynxm@localhost\n  PASSWORD: xxxxxx\n\nRequis:\n    apt-get install -y --no-install-recommends graphicsmagick\n\n--settings  # supp .meteor/local/build/programs/server/assets/packages/reactioncommerce_core/private/data/*.json\n$ meteor reset", 
            "title": "Cr\u00e9ation d'un nouveau projet"
        }, 
        {
            "location": "/app-reactioncommerce/#inclus", 
            "text": "package-stats-opt-out\nmeteor-platform\noauth-encryption\ncoffeescript\nless\n\n# Optional Meteor Packages\naccounts-facebook\nspiderable\naudit-argument-checks\nfastclick\n\n# Community Packages\nnemo64:bootstrap\n#mike:mocha\nsanjo:jasmine\nvelocity:html-reporter\n\n# Reaction Commerce Packages\nreactioncommerce:core\n    https://github.com/reactioncommerce/reaction-core\nreactioncommerce:core-theme\n    https://github.com/reactioncommerce/reaction-core-theme\n\nreactioncommerce:reaction-shipping\n    https://github.com/reactioncommerce/reaction-shipping\n\n#payment\nreactioncommerce:reaction-paypal\n    https://github.com/reactioncommerce/reaction-paypal\nreactioncommerce:reaction-braintree\n    https://github.com/reactioncommerce/reaction-braintree\nreactioncommerce:reaction-stripe\n    https://github.com/reactioncommerce/reaction-stripe\n\n#Auth:\nreactioncommerce:reaction-auth-net\n    https://github.com/reactioncommerce/reaction-auth-net\nreactioncommerce:reaction-social\n    https://github.com/reactioncommerce/reaction-social\n\nspencern:reaction-analytics-libs\nspencern:reaction-analytics\n\nhttps://github.com/reactioncommerce/reaction-google-analytics\nhttps://github.com/reactioncommerce/reaction-search\nhttps://github.com/reactioncommerce/reaction-coupons", 
            "title": "Inclus"
        }, 
        {
            "location": "/app-reactioncommerce/#config-mail-dans-dashboardsettingsshop", 
            "text": "username:\npassword:\nhostname: smtp.gmail.com\nport:", 
            "title": "Config mail dans /dashboard/settings/shop"
        }, 
        {
            "location": "/app-reactioncommerce/#pages-static", 
            "text": "Pages avec template dans client/templates/static/*.html mais sans scripts    Controler: ShopController    var staticPages = [ about ,  team ,  faqs ,  terms ,  privacy ];\n\nRouter.map(function() {\n  var i, len, page;\n  for (i = 0, len = staticPages.length; i   len; i++) {\n    page = staticPages[i];\n    this.route(page, {\n      controller: ShopController,\n      name: page\n    });\n  }\n  return this.route( notFound , {\n    path:  /(.*) \n  });\n});", 
            "title": "Pages static"
        }, 
        {
            "location": "/app-orionjs/", 
            "text": "OrionJS CMS\n\n\n\n\nhttp://orionjs.org\n\n\n\n\nInt\u00e9gration\n\n\n\n\nExemple blog\n\n\n\n\nFaire une application Meteor normal et int\u00e9grer Orion.\n\n\nLes \u00e9l\u00e9ments Orion se place dans un sous r\u00e9pertoire orion/", 
            "title": "CMS"
        }, 
        {
            "location": "/app-orionjs/#orionjs-cms", 
            "text": "http://orionjs.org", 
            "title": "OrionJS CMS"
        }, 
        {
            "location": "/app-orionjs/#integration", 
            "text": "Exemple blog   Faire une application Meteor normal et int\u00e9grer Orion.  Les \u00e9l\u00e9ments Orion se place dans un sous r\u00e9pertoire orion/", 
            "title": "Int\u00e9gration"
        }, 
        {
            "location": "/app-telescope/", 
            "text": "Telescope\n\n\nM\u00eame si vous n'avez pas l'utilisation de cette application, je vous sugg\u00e8re vivement d'\u00e9tudier son code source car il s'agit vraiment de tr\u00e8s bonnes pratiques en Javascript et plus particuli\u00e8rement avec Meteor.\n\n\n\n\nhttp://www.telescopeapp.org/\n\n\nhttps://github.com/TelescopeJS/Telescope\n\n\nhttp://www.bootstrappers.io/\n\n\n\n\nSites / Applications r\u00e9alis\u00e9s avec Telescope et dont les sources sont disponibles\n\n\n\n\nhttp://www.crunchhunt.com/\n\n\nhttps://github.com/TelescopeJS/CrunchHunt\n\n\nhttps://crater.io/\n\n\nhttps://github.com/meteorclub/crater.io\n\n\nhttp://hangouts.codebuddies.org/\n\n\nhttps://github.com/lpatmo/cb\n\n\n\n\nBonne pratiques\n\n\n\n\nEspaces de nom (NameSpaces)\n\n\nQue des packages\n\n\n\n\nTODO\n\n\n\n\nSuppression des posts\n\n\nAjout Recaptcha\n\n\n\n\nCr\u00e9ation d'un projet Telescope\n\n\nCr\u00e9ation du projet\n\n\n$ meteor create myproject\n\n$ cd myproject\n\n$ rm -f myproject.*\n\n\n\n\nEditez .meteor/packages et ajoutez:\n\n\ntelescope:core\n\ntelescope:migrations\ntelescope:api\ntelescope:daily\ntelescope:datetimepicker\ntelescope:email\ntelescope:embedly\ntelescope:getting-started\ntelescope:invites\ntelescope:kadira\ntelescope:newsletter\ntelescope:notifications\ntelescope:pages\ntelescope:post-by-feed\ntelescope:releases\ntelescope:rss\ntelescope:scoring\ntelescope:search\ntelescope:share\ntelescope:singleday\ntelescope:subscribe-to-posts\ntelescope:tagline-banner\ntelescope:tags\ntelescope:theme-base\ntelescope:theme-hubble\ntelescope:update-prompt\n\n\n\n\nModules non install\u00e9 et non document\u00e9s:\n\n\n# Pas fonctionnel !!!\n# https://github.com/TelescopeJS/Telescope/blob/master/packages/telescope-sitemap\n# Fournit un /sitemap.xml - D\u00e9clenchera une erreur si l'url du site n'est pas renseign\u00e9\n# $ meteor add telescope:sitemap\n\n\n\n\nMise \u00e0 jour et d\u00e9marrage\n\n\nLe premier utilisateur enregistr\u00e9 aura les droits Administrateur.\n\n\nNE pas supprimer tout de suites les utilisateurs de d\u00e9monstration car ils semblent rattach\u00e9s aux Post\n\n\n$ meteor update\n\n$ meteor\n\n\n\n\nConfiguration\n\n\nEnregistrez-vous et ouvrez la page http://localhost/settings pour configurer le site\n\n\nConfiguration des Mail\n\n\nUtilisation du service MailGun\n\n\n\n\n\n\nInscrivez-vous sur http://www.mailgun.com/\n\n\n\n\n\n\nEntrez l'url avec votre compte mailgun dans le champs Mail Url:\n\n\n\n\n\n\nsmtp://postmaster%40telescope.mailgun.org:password@smtp.mailgun.org:587/\n\n\n\n\nListe des services d'envoi de mail\n\n\n\n\nUtilisable gratuitement (mais limit\u00e9)\n\n\nhttp://www.mandrill.com/ (12 000 mails par mois)\n\n\n\n\nhttp://www.mailgun.com/ (10 000 mails par mois - A condition d'ajouter son nom de domaine ?)\n\n\n\n\n\n\nLes payants:\n\n\n\n\nhttps://sendgrid.com/\n\n\nhttps://fr.mailjet.com/\n\n\n\n\nhttp://mailchimp.com/\n\n\n\n\nhttp://openclassrooms.com/courses/reussir-sa-campagne-d-e-mailing-avec-mailchimp\n\n\nhttp://mailchimp.meteor.com/\n\n\n\n\n\n\n\n\nComparatifs\n\n\n\n\nhttp://alternativeto.net/software/mailgun/\n\n\nhttps://www.g2crowd.com/products/mailgun/competitors/alternatives\n\n\nhttp://www.sitepoint.com/email-as-a-service-part-2-sendgrid-mailgun-and-postmark/\n\n\n\n\nD\u00e9ploiement sur meteor.com\n\n\nVous devez avoir un compte d\u00e9veloppeur chez Meteor\n\n\nLes donn\u00e9es de ce compte sont stock\u00e9 apr\u00e8s la premi\u00e8res authentification dans ~/.meteorsession\n\n\n$ meteor deploy myproject\n\n\n\n\nOuvrez votre site \u00e0 l'adresse http://myproject.meteor.com\n\n\nLes modules Telescope\n\n\nLes th\u00e8mes Telescope\n\n\n\n\nhttp://www.telescopeapp.org/themes\n\n\nhttp://telescope-iris.meteor.com/\n\n\nhttps://github.com/WebbROI/telescope-themes/tree/master/telescope-theme-iris\n\n\n\n\n\n# Avant de l'installer, param\u00e8trer \nNavigation Layout\n sur Side\n\n$ meteor add webbroi:telescope-theme-iris\n\n\n\n\n\nPour personnaliser un th\u00e8me, il suffit de le t\u00e9l\u00e9charger dans le r\u00e9pertoire \"packages\"\n\n\nAjout de page static\n\n\nDans settings, utilisez le menu page. Le contenu s'\u00e9crit en Markdown\n\n\nAjout de fonctionnalit\u00e9s\n\n\nAuthentification github\n\n\n\n\nSur Telescope, le settings ne prend pas en compte l'ajout du nouveau module pour la configuration\n\n\n\n\n$ meteor add accounts-github\n\n\n\n\nPackage custom\n\n\nUn exemple de package est d\u00e9j\u00e0 disponible dans packages/custom\n\n\n\n\nIl permet par exemple:\n\n\nd'ajouter des champs \u00e0 chaque collection (lib/custom_fields.js)\n\n\nd'ajouter des callbacks (lib/callbacks.js)\n\n\nd'ajouter des modules de template (lib/template_modules.js) ???", 
            "title": "Site Communautaire"
        }, 
        {
            "location": "/app-telescope/#telescope", 
            "text": "M\u00eame si vous n'avez pas l'utilisation de cette application, je vous sugg\u00e8re vivement d'\u00e9tudier son code source car il s'agit vraiment de tr\u00e8s bonnes pratiques en Javascript et plus particuli\u00e8rement avec Meteor.   http://www.telescopeapp.org/  https://github.com/TelescopeJS/Telescope  http://www.bootstrappers.io/", 
            "title": "Telescope"
        }, 
        {
            "location": "/app-telescope/#sites-applications-realises-avec-telescope-et-dont-les-sources-sont-disponibles", 
            "text": "http://www.crunchhunt.com/  https://github.com/TelescopeJS/CrunchHunt  https://crater.io/  https://github.com/meteorclub/crater.io  http://hangouts.codebuddies.org/  https://github.com/lpatmo/cb", 
            "title": "Sites / Applications r\u00e9alis\u00e9s avec Telescope et dont les sources sont disponibles"
        }, 
        {
            "location": "/app-telescope/#bonne-pratiques", 
            "text": "Espaces de nom (NameSpaces)  Que des packages", 
            "title": "Bonne pratiques"
        }, 
        {
            "location": "/app-telescope/#todo", 
            "text": "Suppression des posts  Ajout Recaptcha", 
            "title": "TODO"
        }, 
        {
            "location": "/app-telescope/#creation-dun-projet-telescope", 
            "text": "Cr\u00e9ation du projet  $ meteor create myproject\n\n$ cd myproject\n\n$ rm -f myproject.*  Editez .meteor/packages et ajoutez:  telescope:core\n\ntelescope:migrations\ntelescope:api\ntelescope:daily\ntelescope:datetimepicker\ntelescope:email\ntelescope:embedly\ntelescope:getting-started\ntelescope:invites\ntelescope:kadira\ntelescope:newsletter\ntelescope:notifications\ntelescope:pages\ntelescope:post-by-feed\ntelescope:releases\ntelescope:rss\ntelescope:scoring\ntelescope:search\ntelescope:share\ntelescope:singleday\ntelescope:subscribe-to-posts\ntelescope:tagline-banner\ntelescope:tags\ntelescope:theme-base\ntelescope:theme-hubble\ntelescope:update-prompt  Modules non install\u00e9 et non document\u00e9s:  # Pas fonctionnel !!!\n# https://github.com/TelescopeJS/Telescope/blob/master/packages/telescope-sitemap\n# Fournit un /sitemap.xml - D\u00e9clenchera une erreur si l'url du site n'est pas renseign\u00e9\n# $ meteor add telescope:sitemap  Mise \u00e0 jour et d\u00e9marrage  Le premier utilisateur enregistr\u00e9 aura les droits Administrateur.  NE pas supprimer tout de suites les utilisateurs de d\u00e9monstration car ils semblent rattach\u00e9s aux Post  $ meteor update\n\n$ meteor  Configuration  Enregistrez-vous et ouvrez la page http://localhost/settings pour configurer le site  Configuration des Mail  Utilisation du service MailGun    Inscrivez-vous sur http://www.mailgun.com/    Entrez l'url avec votre compte mailgun dans le champs Mail Url:    smtp://postmaster%40telescope.mailgun.org:password@smtp.mailgun.org:587/  Liste des services d'envoi de mail   Utilisable gratuitement (mais limit\u00e9)  http://www.mandrill.com/ (12 000 mails par mois)   http://www.mailgun.com/ (10 000 mails par mois - A condition d'ajouter son nom de domaine ?)    Les payants:   https://sendgrid.com/  https://fr.mailjet.com/   http://mailchimp.com/   http://openclassrooms.com/courses/reussir-sa-campagne-d-e-mailing-avec-mailchimp  http://mailchimp.meteor.com/     Comparatifs   http://alternativeto.net/software/mailgun/  https://www.g2crowd.com/products/mailgun/competitors/alternatives  http://www.sitepoint.com/email-as-a-service-part-2-sendgrid-mailgun-and-postmark/", 
            "title": "Cr\u00e9ation d'un projet Telescope"
        }, 
        {
            "location": "/app-telescope/#deploiement-sur-meteorcom", 
            "text": "Vous devez avoir un compte d\u00e9veloppeur chez Meteor  Les donn\u00e9es de ce compte sont stock\u00e9 apr\u00e8s la premi\u00e8res authentification dans ~/.meteorsession  $ meteor deploy myproject  Ouvrez votre site \u00e0 l'adresse http://myproject.meteor.com", 
            "title": "D\u00e9ploiement sur meteor.com"
        }, 
        {
            "location": "/app-telescope/#les-modules-telescope", 
            "text": "", 
            "title": "Les modules Telescope"
        }, 
        {
            "location": "/app-telescope/#les-themes-telescope", 
            "text": "http://www.telescopeapp.org/themes  http://telescope-iris.meteor.com/  https://github.com/WebbROI/telescope-themes/tree/master/telescope-theme-iris   \n# Avant de l'installer, param\u00e8trer  Navigation Layout  sur Side\n\n$ meteor add webbroi:telescope-theme-iris  Pour personnaliser un th\u00e8me, il suffit de le t\u00e9l\u00e9charger dans le r\u00e9pertoire \"packages\"", 
            "title": "Les th\u00e8mes Telescope"
        }, 
        {
            "location": "/app-telescope/#ajout-de-page-static", 
            "text": "Dans settings, utilisez le menu page. Le contenu s'\u00e9crit en Markdown", 
            "title": "Ajout de page static"
        }, 
        {
            "location": "/app-telescope/#ajout-de-fonctionnalites", 
            "text": "Authentification github   Sur Telescope, le settings ne prend pas en compte l'ajout du nouveau module pour la configuration   $ meteor add accounts-github", 
            "title": "Ajout de fonctionnalit\u00e9s"
        }, 
        {
            "location": "/app-telescope/#package-custom", 
            "text": "Un exemple de package est d\u00e9j\u00e0 disponible dans packages/custom   Il permet par exemple:  d'ajouter des champs \u00e0 chaque collection (lib/custom_fields.js)  d'ajouter des callbacks (lib/callbacks.js)  d'ajouter des modules de template (lib/template_modules.js) ???", 
            "title": "Package custom"
        }, 
        {
            "location": "/links/", 
            "text": "Liens sur Meteor\n\n\nSites officiels\n\n\n\n\nmeteor.com\n\n\nDocumentation\n\n\nD\u00e9pot Meteor\n\n\nPlugins\n\n\n\n\nTutoriels - Fran\u00e7ais\n\n\n\n\nhttp://fr.discovermeteor.com/pdf\n\n\nhttp://openclassrooms.com/courses/creez-une-single-page-app-avec-node-js-et-meteor\n\n\nhttp://www.etiennebalit.com/2013/04/meteor-b-a-ba-et-bonnes-pratiques/\n\n\n\n\nTutoriels - Anglais\n\n\n\n\nhttp://www.meteor-tutorial.org/book\n\n\nhttp://iron-meteor.github.io/iron-router/#route-controllers\n\n\nhttp://robertdickert.com/blog/2014/05/09/set-up-navigation-with-iron-router-and-bootstrap/\n\n\nhttps://github.com/awatson1978/meteor-cookbook\n\n\nhttp://www.webtempest.com/meteor-js-autoform-tutorial\n\n\nhttps://medium.com/@s_eschweiler/how-to-build-web-apps-ultra-fast-with-meteor-iron-scaffolding-and-automatic-form-generation-11734eda8e67\n\n\n\n\nArticles\n\n\nLes librairies les plus utiles\n\n\n\n\nhttps://github.com/aldeed/meteor-simple-schema\n\n\nhttps://github.com/aldeed/meteor-autoform\n\n\nhttps://github.com/aldeed/meteor-collection2\n\n\n\n\nEnvironnement de d\u00e9veloppement - IDE\n\n\nJe n'ai pas encore trouv\u00e9 l'environnement id\u00e9al pour Meteor.\n\n\nJ'ai laiss\u00e9 Eclipse de cot\u00e9 car je suis sous Windows et plusieurs d\u00e9pendances Node.js ou Meteor ne fonctionnent pas ou sont compliqu\u00e9s \u00e0 installer.\n\n\nPour l'instant, j'ai mis au moins une image Docker avec Cloud9, l'IDE en ligne et Meteor.\n\n\nIl est disponible sur https://github.com/srault95/meteor-app-base\n\n\n\n\nLes choix d'IDE sont:\n\n\nCloud9 - http://c9.io/\n\n\nWebStorm - https://www.jetbrains.com/webstorm/\n\n\nAtom - https://atom.io\n\n\n\n\n\n\n\n\nQuelques projets a suivre\n\n\nmeteor kitchen\n\n\nhttp://www.meteorkitchen.com\n\n\nLaunch Docker\n\n\nhttps://github.com/ongoworks/launchdock", 
            "title": "Liens"
        }, 
        {
            "location": "/links/#liens-sur-meteor", 
            "text": "", 
            "title": "Liens sur Meteor"
        }, 
        {
            "location": "/links/#sites-officiels", 
            "text": "meteor.com  Documentation  D\u00e9pot Meteor  Plugins", 
            "title": "Sites officiels"
        }, 
        {
            "location": "/links/#tutoriels-francais", 
            "text": "http://fr.discovermeteor.com/pdf  http://openclassrooms.com/courses/creez-une-single-page-app-avec-node-js-et-meteor  http://www.etiennebalit.com/2013/04/meteor-b-a-ba-et-bonnes-pratiques/", 
            "title": "Tutoriels - Fran\u00e7ais"
        }, 
        {
            "location": "/links/#tutoriels-anglais", 
            "text": "http://www.meteor-tutorial.org/book  http://iron-meteor.github.io/iron-router/#route-controllers  http://robertdickert.com/blog/2014/05/09/set-up-navigation-with-iron-router-and-bootstrap/  https://github.com/awatson1978/meteor-cookbook  http://www.webtempest.com/meteor-js-autoform-tutorial  https://medium.com/@s_eschweiler/how-to-build-web-apps-ultra-fast-with-meteor-iron-scaffolding-and-automatic-form-generation-11734eda8e67", 
            "title": "Tutoriels - Anglais"
        }, 
        {
            "location": "/links/#articles", 
            "text": "", 
            "title": "Articles"
        }, 
        {
            "location": "/links/#les-librairies-les-plus-utiles", 
            "text": "https://github.com/aldeed/meteor-simple-schema  https://github.com/aldeed/meteor-autoform  https://github.com/aldeed/meteor-collection2", 
            "title": "Les librairies les plus utiles"
        }, 
        {
            "location": "/links/#environnement-de-developpement-ide", 
            "text": "Je n'ai pas encore trouv\u00e9 l'environnement id\u00e9al pour Meteor.  J'ai laiss\u00e9 Eclipse de cot\u00e9 car je suis sous Windows et plusieurs d\u00e9pendances Node.js ou Meteor ne fonctionnent pas ou sont compliqu\u00e9s \u00e0 installer.  Pour l'instant, j'ai mis au moins une image Docker avec Cloud9, l'IDE en ligne et Meteor.  Il est disponible sur https://github.com/srault95/meteor-app-base   Les choix d'IDE sont:  Cloud9 - http://c9.io/  WebStorm - https://www.jetbrains.com/webstorm/  Atom - https://atom.io", 
            "title": "Environnement de d\u00e9veloppement - IDE"
        }, 
        {
            "location": "/links/#quelques-projets-a-suivre", 
            "text": "meteor kitchen  http://www.meteorkitchen.com  Launch Docker  https://github.com/ongoworks/launchdock", 
            "title": "Quelques projets a suivre"
        }, 
        {
            "location": "/tips/", 
            "text": "Tips\n\n\nAffecter automatiquement le user.id au document\n\n\n\nDockerImages.before.insert(function (userId, doc) {\n    doc.userId = Meteor.userId();\n});", 
            "title": "Tips"
        }, 
        {
            "location": "/tips/#tips", 
            "text": "", 
            "title": "Tips"
        }, 
        {
            "location": "/tips/#affecter-automatiquement-le-userid-au-document", 
            "text": "DockerImages.before.insert(function (userId, doc) {\n    doc.userId = Meteor.userId();\n});", 
            "title": "Affecter automatiquement le user.id au document"
        }, 
        {
            "location": "/faq/", 
            "text": "FAQ\n\n\nMeteor est t'il n\u00e9cessaire sur le serveur de production, une fois publi\u00e9 l'application ?\n\n\nNon, la commande \nmeteor build\n g\u00e9n\u00e8re un projet Node.js autonome.\n\n\nEst-ce que je peux publier mon application sur meteor.com mais utiliser une adresse avec mon domaine ?\n\n\nOui, il suffit d'ajouter un enregistrement CNAME dans le dns de votre domaine\n\n\nExemple:\n\n\nmyapp.mydomain.com  CNAME   myapp-v1.meteor.com.", 
            "title": "Faq"
        }, 
        {
            "location": "/faq/#faq", 
            "text": "Meteor est t'il n\u00e9cessaire sur le serveur de production, une fois publi\u00e9 l'application ?  Non, la commande  meteor build  g\u00e9n\u00e8re un projet Node.js autonome.  Est-ce que je peux publier mon application sur meteor.com mais utiliser une adresse avec mon domaine ?  Oui, il suffit d'ajouter un enregistrement CNAME dans le dns de votre domaine  Exemple:  myapp.mydomain.com  CNAME   myapp-v1.meteor.com.", 
            "title": "FAQ"
        }
    ]
}