{
    "docs": [
        {
            "location": "/", 
            "text": "Documentation Meteor\n\n\nAdresse de ce projet\n\n\n\n\nUtilisation du mod\u00e8le de projet\n\n\nTests Meteor\n\n\nPlugins\n\n\nIron Router\n\n\nSimple Schema\n\n\nuseraccounts\n\n\nAuthentification Sociale\n\n\nautoform-semantic-ui\n\n\ncollection-timestampable\n\n\ncollection-softremovable\n\n\nmeteor-collection-helpers\n\n\nmeteor-roles\n\n\nAPI Rest\n\n\nInternationalisation\n\n\npublish-counts\n\n\nS\u00e9curit\u00e9\n\n\nEn cours d'\u00e9valuation\n\n\n\n\n\n\nMails\n\n\nTips\n\n\nLiens\n\n\nFaq", 
            "title": "Accueil"
        }, 
        {
            "location": "/#documentation-meteor", 
            "text": "Adresse de ce projet   Utilisation du mod\u00e8le de projet  Tests Meteor  Plugins  Iron Router  Simple Schema  useraccounts  Authentification Sociale  autoform-semantic-ui  collection-timestampable  collection-softremovable  meteor-collection-helpers  meteor-roles  API Rest  Internationalisation  publish-counts  S\u00e9curit\u00e9  En cours d'\u00e9valuation    Mails  Tips  Liens  Faq", 
            "title": "Documentation Meteor"
        }, 
        {
            "location": "/project-structure/", 
            "text": "Structure de Projet Meteor\n\n\nIntroduction\n\n\nIl y a beaucoup d'avis sur cette question mais pour l'instant, pour ma part, j'ai choisi la suivante:\n\n\n.meteor/\nclient/\n    stylesheets/\n    lib/\n    views/\n    helpers.js\n    router.js\n    startup.js\ncommon/\n    lib/\n    collections/\nserver/\n    lib/\n    startup.js\n    methods.js\n    publish.js\npublic/\nprivate/\ni18n/\npackages/\nsettings.json\nREADME.md\n\n\n\nInstallation\n\n\ngit clone https://github.com/srault95/meteor-app-base.git myproject\n\ncd myproject/app\n\nmeteor update", 
            "title": "Structure de Projet"
        }, 
        {
            "location": "/project-structure/#structure-de-projet-meteor", 
            "text": "", 
            "title": "Structure de Projet Meteor"
        }, 
        {
            "location": "/project-structure/#introduction", 
            "text": "Il y a beaucoup d'avis sur cette question mais pour l'instant, pour ma part, j'ai choisi la suivante:  .meteor/\nclient/\n    stylesheets/\n    lib/\n    views/\n    helpers.js\n    router.js\n    startup.js\ncommon/\n    lib/\n    collections/\nserver/\n    lib/\n    startup.js\n    methods.js\n    publish.js\npublic/\nprivate/\ni18n/\npackages/\nsettings.json\nREADME.md", 
            "title": "Introduction"
        }, 
        {
            "location": "/project-structure/#installation", 
            "text": "git clone https://github.com/srault95/meteor-app-base.git myproject\n\ncd myproject/app\n\nmeteor update", 
            "title": "Installation"
        }, 
        {
            "location": "/tests/", 
            "text": "Tests Meteor\n\n\nTinyTest\n\n\nTutorials:\n\n\n\n\nhttps://github.com/awatson1978/meteor-cookbook/blob/master/cookbook/writing.unit.tests.md\n\n\n\n\nExemple:\n\n\nmeteor create helloworld\ncd helloworld\nmeteor add tinytest\nmeteor\n\n# Dans un autre terminal\nmeteor test-packages\n\n\n\nvelocity\n\n\n\n\n\n\nvelocity\n\n\n$ git clone https://github.com/meteor-velocity/velocity-examples.git\n$ cd velocity-examples/leaderboard-cucumber\n$ meteor\n\n\n\n\n\n\nmocha - (40 022 installations)\n\n\n\n\nAtmosphere\n\n\nSources\n\n\nFramework mochajs\n\n\n\n\nInstallation:\n\n\nmeteor add mike:mocha\n\n\n\nUsage:\n\n\nmeteor --test --release velocity:METEOR@1.1.0.2_2\n\n\n\ncucumber\n\n\n\n\nAtmosphere\n\n\nSources\n\n\n\n\nInstallation:\n\n\nmeteor add xolvio:cucumber\n\n\n\nPackages ajout\u00e9s:\n\n\namplify                           added, version 1.0.0\ncoffeescript                      added, version 1.0.6\npackage-version-parser            added, version 3.0.3\npracticalmeteor:chai              added, version 1.9.2_3\npracticalmeteor:loglevel          added, version 1.1.0_3\nsanjo:long-running-child-process  added, version 1.1.1\nsanjo:meteor-files-helpers        added, version 1.1.0_6\nsanjo:meteor-version              added, version 1.0.0\nvelocity:chokidar                 added, version 1.0.1_1\nvelocity:core                     added, version 0.6.5\nvelocity:html-reporter            added, version 0.6.2\nvelocity:meteor-internals         added, version 1.1.0_7\nvelocity:shim                     added, version 0.1.0\nxolvio:cucumber                   added, version 0.9.2\n\n\n\nJasmine\n\n\nhttps://github.com/awatson1978/meteor-cookbook/blob/master/cookbook/writing.unit.tests.with.jasmine.md", 
            "title": "Tests Meteor"
        }, 
        {
            "location": "/tests/#tests-meteor", 
            "text": "", 
            "title": "Tests Meteor"
        }, 
        {
            "location": "/tests/#tinytest", 
            "text": "Tutorials:   https://github.com/awatson1978/meteor-cookbook/blob/master/cookbook/writing.unit.tests.md   Exemple:  meteor create helloworld\ncd helloworld\nmeteor add tinytest\nmeteor\n\n# Dans un autre terminal\nmeteor test-packages", 
            "title": "TinyTest"
        }, 
        {
            "location": "/tests/#velocity", 
            "text": "velocity  $ git clone https://github.com/meteor-velocity/velocity-examples.git\n$ cd velocity-examples/leaderboard-cucumber\n$ meteor", 
            "title": "velocity"
        }, 
        {
            "location": "/tests/#mocha-40-022-installations", 
            "text": "Atmosphere  Sources  Framework mochajs   Installation:  meteor add mike:mocha  Usage:  meteor --test --release velocity:METEOR@1.1.0.2_2", 
            "title": "mocha - (40 022 installations)"
        }, 
        {
            "location": "/tests/#cucumber", 
            "text": "Atmosphere  Sources   Installation:  meteor add xolvio:cucumber  Packages ajout\u00e9s:  amplify                           added, version 1.0.0\ncoffeescript                      added, version 1.0.6\npackage-version-parser            added, version 3.0.3\npracticalmeteor:chai              added, version 1.9.2_3\npracticalmeteor:loglevel          added, version 1.1.0_3\nsanjo:long-running-child-process  added, version 1.1.1\nsanjo:meteor-files-helpers        added, version 1.1.0_6\nsanjo:meteor-version              added, version 1.0.0\nvelocity:chokidar                 added, version 1.0.1_1\nvelocity:core                     added, version 0.6.5\nvelocity:html-reporter            added, version 0.6.2\nvelocity:meteor-internals         added, version 1.1.0_7\nvelocity:shim                     added, version 0.1.0\nxolvio:cucumber                   added, version 0.9.2", 
            "title": "cucumber"
        }, 
        {
            "location": "/tests/#jasmine", 
            "text": "https://github.com/awatson1978/meteor-cookbook/blob/master/cookbook/writing.unit.tests.with.jasmine.md", 
            "title": "Jasmine"
        }, 
        {
            "location": "/iron-router/", 
            "text": "Router iron-router\n\n\n\n\nhttp://www.manuel-schoebel.com/blog/meteorjs-iron-router-filters-before-and-after-hooks\n\n\n\n\n// Hook onBeforeAction\nRouter.map(function () {\n    this.route('postShow', {\n        path: '/posts/:_id',\n\n        onBeforeAction: function (pause) {\n            if (!Meteor.user()) {\n            // render the login template but keep the url in the browser the same\n            this.render('login');\n        }\n    }\n}", 
            "title": "Iron Router"
        }, 
        {
            "location": "/iron-router/#router-iron-router", 
            "text": "http://www.manuel-schoebel.com/blog/meteorjs-iron-router-filters-before-and-after-hooks   // Hook onBeforeAction\nRouter.map(function () {\n    this.route('postShow', {\n        path: '/posts/:_id',\n\n        onBeforeAction: function (pause) {\n            if (!Meteor.user()) {\n            // render the login template but keep the url in the browser the same\n            this.render('login');\n        }\n    }\n}", 
            "title": "Router iron-router"
        }, 
        {
            "location": "/simple-schema/", 
            "text": "Simple Schema\n\n\nUn package qui va vraiment vous faciliter la vie !!!\n\n\nEn r\u00e9sumer, simple-schema vous permet de d\u00e9finir la structure de chaque Collection ou d'un simple formulaire.\n\n\nMais le plus important est que la validation est utilisable autant cot\u00e9 client que cot\u00e9 serveur.\n\n\nhttps://github.com/aldeed/meteor-simple-schema\n\n\nExemple:\n\n\n\nBookSchema = new SimpleSchema({\n  title: {\n    type: String,\n    label: \nTitle\n,\n    max: 200\n  },\n  author: {\n    type: String,\n    label: \nAuthor\n\n  },\n  copies: {\n    type: Number,\n    label: \nNumber of copies\n,\n    min: 0\n  },\n  lastCheckedOut: {\n    type: Date,\n    label: \nLast date this book was checked out\n,\n    optional: true\n  },\n  summary: {\n    type: String,\n    label: \nBrief summary\n,\n    optional: true,\n    max: 1000\n  }\n});\n\n\n\n\n\nLes types de champs\n\n\nEn version simple:\n\n\nString\nNumber\nBoolean\nObject\n\n\n\nLa m\u00eame chose comme tableau:\n\n\n[String]\n[Number]\n[Boolean]\n[Object]\n[Date]", 
            "title": "Simple Schema"
        }, 
        {
            "location": "/simple-schema/#simple-schema", 
            "text": "Un package qui va vraiment vous faciliter la vie !!!  En r\u00e9sumer, simple-schema vous permet de d\u00e9finir la structure de chaque Collection ou d'un simple formulaire.  Mais le plus important est que la validation est utilisable autant cot\u00e9 client que cot\u00e9 serveur.  https://github.com/aldeed/meteor-simple-schema  Exemple:  \nBookSchema = new SimpleSchema({\n  title: {\n    type: String,\n    label:  Title ,\n    max: 200\n  },\n  author: {\n    type: String,\n    label:  Author \n  },\n  copies: {\n    type: Number,\n    label:  Number of copies ,\n    min: 0\n  },\n  lastCheckedOut: {\n    type: Date,\n    label:  Last date this book was checked out ,\n    optional: true\n  },\n  summary: {\n    type: String,\n    label:  Brief summary ,\n    optional: true,\n    max: 1000\n  }\n});", 
            "title": "Simple Schema"
        }, 
        {
            "location": "/simple-schema/#les-types-de-champs", 
            "text": "En version simple:  String\nNumber\nBoolean\nObject  La m\u00eame chose comme tableau:  [String]\n[Number]\n[Boolean]\n[Object]\n[Date]", 
            "title": "Les types de champs"
        }, 
        {
            "location": "/social-auth/", 
            "text": "Authentification Sociale\n\n\nConfiguration Accounts.ui pour l'authentification sociales\n\n\nAccounts.ui.config({\n  requestPermissions: {\n    facebook: ['user_likes'],\n    github: ['user', 'repo']\n  },\n  requestOfflineToken: {\n    google: true\n  },\n  passwordSignupFields: 'USERNAME_AND_OPTIONAL_EMAIL'\n});\n\n\n\nPermissions par provider\n\n\n\n\nFacebook: http://developers.facebook.com/docs/authentication/permissions/\n\n\nGitHub: http://developer.github.com/v3/oauth/#scopes\n\n\nGoogle: https://developers.google.com/accounts/docs/OAuth2Login#scopeparameter\n\n\nMeetup: http://www.meetup.com/meetup_api/auth/#oauth2-scopes\n\n\nTwitter, Weibo, Meteor developer accounts: requestPermissions currently not supported\n\n\n\n\nlinkedin\n\n\n\n\nhttps://atmospherejs.com/pauli/accounts-linkedin\n\n\nhttps://github.com/PauliBuccini/meteor-accounts-linkedin/\n\n\nhttp://linkedin.com/\n\n\nhttps://developer.linkedin.com/docs/oauth2\n\n\nCr\u00e9ation d'une application : https://www.linkedin.com/developer/apps/new\n\n\n\n\n\n$ meteor add pauli:accounts-linkedin\n\n\n\n\n\nService Configuration:\n\n\n\n\nPar javascript\n\n\n\n\n\nServiceConfiguration.configurations.update(\n    { service: \nlinkedin\n },\n    { $set: {\n        clientId: \nXXXXXXXXXXXXXX\n,\n        secret: \nXXXXXXXXXXXXXXXX\n\n      }\n    },\n    { upsert: true }\n);\n\n\n\n\n\nMeteor Developpeur\n\n\n\n\nhttps://atmospherejs.com/meteor/accounts-meteor-developer\n\n\n\n\ngithub\n\n\nService Configuration:\n\n\n\n\nPar javascript\n\n\n\n\n\nServiceConfiguration.configurations.update(\n    { service: \ngithub\n },\n    { $set: {\n        clientId: \nXXXXXXXXXXXXXXXXXXXXXXXX\n,\n        secret: \nXXXXXXXXXXXXXXXXXXXXXXXX\n\n      }\n    },\n    { upsert: true }\n);\n\n\n\n\n\n\n\nPar le settings.json\n\n\n\n\nFacebook\n\n\nService Configuration:\n\n\n\n\nPar javascript\n\n\n\n\n\nServiceConfiguration.configurations.update(\n    { service: \nfacebook\n },\n    { $set: {\n        appId: \nXXXXXXXXXXXXXXX\n,\n        secret: \nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n\n      }\n    },\n    { upsert: true }\n);\n\n\n\n\n\nGoogle\n\n\nService Configuration:\n\n\n\n\nPar javascript\n\n\n\n\n\nServiceConfiguration.configurations.update(\n    { service: \ngoogle\n },\n    { $set: {\n        clientId: \nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n,\n        client_email: \nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n,\n        secret: \nXXXXXXXXXXXXXXXXXXXXXXXX\n\n      }\n    },\n    { upsert: true }\n);\n\n\n\n\n\nmeteor-developer\n\n\nService Configuration:\n\n\n\n\nPar javascript\n\n\n\n\n\nServiceConfiguration.configurations.update(\n    { service: \nmeteor-developer\n },\n    { $set: {\n        clientId: \nXXXXXXXXXXXXXXXXX\n,\n        secret: \nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n\n      }\n    },\n    { upsert: true }\n);", 
            "title": "Authentification Sociale"
        }, 
        {
            "location": "/social-auth/#authentification-sociale", 
            "text": "", 
            "title": "Authentification Sociale"
        }, 
        {
            "location": "/social-auth/#configuration-accountsui-pour-lauthentification-sociales", 
            "text": "Accounts.ui.config({\n  requestPermissions: {\n    facebook: ['user_likes'],\n    github: ['user', 'repo']\n  },\n  requestOfflineToken: {\n    google: true\n  },\n  passwordSignupFields: 'USERNAME_AND_OPTIONAL_EMAIL'\n});  Permissions par provider   Facebook: http://developers.facebook.com/docs/authentication/permissions/  GitHub: http://developer.github.com/v3/oauth/#scopes  Google: https://developers.google.com/accounts/docs/OAuth2Login#scopeparameter  Meetup: http://www.meetup.com/meetup_api/auth/#oauth2-scopes  Twitter, Weibo, Meteor developer accounts: requestPermissions currently not supported", 
            "title": "Configuration Accounts.ui pour l'authentification sociales"
        }, 
        {
            "location": "/social-auth/#linkedin", 
            "text": "https://atmospherejs.com/pauli/accounts-linkedin  https://github.com/PauliBuccini/meteor-accounts-linkedin/  http://linkedin.com/  https://developer.linkedin.com/docs/oauth2  Cr\u00e9ation d'une application : https://www.linkedin.com/developer/apps/new   \n$ meteor add pauli:accounts-linkedin  Service Configuration:   Par javascript   \nServiceConfiguration.configurations.update(\n    { service:  linkedin  },\n    { $set: {\n        clientId:  XXXXXXXXXXXXXX ,\n        secret:  XXXXXXXXXXXXXXXX \n      }\n    },\n    { upsert: true }\n);", 
            "title": "linkedin"
        }, 
        {
            "location": "/social-auth/#meteor-developpeur", 
            "text": "https://atmospherejs.com/meteor/accounts-meteor-developer", 
            "title": "Meteor Developpeur"
        }, 
        {
            "location": "/social-auth/#github", 
            "text": "Service Configuration:   Par javascript   \nServiceConfiguration.configurations.update(\n    { service:  github  },\n    { $set: {\n        clientId:  XXXXXXXXXXXXXXXXXXXXXXXX ,\n        secret:  XXXXXXXXXXXXXXXXXXXXXXXX \n      }\n    },\n    { upsert: true }\n);   Par le settings.json", 
            "title": "github"
        }, 
        {
            "location": "/social-auth/#facebook", 
            "text": "Service Configuration:   Par javascript   \nServiceConfiguration.configurations.update(\n    { service:  facebook  },\n    { $set: {\n        appId:  XXXXXXXXXXXXXXX ,\n        secret:  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX \n      }\n    },\n    { upsert: true }\n);", 
            "title": "Facebook"
        }, 
        {
            "location": "/social-auth/#google", 
            "text": "Service Configuration:   Par javascript   \nServiceConfiguration.configurations.update(\n    { service:  google  },\n    { $set: {\n        clientId:  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX ,\n        client_email:  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX ,\n        secret:  XXXXXXXXXXXXXXXXXXXXXXXX \n      }\n    },\n    { upsert: true }\n);", 
            "title": "Google"
        }, 
        {
            "location": "/social-auth/#meteor-developer", 
            "text": "Service Configuration:   Par javascript   \nServiceConfiguration.configurations.update(\n    { service:  meteor-developer  },\n    { $set: {\n        clientId:  XXXXXXXXXXXXXXXXX ,\n        secret:  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX \n      }\n    },\n    { upsert: true }\n);", 
            "title": "meteor-developer"
        }, 
        {
            "location": "/autoform-semantic-ui/", 
            "text": "autoform-semantic-ui\n\n\nTemplate Semantic-ui pour le package aldeed:autoform.\n\n\nhttps://github.com/fabienb4/meteor-autoform-semantic-ui\n\n\nInstallation\n\n\nD\u00e9pendances: templating, underscore, aldeed:autoform\n\n\n$ meteor add semantic:ui-css\n$ meteor add fabienb4:autoform-semantic-ui\n\n\n\n\nConfiguration globale:\n\n\n\n//client/startup.js\nMeteor.startup(function() {\n    AutoForm.setDefaultTemplate(\nsemanticUI\n);\n});\n\n\n\n\n\nConfiguration par formulaire:\n\n\n{{#autoForm collection=\nItems\n id=\nitemsInsertForm\n type=\ninsert\n template=\nsemanticUI\n}}\n...\n{{/autoForm}}\n\n\n\n\nUsage\n\n\nChamps select\n - http://semantic-ui.com/collections/form.html#basic-select\n\n\n{{\n afQuickField name=\nitems\n type=\nbasic-select\n options=items}}\n\n\n\n\n\n// Template helpers:\nTemplate.main.helpers({\n    items: [\n      { value: \n1\n, label: \nItem 1\n },\n      { value: \n2\n, label: \nItem 2\n }\n    ];\n});", 
            "title": "autoform-semantic-ui"
        }, 
        {
            "location": "/autoform-semantic-ui/#autoform-semantic-ui", 
            "text": "Template Semantic-ui pour le package aldeed:autoform.  https://github.com/fabienb4/meteor-autoform-semantic-ui  Installation  D\u00e9pendances: templating, underscore, aldeed:autoform  $ meteor add semantic:ui-css\n$ meteor add fabienb4:autoform-semantic-ui  Configuration globale:  \n//client/startup.js\nMeteor.startup(function() {\n    AutoForm.setDefaultTemplate( semanticUI );\n});  Configuration par formulaire:  {{#autoForm collection= Items  id= itemsInsertForm  type= insert  template= semanticUI }}\n...\n{{/autoForm}}  Usage  Champs select  - http://semantic-ui.com/collections/form.html#basic-select  {{  afQuickField name= items  type= basic-select  options=items}}  // Template helpers:\nTemplate.main.helpers({\n    items: [\n      { value:  1 , label:  Item 1  },\n      { value:  2 , label:  Item 2  }\n    ];\n});", 
            "title": "autoform-semantic-ui"
        }, 
        {
            "location": "/useraccounts/", 
            "text": "useraccounts\n\n\n\n\nhttps://github.com/meteor-useraccounts/core/blob/master/Guide.md\n\n\nhttps://atmospherejs.com/useraccounts/core\n\n\nhttps://github.com/meteor-useraccounts/core/\n\n\nhttps://useraccounts-semantic-ui.meteor.com/\n\n\n\n\nhttps://github.com/meteor-useraccounts/semantic-ui\n\n\n\n\n\n\nD\u00e9mo: http://useraccounts.meteor.com/\n\n\n\n\nBoilerplate pour chaque besoin: https://github.com/meteor-useraccounts/boilerplates\n\n\n\n\nTODO\n\n\n\n\nD\u00e9finition d'un sch\u00e9ma pour la collection Meteor.users\n\n\nRendre obligatoire l'auth sur les routes /admin/* par exemple\n\n\nUsage de la collection meteor_accounts_loginServiceConfiguration\n\n\n\n\nIntroduction\n\n\nuseraccounts:core fournit toutes les fonctions de base mais aucun template.\n\n\nil faut utiliser une des extensions comme useraccounts:semantic-ui pour obtenir des templates.\n\n\nExemple avec le bouton de connection:\n\n\n{{\n atNavButton}}\n\n\n\n\n\n\n\nLe code correspondant se trouve dans:\n\n\nhttps://github.com/meteor-useraccounts/semantic-ui/blob/master/lib/at_nav_button.html\n\n\nhttps://github.com/meteor-useraccounts/semantic-ui/blob/master/lib/at_nav_button.js\n\n\n\n\n\n\n\n\nRelation avec les packages standard Meteor\n\n\n\n\n\n\nhttps://www.meteor.com/accounts\n\n\nA priori, appartient \u00e0 accounts-ui-unstyled - https://github.com/meteor/meteor/tree/devel/packages/accounts-ui-unstyled\npasswordSignupFields: 'EMAIL_ONLY'\n\n\nAccounts.validateLoginAttempt\nAccounts.onLoginFailure\nAccounts.onLogin\nMeteor.logoutOtherClients\n//locked-account or unauthorized-ip.\nMeteor.user()\nMeteor.loggingIn()\n\n\naccounts-ui\n    Accounts.loginWithPassword, Accounts.loginWithFacebook, Accounts.createUser and Accounts.forgotPassword\n\n\n\n\n\n\nExemple d'Installation - Authentification par mot de passe - Templates Semantic-ui\n\n\n\n\nNe pas installer accounts-ui ?\n\n\nLe package installe d\u00e9j\u00e0 useraccounts:core accounts-base\n\n\nIl ne faut pas installer directement le package useraccounts:core mais son impl\u00e9mentation selon le framework utilis\u00e9\n\n\nInstaller les packages providers comme accounts-password, accounts-github, ... selon les besoins\n\n\n\n\n$ meteor add accounts-password\n$ meteor add semantic:ui-css\n$ meteor add useraccounts:semantic-ui\n\n\n\n\nPlugin ensureSignedIn\n\n\n\n\nRend obligatoire l'authentification pour toutes les routes\n\n\n\n\n\nRouter.plugin('ensureSignedIn');\n\n\n\n\n\n\n\n\n\nRend obligatoire l'authentification pour les routes plac\u00e9s dans only[]\n\n\n\n\n\n\nVoir diff\u00e9rence avec AccountsTemplates.configureRoute('ensureSignedIn') ?\n\n\n\n\n\n\n\nRouter.plugin('ensureSignedIn', {\n  only: ['private']\n});\n\n\n\n\n\n\n\nRend obligatoire l'authentification pour toutes les routes sauf celles plac\u00e9s dans except[]\n\n\n\n\n\nRouter.plugin('ensureSignedIn', {\n    except: ['home', 'atSignIn', 'atSignUp', 'atForgotPassword']\n});\n\n\n\n\n\n\n\nPersonnalisation du template et layout\n\n\n\n\n\nAccountsTemplates.configureRoute('ensureSignedIn', {\n    template: 'myLogin',\n    layoutTemplate: 'myLayout',\n});\n\n\n\n\n\nApi\n\n\n\n\nPackage inclus avec Meteor: Account, AccountsServer\n\n\nCot\u00e9 client, Accounts = new AccountsClient();\n\n\nCot\u00e9 server, Accounts = new AccountsServer(Meteor.server);\n\n\nMeteor.users est remplac\u00e9 par Accounts.users\n\n\n\n\n\n\n\n\nTemplate atForm\n\n\n\n\nPar exemple pour customiser le template d'authentification, placez dans un template\n\n\n\n\n{{\n atForm state='signUp'}}\n\nOU\n\n{{\n atForm}} car le state par d\u00e9faut est signUp\n\n\n\n\n\nStates\n\n\nchangePwd               Formulaire de changement de mot de passe\n\nenrollAccount           Formulaire d'inscription ???\n\nforgotPwd               Formulaire pour saisir une email \u00e0 laquelle sera envoy\u00e9 le lien de r\u00e9cup\u00e9ration de mot de passe\n\nhide                    Aucun\n\nresendVerificationEmail Envoi d'un nouveau mail de v\u00e9rification\n\nresetPwd                R\u00e9initialisation du mot de passe\n\nsignIn                  Formulaire d'authentification\n\nsignUp                  ?\n\nverifyEmail             R\u00e9sultat apr\u00e8s avoir cliqu\u00e9 sur le lien de r\u00e9cup\u00e9ration de mot de passe re\u00e7u par mail\n\n\n\nBouton atNavButton\n\n\n\n\n\n\n\nConfiguration\n\n\n\n\n\n\nhttps://github.com/meteor-useraccounts/core/blob/master/Guide.md\n\n\n\n\n\n\nPlacez la configuration dans lib/config/at_config.js\n\n\n\n\n\n\nRoutage\n\n\nIl n'y a aucune route par d\u00e9faut.\n\n\nLa d\u00e9finition des routes par AccountsTemplates.configureRoute() s'utilise comme les routes habituels d'Iron Router\n\n\nChaque route peut \u00eatre d\u00e9finit avec ses param\u00e8tres par d\u00e9faut ou personnalis\u00e9\n\n\n\nAccountsTemplates.configureRoute('signIn');\n\nAccountsTemplates.configureRoute('signIn', {\n    name: 'signin',\n    path: '/login',\n    template: 'myLogin',\n    layoutTemplate: 'myLayout',\n    redirect: '/user-profile',\n});\n\nAccountsTemplates.configureRoute('signIn', {\n    // Redirige vers /user/ae8WQQk6DrtDzA2AZ apr\u00e8s une authentification r\u00e9ussie\n    redirect: function(){\n        var user = Meteor.user();\n        if (user)\n          Router.go('/user/' + user._id);\n    }\n});\n\n\n\n\n\nExemple de configuration compl\u00e8te\n\n\n\n// lib/config/at_config.js\nAccountsTemplates.configure({\n    // Behaviour\n    confirmPassword: true,                  // (default: true) - Demande la confirmation du mot de passe (register)\n    defaultState: \nsignIn\n,                 // (default: signIn) - State par d\u00e9faut\n    enablePasswordChange: true,             // (default: false) - Active la fonction de changement de mot de passe\n    enforceEmailVerification: false,        // (default: false) - experimental - A utiliser seulement avec le service accounts-password\n\n    forbidClientAccountCreation: false,     // (default: false) - Si true, d\u00e9sactive l'enregistrement\n                                            // Remplace Accounts.config({forbidClientAccountCreation : true});\n\n    overrideLoginErrors: true,              // (default: true) - Si true, affiche erreur g\u00e9n\u00e9rique de connection sans pr\u00e9ciser si mauvais login ou pass\n    sendVerificationEmail: false,           // (default: false) - Si true, envoi un lien de confirmation par mail pour chaque nouvel utilisateur\n    redirectTimeout: 2000,                  // (default: 2000) - Timeout de redirection apr\u00e8s: enrollAccount, forgotPwd, resetPwd, ou verifyEmail\n    lowercaseUsername: false,               // (default: false) - A REVOIR\n    socialLoginStyle: 'popup',              // (default: popup) - Voir LoginStyle - choix (redirect, popup)\n                                            // Si popup, ouvre la page d'authentification du service dans un modal\n\n    // Appearance\n    defaultLayout: undefined,               // (default: undefined)\n    hideSignInLink: false,                  // (default: false) - Si true, n'affiche jamais le lien de connection\n    hideSignUpLink: false,                  // (default: false) - Si true, n'affiche jamais le lien de d\u00e9connection\n    showAddRemoveServices: false,           // (default: false) - A revoir - en rapport avec synchro comptes sociaux - https://atmospherejs.com/splendido/accounts-meld\n    showForgotPasswordLink: false,          // (default: false) - Si true, affiche lien de r\u00e9cup\u00e9ration de mot de passe\n    showLabels: true,                       // (default: true) - si true, affiche les label au dessous des champs dans les formulaires\n    showPlaceholders: true,                 // (default: false) - si true, Affiche les placeholders dans les champs\n    showResendVerificationEmailLink: false, // (default: false) - Si true, affiche le lien pour envoyer \u00e0 nouveau le mail de v\u00e9rification\n\n    // Client-side Validation\n    continuousValidation: false,            // (default: false) - Active la validation cot\u00e9 client pendant la saisie\n    negativeFeedback: false,                // (default: false) - continuousValidation\n    negativeValidation: true,               // (default: false) - continuousValidation\n    positiveValidation: true,               // (default: false) - continuousValidation\n    positiveFeedback: true,                 // (default: false) - continuousValidation\n    showValidating: true,                   // (default: false) -\n\n    // Links\n    homeRoutePath: '/',                     // (default: /) - Pas Home pour les redirections\n    //privacyUrl: 'privacy',                // (default: undefined) - Affiche lien ?\n    //termsUrl: 'terms-of-use',             // (default: undefined) - Affiche lien ?\n\n    // Hooks\n    //onLogoutHook: myLogoutFunc,           // Hook de routage appell\u00e9 par AccountsTemplates.logout\n    //onSubmitHook: mySubmitFunc,           // Hook appell\u00e9 quand submit d'un des formulaire est ok - func(error, state)\n    //preSignUpHook: myPreSubmitFunc,       // Comme ci-dessous mais appell\u00e9 avant submit - func(password, info)\n\n    // Texts customization\n    /*\n    texts: {\n      button: {\n          signUp: \nRegister Now!\n\n      },\n      socialSignUp: \nRegister\n,\n      socialIcons: {\n          \nmeteor-developer\n: \nfa fa-rocket\n\n      },\n      title: {\n          forgotPwd: \nRecover Your Password\n\n      },\n    },\n    */\n});\n\n\n\n\n\nConfiguration ReCapcha\n\n\nrecaptcha\n\n\nLes cl\u00e9s peuvent se configurer ici ou dans Meteor.Settings ou dans settings.json\n\n\nAccountsTemplates.configure({\n    reCaptcha: {\n        siteKey: YOUR SITE KEY,\n        secretKey: YOUR SECRET KEY,\n        theme: \nlight\n, // light ou dark\n        data_type: \nimage\n // image ou audio\n    },\n    showReCaptcha: true\n});\n\n\n\n\n\nExemple de SubmitHook\n\n\n\nvar mySubmitFunc = function(error, state){\n  if (!error) {\n    if (state === \nsignIn\n) {\n      // Successfully logged in\n      // ...\n    }\n    if (state === \nsignUp\n) {\n      // Successfully registered\n      // ...\n    }\n  }\n};\n\nAccountsTemplates.configure({\n    onSubmitHook: mySubmitFunc\n});\n\n\n\n\nPersonnalisation de la structure des champs de formulaire\n\n\nExemple de personnalisation des champs avec \naldeed:template-extension\n pour le package \nuseraccounts:semantic-ui\n\n\nChamps sp\u00e9ciaux qu'il faut supprimer avant de red\u00e9finir\n\n\ncurrent_password\nemail\npassword\npassword_again\nusername\nusername_and_email\n\n\n\nExemple avec le champs password\n\n\nAccountsTemplates.removeField('password');\nAccountsTemplates.addField({\n    _id: 'password',\n    type: 'password',\n    required: true,\n    minLength: 6,\n    re: /(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}/,\n    errStr: 'At least 1 digit, 1 lower-case and 1 upper-case',\n});\n\n\n\n\nParticularit\u00e9 de la customisation des champs username ou email\n\n\nIl faut imp\u00e9rativement supprimer le champs password avant de r\u00e9d\u00e9finir username ou password\n\n\nPour ne pas avoir \u00e0 d\u00e9finir \u00e0 nouveau password, proc\u00e9dez comme ci-dessous:\n\n\nvar pwd = AccountsTemplates.removeField('password');\nAccountsTemplates.removeField('email');\nAccountsTemplates.addFields([\n  {\n      _id: \nusername\n,\n      type: \ntext\n,\n      displayName: \nusername\n,\n      required: true,\n      minLength: 5,\n  },\n  {\n      _id: 'email',\n      type: 'email',\n      required: true,\n      displayName: \nemail\n,\n      re: /.+@(.+){2,}\\.(.+){2,}/,\n      errStr: 'Invalid email',\n  },\n  pwd\n]);\n\n\n\n\nChangement de la politique de mot de passe\n\n\n**Demande un mot de passe d'au minimum 6 caract\u00e8res\n\n\nAccountsTemplates.addField({\n    _id: 'password',\n    type: 'password',\n    placeholder: {\n        signUp: \nAt least six characters\n\n    },\n    required: true,\n    minLength: 6,\n    re: /(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}/,\n    errStr: 'At least 1 digit, 1 lowercase and 1 uppercase',\n});\n\n\n\n\nAjoute un champs t\u00e9l\u00e9phone\n\n\nChamps phone avec validation cot\u00e9 serveur (fonction isValidPhone \u00e0 d\u00e9finir):\n\n\nAccountsTemplates.addField({\n    _id: 'phone',\n    type: 'tel',\n    displayName: \nPhone\n,\n    required: true,\n    func: function (number) {\n        if (Meteor.isServer){\n          if (isValidPhone(number))\n              return false; // meaning no error!\n          return true; // Validation error!\n        }\n    },\n    errStr: 'Invalid Phone number!',\n});\n\n\n\n\nV\u00e9rifie si le username existe d\u00e9j\u00e0\n\n\n// server/methods.js\nif (Meteor.isServer){\n    Meteor.methods({\n        \nuserExists\n: function(username){\n            return !!Meteor.users.findOne({username: username});\n        },\n    });\n}\n\n// lib/config/at_config.js\nAccountsTemplates.addField({\n    _id: 'username',\n    type: 'text',\n    required: true,\n    func: function(value){\n        if (Meteor.isClient) {\n            console.log(\nValidating username...\n);\n            var self = this;\n            Meteor.call(\nuserExists\n, value, function(err, userExists){\n                if (!userExists)\n                    self.setSuccess();\n                else\n                    self.setError(userExists);\n                self.setValidating(false);\n            });\n            return;\n        }\n        // Server\n        return Meteor.call(\nuserExists\n, value);\n    },\n});\n\n\n\n\nVOIR AUSSI:\n\n\n//Dans la d\u00e9finition d'un sch\u00e9ma\nusername: {\n  type: String,\n  regEx: /^[a-z0-9A-Z_]{3,15}$/,\n  unique: true,\n  custom: function () {\n    if (Meteor.isClient \n this.isSet) {\n      Meteor.call(\naccountsIsUsernameAvailable\n, this.value, function (error, result) {\n        if (!result) {\n          Meteor.users.simpleSchema().namedContext(\ncreateUserForm\n).addInvalidKeys([{name: \nusername\n, type: \nnotUnique\n}]);\n        }\n      });\n    }\n  }\n}\n\n\n\n\nAjout d'un champs Genre\n\n\nAccountsTemplates.addField({\n    _id: \ngender\n,\n    type: \nselect\n,\n    displayName: \nGender\n,\n    select: [\n        {\n            text: \nMale\n,\n            value: \nmale\n,\n        },\n        {\n            text: \nFemale\n,\n            value: \nfemale\n,\n        },\n    ],\n});\n\n\n\n\nChamps de souscription \u00e0 la mailing list\n\n\nAccountsTemplates.addField({\n    _id: \nmailing_list\n,\n    type: \ncheckbox\n,\n    displayName: \nSubscribe me to mailing List\n,\n});\n\n\n\n\nChamps cach\u00e9 contenant un code de validation\n\n\n// http://my.splendido.site/sign-up?email=giorgio@example.com\nreg_code=123\nAccountsTemplates.addField({\n    _id: 'reg_code',\n    type: 'hidden'\n});\n\n\n\n\nInternationalisation - i18n\n\n\naccounts-t9n\n\n\n$ meteor add softwarerero:accounts-t9n\n\n\n\n\n// /lib/config/at_config.js\nT9n.setLanguage(\nfr\n);\n\n\n\n\nPersonnalisation des formulaires UI\n\n\nRequis: \ntemplate-extension\n\n\n$ meteor add aldeed:template-extension\n\n\n\n\ntemplate name=\nappAtInput\n\n  {{#if options.dividerBefore}}\nhr\n{{/if}}\n\n  {{\n Template.dynamic template=templateName}}\n\n/template\n\n\n\n\n\nAccountsTemplates.addField({\n  _id: \naddress\n,\n  type: \ntext\n,\n\n  // Options qui seront pass\u00e9s au formulaire\n  options: {\n    dividerBefore: true\n  }\n});\n\nTemplate.appAtInput.replaces(\natInput\n);\n\n\n\n\nSolution compl\u00e8te avec semantic-ui - hors authentification sociale\n\n\nInstallation\n\n\n$ meteor add accounts-ui-unstyled\n$ meteor add accounts-password\n$ meteor add semantic:ui-css\n$ meteor add softwarerero:accounts-t9n\n$ meteor add useraccounts:semantic-ui\n\n# OU\n$ meteor add accounts-ui-unstyled accounts-password semantic:ui-css softwarerero:accounts-t9n useraccounts:semantic-ui\n\n# OU pour iron cli\n$ iron add accounts-ui-unstyled accounts-password semantic:ui-css softwarerero:accounts-t9n useraccounts:semantic-ui\n\n\n\n\n\nD\u00e9pendances:\n\n\nless\nreactive-var\nhttp\nunderscore\naccounts-base\nreactive-dict\ncheck\nmeteor\ntemplating\nblaze\nuseraccounts:core\niron:router\nsoftwarerero:accounts-t9n\n\n\n\nConfiguration\n\n\nTips - Solution d\u00e9di\u00e9 mobile avec Ratchet\n\n\n\n\nhttps://atmospherejs.com/useraccounts/ratchet\n\n\n\n\nStructure d'un enregistrement d'un compte utilisateur\n\n\n\n\nLa structure peut varier mais il y a des \u00e9l\u00e9ments important \u00e0 noter:\n\n\nemails est une liste d'objet\n\n\nservices est une collections avec comme cl\u00e9, le nom du service\n\n\n\n\n\n\n\n\n{\n  _id: \nbbca5d6a-2156-41c4-89da-0329e8c99a4f\n,  // Meteor.userId()\n  username: \ncool_kid_13\n, // unique name\n  emails: [\n    { address: \ncool@example.com\n, verified: true },\n    { address: \nanother@different.com\n, verified: false }\n  ],\n  createdAt: Wed Aug 21 2013 15:16:52 GMT-0700 (PDT),\n  profile: {\n    name: \nJoe Schmoe\n\n  },\n  services: {\n    facebook: {\n      id: \n709050\n, // facebook id\n      accessToken: \nAAACCgdX7G2...AbV9AZDZD\n\n    },\n    resume: {\n      loginTokens: [\n        { token: \n97e8c205-c7e4-47c9-9bea-8e2ccc0694cd\n,\n          when: 1349761684048 }\n      ]\n    }\n  }\n}\n\n\n\n\n\n\nTips - Publish - Liste des utilisateurs\n\n\n\n\nSource \nmeteor-cookbook\n\n\n\n\n// server/publish.js\nMeteor.publish(\nusersDirectory\n, function () {\n  try{\n    return Meteor.users.find({}, {fields: {\n      '_id': true,\n      'username': true,\n      'profile': true,\n      'profile.name': true,\n      'profile.avatar': true,\n      'profile.username': true,\n\n      'emails': true,\n      'emails[0].address': true,\n      'emails.address': true\n    }});\n  }catch(error){\n    console.log(error);\n  }\n});\n\n\n\n\nTips - Autres solutions\n\n\n\n\nhttps://atmospherejs.com/juliancwirko/s-id\n\n\nSolution Manuelle\n\n\naccounts-entry\n\n\n\n\nTips - Profile Utilisateur et pr\u00e9f\u00e9rences\n\n\nTips - Int\u00e9gration de iron-router-auth\n\n\n\n\nhttps://github.com/zimme/meteor-iron-router-auth\n\n\n\n\n$ meteor add zimme:iron-router-auth\n\n\n\n\n{\n  authenticate: {\n    home: 'home',\n    layout: undefined,\n    logout: 'logout',\n    replaceState: undefined,\n    route: 'login',\n    template: undefined\n  },\n  authorize: {\n    allow: function() {return true},\n    deny: function() {return false}, // deny overrides allow\n    layout: undefined,\n    replaceState: undefined,\n    route: undefined,\n    template: 'notAuthorized'\n  },\n  except: ['enroll', 'forgotPassword', 'home', 'login', 'reset', 'verify'],\n  noAuth: {\n    dashboard: 'dashboard',\n    home: 'home',\n    replaceState: undefined\n  },\n  only: ['enroll', 'login']\n}", 
            "title": "useraccounts"
        }, 
        {
            "location": "/useraccounts/#useraccounts", 
            "text": "https://github.com/meteor-useraccounts/core/blob/master/Guide.md  https://atmospherejs.com/useraccounts/core  https://github.com/meteor-useraccounts/core/  https://useraccounts-semantic-ui.meteor.com/   https://github.com/meteor-useraccounts/semantic-ui    D\u00e9mo: http://useraccounts.meteor.com/   Boilerplate pour chaque besoin: https://github.com/meteor-useraccounts/boilerplates", 
            "title": "useraccounts"
        }, 
        {
            "location": "/useraccounts/#todo", 
            "text": "D\u00e9finition d'un sch\u00e9ma pour la collection Meteor.users  Rendre obligatoire l'auth sur les routes /admin/* par exemple  Usage de la collection meteor_accounts_loginServiceConfiguration", 
            "title": "TODO"
        }, 
        {
            "location": "/useraccounts/#introduction", 
            "text": "useraccounts:core fournit toutes les fonctions de base mais aucun template.  il faut utiliser une des extensions comme useraccounts:semantic-ui pour obtenir des templates.  Exemple avec le bouton de connection:  {{  atNavButton}}   Le code correspondant se trouve dans:  https://github.com/meteor-useraccounts/semantic-ui/blob/master/lib/at_nav_button.html  https://github.com/meteor-useraccounts/semantic-ui/blob/master/lib/at_nav_button.js", 
            "title": "Introduction"
        }, 
        {
            "location": "/useraccounts/#relation-avec-les-packages-standard-meteor", 
            "text": "https://www.meteor.com/accounts  A priori, appartient \u00e0 accounts-ui-unstyled - https://github.com/meteor/meteor/tree/devel/packages/accounts-ui-unstyled\npasswordSignupFields: 'EMAIL_ONLY'  Accounts.validateLoginAttempt\nAccounts.onLoginFailure\nAccounts.onLogin\nMeteor.logoutOtherClients\n//locked-account or unauthorized-ip.\nMeteor.user()\nMeteor.loggingIn()  accounts-ui\n    Accounts.loginWithPassword, Accounts.loginWithFacebook, Accounts.createUser and Accounts.forgotPassword", 
            "title": "Relation avec les packages standard Meteor"
        }, 
        {
            "location": "/useraccounts/#exemple-dinstallation-authentification-par-mot-de-passe-templates-semantic-ui", 
            "text": "Ne pas installer accounts-ui ?  Le package installe d\u00e9j\u00e0 useraccounts:core accounts-base  Il ne faut pas installer directement le package useraccounts:core mais son impl\u00e9mentation selon le framework utilis\u00e9  Installer les packages providers comme accounts-password, accounts-github, ... selon les besoins   $ meteor add accounts-password\n$ meteor add semantic:ui-css\n$ meteor add useraccounts:semantic-ui", 
            "title": "Exemple d'Installation - Authentification par mot de passe - Templates Semantic-ui"
        }, 
        {
            "location": "/useraccounts/#plugin-ensuresignedin", 
            "text": "Rend obligatoire l'authentification pour toutes les routes   \nRouter.plugin('ensureSignedIn');    Rend obligatoire l'authentification pour les routes plac\u00e9s dans only[]    Voir diff\u00e9rence avec AccountsTemplates.configureRoute('ensureSignedIn') ?    \nRouter.plugin('ensureSignedIn', {\n  only: ['private']\n});   Rend obligatoire l'authentification pour toutes les routes sauf celles plac\u00e9s dans except[]   \nRouter.plugin('ensureSignedIn', {\n    except: ['home', 'atSignIn', 'atSignUp', 'atForgotPassword']\n});   Personnalisation du template et layout   \nAccountsTemplates.configureRoute('ensureSignedIn', {\n    template: 'myLogin',\n    layoutTemplate: 'myLayout',\n});", 
            "title": "Plugin ensureSignedIn"
        }, 
        {
            "location": "/useraccounts/#api", 
            "text": "Package inclus avec Meteor: Account, AccountsServer  Cot\u00e9 client, Accounts = new AccountsClient();  Cot\u00e9 server, Accounts = new AccountsServer(Meteor.server);  Meteor.users est remplac\u00e9 par Accounts.users", 
            "title": "Api"
        }, 
        {
            "location": "/useraccounts/#template-atform", 
            "text": "Par exemple pour customiser le template d'authentification, placez dans un template   {{  atForm state='signUp'}}\n\nOU\n\n{{  atForm}} car le state par d\u00e9faut est signUp", 
            "title": "Template atForm"
        }, 
        {
            "location": "/useraccounts/#states", 
            "text": "changePwd               Formulaire de changement de mot de passe\n\nenrollAccount           Formulaire d'inscription ???\n\nforgotPwd               Formulaire pour saisir une email \u00e0 laquelle sera envoy\u00e9 le lien de r\u00e9cup\u00e9ration de mot de passe\n\nhide                    Aucun\n\nresendVerificationEmail Envoi d'un nouveau mail de v\u00e9rification\n\nresetPwd                R\u00e9initialisation du mot de passe\n\nsignIn                  Formulaire d'authentification\n\nsignUp                  ?\n\nverifyEmail             R\u00e9sultat apr\u00e8s avoir cliqu\u00e9 sur le lien de r\u00e9cup\u00e9ration de mot de passe re\u00e7u par mail", 
            "title": "States"
        }, 
        {
            "location": "/useraccounts/#bouton-atnavbutton", 
            "text": "", 
            "title": "Bouton atNavButton"
        }, 
        {
            "location": "/useraccounts/#configuration", 
            "text": "https://github.com/meteor-useraccounts/core/blob/master/Guide.md    Placez la configuration dans lib/config/at_config.js    Routage  Il n'y a aucune route par d\u00e9faut.  La d\u00e9finition des routes par AccountsTemplates.configureRoute() s'utilise comme les routes habituels d'Iron Router  Chaque route peut \u00eatre d\u00e9finit avec ses param\u00e8tres par d\u00e9faut ou personnalis\u00e9  \nAccountsTemplates.configureRoute('signIn');\n\nAccountsTemplates.configureRoute('signIn', {\n    name: 'signin',\n    path: '/login',\n    template: 'myLogin',\n    layoutTemplate: 'myLayout',\n    redirect: '/user-profile',\n});\n\nAccountsTemplates.configureRoute('signIn', {\n    // Redirige vers /user/ae8WQQk6DrtDzA2AZ apr\u00e8s une authentification r\u00e9ussie\n    redirect: function(){\n        var user = Meteor.user();\n        if (user)\n          Router.go('/user/' + user._id);\n    }\n});  Exemple de configuration compl\u00e8te  \n// lib/config/at_config.js\nAccountsTemplates.configure({\n    // Behaviour\n    confirmPassword: true,                  // (default: true) - Demande la confirmation du mot de passe (register)\n    defaultState:  signIn ,                 // (default: signIn) - State par d\u00e9faut\n    enablePasswordChange: true,             // (default: false) - Active la fonction de changement de mot de passe\n    enforceEmailVerification: false,        // (default: false) - experimental - A utiliser seulement avec le service accounts-password\n\n    forbidClientAccountCreation: false,     // (default: false) - Si true, d\u00e9sactive l'enregistrement\n                                            // Remplace Accounts.config({forbidClientAccountCreation : true});\n\n    overrideLoginErrors: true,              // (default: true) - Si true, affiche erreur g\u00e9n\u00e9rique de connection sans pr\u00e9ciser si mauvais login ou pass\n    sendVerificationEmail: false,           // (default: false) - Si true, envoi un lien de confirmation par mail pour chaque nouvel utilisateur\n    redirectTimeout: 2000,                  // (default: 2000) - Timeout de redirection apr\u00e8s: enrollAccount, forgotPwd, resetPwd, ou verifyEmail\n    lowercaseUsername: false,               // (default: false) - A REVOIR\n    socialLoginStyle: 'popup',              // (default: popup) - Voir LoginStyle - choix (redirect, popup)\n                                            // Si popup, ouvre la page d'authentification du service dans un modal\n\n    // Appearance\n    defaultLayout: undefined,               // (default: undefined)\n    hideSignInLink: false,                  // (default: false) - Si true, n'affiche jamais le lien de connection\n    hideSignUpLink: false,                  // (default: false) - Si true, n'affiche jamais le lien de d\u00e9connection\n    showAddRemoveServices: false,           // (default: false) - A revoir - en rapport avec synchro comptes sociaux - https://atmospherejs.com/splendido/accounts-meld\n    showForgotPasswordLink: false,          // (default: false) - Si true, affiche lien de r\u00e9cup\u00e9ration de mot de passe\n    showLabels: true,                       // (default: true) - si true, affiche les label au dessous des champs dans les formulaires\n    showPlaceholders: true,                 // (default: false) - si true, Affiche les placeholders dans les champs\n    showResendVerificationEmailLink: false, // (default: false) - Si true, affiche le lien pour envoyer \u00e0 nouveau le mail de v\u00e9rification\n\n    // Client-side Validation\n    continuousValidation: false,            // (default: false) - Active la validation cot\u00e9 client pendant la saisie\n    negativeFeedback: false,                // (default: false) - continuousValidation\n    negativeValidation: true,               // (default: false) - continuousValidation\n    positiveValidation: true,               // (default: false) - continuousValidation\n    positiveFeedback: true,                 // (default: false) - continuousValidation\n    showValidating: true,                   // (default: false) -\n\n    // Links\n    homeRoutePath: '/',                     // (default: /) - Pas Home pour les redirections\n    //privacyUrl: 'privacy',                // (default: undefined) - Affiche lien ?\n    //termsUrl: 'terms-of-use',             // (default: undefined) - Affiche lien ?\n\n    // Hooks\n    //onLogoutHook: myLogoutFunc,           // Hook de routage appell\u00e9 par AccountsTemplates.logout\n    //onSubmitHook: mySubmitFunc,           // Hook appell\u00e9 quand submit d'un des formulaire est ok - func(error, state)\n    //preSignUpHook: myPreSubmitFunc,       // Comme ci-dessous mais appell\u00e9 avant submit - func(password, info)\n\n    // Texts customization\n    /*\n    texts: {\n      button: {\n          signUp:  Register Now! \n      },\n      socialSignUp:  Register ,\n      socialIcons: {\n           meteor-developer :  fa fa-rocket \n      },\n      title: {\n          forgotPwd:  Recover Your Password \n      },\n    },\n    */\n});  Configuration ReCapcha  recaptcha  Les cl\u00e9s peuvent se configurer ici ou dans Meteor.Settings ou dans settings.json  AccountsTemplates.configure({\n    reCaptcha: {\n        siteKey: YOUR SITE KEY,\n        secretKey: YOUR SECRET KEY,\n        theme:  light , // light ou dark\n        data_type:  image  // image ou audio\n    },\n    showReCaptcha: true\n});  Exemple de SubmitHook  \nvar mySubmitFunc = function(error, state){\n  if (!error) {\n    if (state ===  signIn ) {\n      // Successfully logged in\n      // ...\n    }\n    if (state ===  signUp ) {\n      // Successfully registered\n      // ...\n    }\n  }\n};\n\nAccountsTemplates.configure({\n    onSubmitHook: mySubmitFunc\n});", 
            "title": "Configuration"
        }, 
        {
            "location": "/useraccounts/#personnalisation-de-la-structure-des-champs-de-formulaire", 
            "text": "Exemple de personnalisation des champs avec  aldeed:template-extension  pour le package  useraccounts:semantic-ui", 
            "title": "Personnalisation de la structure des champs de formulaire"
        }, 
        {
            "location": "/useraccounts/#champs-speciaux-quil-faut-supprimer-avant-de-redefinir", 
            "text": "current_password\nemail\npassword\npassword_again\nusername\nusername_and_email  Exemple avec le champs password  AccountsTemplates.removeField('password');\nAccountsTemplates.addField({\n    _id: 'password',\n    type: 'password',\n    required: true,\n    minLength: 6,\n    re: /(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}/,\n    errStr: 'At least 1 digit, 1 lower-case and 1 upper-case',\n});  Particularit\u00e9 de la customisation des champs username ou email  Il faut imp\u00e9rativement supprimer le champs password avant de r\u00e9d\u00e9finir username ou password  Pour ne pas avoir \u00e0 d\u00e9finir \u00e0 nouveau password, proc\u00e9dez comme ci-dessous:  var pwd = AccountsTemplates.removeField('password');\nAccountsTemplates.removeField('email');\nAccountsTemplates.addFields([\n  {\n      _id:  username ,\n      type:  text ,\n      displayName:  username ,\n      required: true,\n      minLength: 5,\n  },\n  {\n      _id: 'email',\n      type: 'email',\n      required: true,\n      displayName:  email ,\n      re: /.+@(.+){2,}\\.(.+){2,}/,\n      errStr: 'Invalid email',\n  },\n  pwd\n]);", 
            "title": "Champs sp\u00e9ciaux qu'il faut supprimer avant de red\u00e9finir"
        }, 
        {
            "location": "/useraccounts/#changement-de-la-politique-de-mot-de-passe", 
            "text": "**Demande un mot de passe d'au minimum 6 caract\u00e8res  AccountsTemplates.addField({\n    _id: 'password',\n    type: 'password',\n    placeholder: {\n        signUp:  At least six characters \n    },\n    required: true,\n    minLength: 6,\n    re: /(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}/,\n    errStr: 'At least 1 digit, 1 lowercase and 1 uppercase',\n});", 
            "title": "Changement de la politique de mot de passe"
        }, 
        {
            "location": "/useraccounts/#ajoute-un-champs-telephone", 
            "text": "Champs phone avec validation cot\u00e9 serveur (fonction isValidPhone \u00e0 d\u00e9finir):  AccountsTemplates.addField({\n    _id: 'phone',\n    type: 'tel',\n    displayName:  Phone ,\n    required: true,\n    func: function (number) {\n        if (Meteor.isServer){\n          if (isValidPhone(number))\n              return false; // meaning no error!\n          return true; // Validation error!\n        }\n    },\n    errStr: 'Invalid Phone number!',\n});", 
            "title": "Ajoute un champs t\u00e9l\u00e9phone"
        }, 
        {
            "location": "/useraccounts/#verifie-si-le-username-existe-deja", 
            "text": "// server/methods.js\nif (Meteor.isServer){\n    Meteor.methods({\n         userExists : function(username){\n            return !!Meteor.users.findOne({username: username});\n        },\n    });\n}\n\n// lib/config/at_config.js\nAccountsTemplates.addField({\n    _id: 'username',\n    type: 'text',\n    required: true,\n    func: function(value){\n        if (Meteor.isClient) {\n            console.log( Validating username... );\n            var self = this;\n            Meteor.call( userExists , value, function(err, userExists){\n                if (!userExists)\n                    self.setSuccess();\n                else\n                    self.setError(userExists);\n                self.setValidating(false);\n            });\n            return;\n        }\n        // Server\n        return Meteor.call( userExists , value);\n    },\n});  VOIR AUSSI:  //Dans la d\u00e9finition d'un sch\u00e9ma\nusername: {\n  type: String,\n  regEx: /^[a-z0-9A-Z_]{3,15}$/,\n  unique: true,\n  custom: function () {\n    if (Meteor.isClient   this.isSet) {\n      Meteor.call( accountsIsUsernameAvailable , this.value, function (error, result) {\n        if (!result) {\n          Meteor.users.simpleSchema().namedContext( createUserForm ).addInvalidKeys([{name:  username , type:  notUnique }]);\n        }\n      });\n    }\n  }\n}", 
            "title": "V\u00e9rifie si le username existe d\u00e9j\u00e0"
        }, 
        {
            "location": "/useraccounts/#ajout-dun-champs-genre", 
            "text": "AccountsTemplates.addField({\n    _id:  gender ,\n    type:  select ,\n    displayName:  Gender ,\n    select: [\n        {\n            text:  Male ,\n            value:  male ,\n        },\n        {\n            text:  Female ,\n            value:  female ,\n        },\n    ],\n});", 
            "title": "Ajout d'un champs Genre"
        }, 
        {
            "location": "/useraccounts/#champs-de-souscription-a-la-mailing-list", 
            "text": "AccountsTemplates.addField({\n    _id:  mailing_list ,\n    type:  checkbox ,\n    displayName:  Subscribe me to mailing List ,\n});", 
            "title": "Champs de souscription \u00e0 la mailing list"
        }, 
        {
            "location": "/useraccounts/#champs-cache-contenant-un-code-de-validation", 
            "text": "// http://my.splendido.site/sign-up?email=giorgio@example.com reg_code=123\nAccountsTemplates.addField({\n    _id: 'reg_code',\n    type: 'hidden'\n});", 
            "title": "Champs cach\u00e9 contenant un code de validation"
        }, 
        {
            "location": "/useraccounts/#internationalisation-i18n", 
            "text": "accounts-t9n  $ meteor add softwarerero:accounts-t9n  // /lib/config/at_config.js\nT9n.setLanguage( fr );", 
            "title": "Internationalisation - i18n"
        }, 
        {
            "location": "/useraccounts/#personnalisation-des-formulaires-ui", 
            "text": "Requis:  template-extension  $ meteor add aldeed:template-extension  template name= appAtInput \n  {{#if options.dividerBefore}} hr {{/if}}\n\n  {{  Template.dynamic template=templateName}} /template   AccountsTemplates.addField({\n  _id:  address ,\n  type:  text ,\n\n  // Options qui seront pass\u00e9s au formulaire\n  options: {\n    dividerBefore: true\n  }\n});\n\nTemplate.appAtInput.replaces( atInput );", 
            "title": "Personnalisation des formulaires UI"
        }, 
        {
            "location": "/useraccounts/#solution-complete-avec-semantic-ui-hors-authentification-sociale", 
            "text": "", 
            "title": "Solution compl\u00e8te avec semantic-ui - hors authentification sociale"
        }, 
        {
            "location": "/useraccounts/#installation", 
            "text": "$ meteor add accounts-ui-unstyled\n$ meteor add accounts-password\n$ meteor add semantic:ui-css\n$ meteor add softwarerero:accounts-t9n\n$ meteor add useraccounts:semantic-ui\n\n# OU\n$ meteor add accounts-ui-unstyled accounts-password semantic:ui-css softwarerero:accounts-t9n useraccounts:semantic-ui\n\n# OU pour iron cli\n$ iron add accounts-ui-unstyled accounts-password semantic:ui-css softwarerero:accounts-t9n useraccounts:semantic-ui  D\u00e9pendances:  less\nreactive-var\nhttp\nunderscore\naccounts-base\nreactive-dict\ncheck\nmeteor\ntemplating\nblaze\nuseraccounts:core\niron:router\nsoftwarerero:accounts-t9n", 
            "title": "Installation"
        }, 
        {
            "location": "/useraccounts/#configuration_1", 
            "text": "", 
            "title": "Configuration"
        }, 
        {
            "location": "/useraccounts/#tips-solution-dedie-mobile-avec-ratchet", 
            "text": "https://atmospherejs.com/useraccounts/ratchet", 
            "title": "Tips - Solution d\u00e9di\u00e9 mobile avec Ratchet"
        }, 
        {
            "location": "/useraccounts/#structure-dun-enregistrement-dun-compte-utilisateur", 
            "text": "La structure peut varier mais il y a des \u00e9l\u00e9ments important \u00e0 noter:  emails est une liste d'objet  services est une collections avec comme cl\u00e9, le nom du service     {\n  _id:  bbca5d6a-2156-41c4-89da-0329e8c99a4f ,  // Meteor.userId()\n  username:  cool_kid_13 , // unique name\n  emails: [\n    { address:  cool@example.com , verified: true },\n    { address:  another@different.com , verified: false }\n  ],\n  createdAt: Wed Aug 21 2013 15:16:52 GMT-0700 (PDT),\n  profile: {\n    name:  Joe Schmoe \n  },\n  services: {\n    facebook: {\n      id:  709050 , // facebook id\n      accessToken:  AAACCgdX7G2...AbV9AZDZD \n    },\n    resume: {\n      loginTokens: [\n        { token:  97e8c205-c7e4-47c9-9bea-8e2ccc0694cd ,\n          when: 1349761684048 }\n      ]\n    }\n  }\n}", 
            "title": "Structure d'un enregistrement d'un compte utilisateur"
        }, 
        {
            "location": "/useraccounts/#tips-publish-liste-des-utilisateurs", 
            "text": "Source  meteor-cookbook   // server/publish.js\nMeteor.publish( usersDirectory , function () {\n  try{\n    return Meteor.users.find({}, {fields: {\n      '_id': true,\n      'username': true,\n      'profile': true,\n      'profile.name': true,\n      'profile.avatar': true,\n      'profile.username': true,\n\n      'emails': true,\n      'emails[0].address': true,\n      'emails.address': true\n    }});\n  }catch(error){\n    console.log(error);\n  }\n});", 
            "title": "Tips - Publish - Liste des utilisateurs"
        }, 
        {
            "location": "/useraccounts/#tips-autres-solutions", 
            "text": "https://atmospherejs.com/juliancwirko/s-id  Solution Manuelle  accounts-entry", 
            "title": "Tips - Autres solutions"
        }, 
        {
            "location": "/useraccounts/#tips-profile-utilisateur-et-preferences", 
            "text": "", 
            "title": "Tips - Profile Utilisateur et pr\u00e9f\u00e9rences"
        }, 
        {
            "location": "/useraccounts/#tips-integration-de-iron-router-auth", 
            "text": "https://github.com/zimme/meteor-iron-router-auth   $ meteor add zimme:iron-router-auth  {\n  authenticate: {\n    home: 'home',\n    layout: undefined,\n    logout: 'logout',\n    replaceState: undefined,\n    route: 'login',\n    template: undefined\n  },\n  authorize: {\n    allow: function() {return true},\n    deny: function() {return false}, // deny overrides allow\n    layout: undefined,\n    replaceState: undefined,\n    route: undefined,\n    template: 'notAuthorized'\n  },\n  except: ['enroll', 'forgotPassword', 'home', 'login', 'reset', 'verify'],\n  noAuth: {\n    dashboard: 'dashboard',\n    home: 'home',\n    replaceState: undefined\n  },\n  only: ['enroll', 'login']\n}", 
            "title": "Tips - Int\u00e9gration de iron-router-auth"
        }, 
        {
            "location": "/collection-timestampable/", 
            "text": "collection-timestampable\n\n\nhttps://atmospherejs.com/zimme/collection-timestampable\n\n\nPeut ajouter les champs createdAt, createdBy, updatedAt, updatedBy \u00e0 chaque document\n\n\nPackages utilis\u00e9s\n\n\n'matb33:collection-hooks@0.7.6'\n'zimme:collection-behaviours@1.0.3'\n'aldeed:autoform@4.0.0 || 5.0.0'\n'aldeed:collection2@2.0.0'\n'aldeed:simple-schema@1.0.3'\n\n\n\nInstallation\n\n\n$ meteor add zimme:collection-timestampable\n\n\nUsage\n\n\n    Posts = new Mongo.Collection('posts');\n\n    // Default options\n    Posts.attachBehaviour('timestampable');\n\n    // Custom options\n    Posts.attachBehaviour('timestampable', {\n      createdAt: 'insertedAt' // nom du champs dans le document\n      createdBy: 'insertedBy'\n      updatedAt: 'modifiedAt'\n      updatedBy: false\n    });", 
            "title": "collection-timestampable"
        }, 
        {
            "location": "/collection-timestampable/#collection-timestampable", 
            "text": "https://atmospherejs.com/zimme/collection-timestampable  Peut ajouter les champs createdAt, createdBy, updatedAt, updatedBy \u00e0 chaque document", 
            "title": "collection-timestampable"
        }, 
        {
            "location": "/collection-timestampable/#packages-utilises", 
            "text": "'matb33:collection-hooks@0.7.6'\n'zimme:collection-behaviours@1.0.3'\n'aldeed:autoform@4.0.0 || 5.0.0'\n'aldeed:collection2@2.0.0'\n'aldeed:simple-schema@1.0.3'", 
            "title": "Packages utilis\u00e9s"
        }, 
        {
            "location": "/collection-timestampable/#installation", 
            "text": "$ meteor add zimme:collection-timestampable", 
            "title": "Installation"
        }, 
        {
            "location": "/collection-timestampable/#usage", 
            "text": "Posts = new Mongo.Collection('posts');\n\n    // Default options\n    Posts.attachBehaviour('timestampable');\n\n    // Custom options\n    Posts.attachBehaviour('timestampable', {\n      createdAt: 'insertedAt' // nom du champs dans le document\n      createdBy: 'insertedBy'\n      updatedAt: 'modifiedAt'\n      updatedBy: false\n    });", 
            "title": "Usage"
        }, 
        {
            "location": "/collection-softremovable/", 
            "text": "collection-softremovable\n\n\nAjoute dynamiquement \u00e0 une collection des champs et fonctions pour placer des documents supprim\u00e9s \u00e0 la corbeille au lieu d'une suppression d\u00e9finitive.\n\n\n\n\nAtmosphere\n\n\nSources\n\n\n\n\nInstallation\n\n\nmeteor add zimme:collection-softremovable\n\n\n\nConfiguration d'une collection\n\n\nPosts = new Mongo.Collection('posts');\n\n//Attach behaviour with the default options\nPosts.attachBehaviour('softRemovable');\n\n//Attach behaviour with custom options\nPosts.attachBehaviour('softRemovable', {\n  removed: 'deleted',\n  removedBy: false,\n  restoredAt: 'undeletedAt',\n  restoredBy: false\n});\n\n\n\nRemove/Restore\n\n\n// Soft remove document by _id\nPosts.softRemove({_id: 'BFpDzGuWG8extPwrE'});\n\n// Restore document by _id\nPosts.restore('BFpDzGuWG8extPwrE');\n\n// Actually remove document from collection\nPosts.remove({_id: 'BFpDzGuWG8extPwrE'});\n\n\n\nRecherches\n\n\n// Find all posts except soft removed posts\nPosts.find({});\n\n// Find only posts that have been soft removed\nPosts.find({removed: true});\n\n// Find all posts including removed\nPosts.find({}, {removed: true});", 
            "title": "collection-softremovable"
        }, 
        {
            "location": "/collection-softremovable/#collection-softremovable", 
            "text": "Ajoute dynamiquement \u00e0 une collection des champs et fonctions pour placer des documents supprim\u00e9s \u00e0 la corbeille au lieu d'une suppression d\u00e9finitive.   Atmosphere  Sources", 
            "title": "collection-softremovable"
        }, 
        {
            "location": "/collection-softremovable/#installation", 
            "text": "meteor add zimme:collection-softremovable", 
            "title": "Installation"
        }, 
        {
            "location": "/collection-softremovable/#configuration-dune-collection", 
            "text": "Posts = new Mongo.Collection('posts');\n\n//Attach behaviour with the default options\nPosts.attachBehaviour('softRemovable');\n\n//Attach behaviour with custom options\nPosts.attachBehaviour('softRemovable', {\n  removed: 'deleted',\n  removedBy: false,\n  restoredAt: 'undeletedAt',\n  restoredBy: false\n});", 
            "title": "Configuration d'une collection"
        }, 
        {
            "location": "/collection-softremovable/#removerestore", 
            "text": "// Soft remove document by _id\nPosts.softRemove({_id: 'BFpDzGuWG8extPwrE'});\n\n// Restore document by _id\nPosts.restore('BFpDzGuWG8extPwrE');\n\n// Actually remove document from collection\nPosts.remove({_id: 'BFpDzGuWG8extPwrE'});", 
            "title": "Remove/Restore"
        }, 
        {
            "location": "/collection-softremovable/#recherches", 
            "text": "// Find all posts except soft removed posts\nPosts.find({});\n\n// Find only posts that have been soft removed\nPosts.find({removed: true});\n\n// Find all posts including removed\nPosts.find({}, {removed: true});", 
            "title": "Recherches"
        }, 
        {
            "location": "/meteor-collection-helpers/", 
            "text": "collection-helpers\n\n\nAjoute des fonctions aux collections\n\n\nhttps://github.com/dburles/meteor-collection-helpers\n\n\nInstallation\n\n\n$ meteor add dburles:collection-helpers\n\n\n\n\nUtilisation\n\n\nDans Javascript:\n\n\nAppInstances.helpers({\n  hosts: function () {\n    var dockerHosts = this.dockerHosts || [];\n    return Hosts.find({_id: {$in: dockerHosts}}).fetch();  // fetch ??\n  },\n});\n\n\n\n\nDans les templates:\n\n\nth\nHosts\n/th\n\n\ntd\n\n  {{#each hosts}}\n  \ndiv\n\n    \na href=\nhttp://{{this.publicHost}}\n target=\n_blank\n{{this.publicHost}}\n/a\n\n  \n/div\n\n  {{/each}}\n\n/td", 
            "title": "meteor-collection-helpers"
        }, 
        {
            "location": "/meteor-collection-helpers/#collection-helpers", 
            "text": "Ajoute des fonctions aux collections  https://github.com/dburles/meteor-collection-helpers", 
            "title": "collection-helpers"
        }, 
        {
            "location": "/meteor-collection-helpers/#installation", 
            "text": "$ meteor add dburles:collection-helpers", 
            "title": "Installation"
        }, 
        {
            "location": "/meteor-collection-helpers/#utilisation", 
            "text": "Dans Javascript:  AppInstances.helpers({\n  hosts: function () {\n    var dockerHosts = this.dockerHosts || [];\n    return Hosts.find({_id: {$in: dockerHosts}}).fetch();  // fetch ??\n  },\n});  Dans les templates:  th Hosts /th  td \n  {{#each hosts}}\n   div \n     a href= http://{{this.publicHost}}  target= _blank {{this.publicHost}} /a \n   /div \n  {{/each}} /td", 
            "title": "Utilisation"
        }, 
        {
            "location": "/meteor-roles/", 
            "text": "Meteor Roles\n\n\nhttps://github.com/alanning/meteor-roles\n\n\nInstallation\n\n\n\n$ meteor add accounts-password\n$ meteor add alanning:roles\n\n\n\n\n\nLa collection n'est pas publi\u00e9 par d\u00e9faut, il faut le faire avec:\n\n\n\n// server/publish.js\nMeteor.publish(null, function (){\n  return Meteor.roles.find({})\n})\n\n\n\n\n\nAssigner des r\u00f4les au d\u00e9marrage du server\n\n\nhttps://github.com/alanning/meteor-roles/blob/master/examples/rolesWithAccountsUI/server/startup.js\nhttps://github.com/alanning/meteor-roles/blob/master/examples/iron-router/server/server.js\n\n\nCr\u00e9ation de roles au d\u00e9marrage\n\n\nAssigner automatiquement un role par default\n\n\n# Cot\u00e9 startup - server:\n  Accounts.onCreateUser(function (options, user) {\n    Roles.setRolesOnUserObj(user, ['admin','view-secrets']);\n    return user\n  });\n\n\nTips - Limiter la cr\u00e9ation d'utilisateurs\n\n\nAutoriser seulement la cr\u00e9ation pour les roles admin ou manage-users:\n\n\n\n//common\nAccounts.validateNewUser(function (user) {\n    var loggedInUser = Meteor.user();\n\n    if (Roles.userIsInRole(loggedInUser, ['admin','manage-users'])) {\n      return true;\n    }\n\n    throw new Meteor.Error(403, \nNot authorized to create new users\n);\n});\n\n\n\n\n\nTips - Exemple de filtrage des donn\u00e9es cot\u00e9 server - Par Groupe utilisateur\n\n\n\n// server/publish.js\nMeteor.publish('secrets', function (group) {\n  if (Roles.userIsInRole(this.userId, ['view-secrets','admin'], group)) {\n\n    return Meteor.secrets.find({group: group});\n\n  } else {\n\n    // user not authorized. do not publish secrets\n    this.stop();\n    return;\n\n  }\n});\n\n\n\n\n\nUtilisation dans les templates\n\n\n\n\ntemplate name=\nheader\n\n  {{#if isInRole 'admin'}}\n    {{\n admin_nav}}\n  {{/if}}\n  {{#if isInRole 'admin,editor'}}\n    {{\n editor_stuff}}\n  {{/if}}\n\n/template\n\n\n// Limiter au group1 avec le role admin ou editor\n\ntemplate name=\nheader\n\n  {{#if isInRole 'admin,editor' 'group1'}}\n    {{\n editor_stuff}}\n  {{/if}}\n\n/template\n\n\n\n\n\n\nCollections\n\n\n\n\nMeteor.roles\n\n\nModifie Meteor.users\n\n\n\n\nAjout de role\n\n\n\n\nusers Array | String\n\n\nroles Array | String\n\n\ngroup String optional (default Roles.GLOBAL_GROUP)\n\n\n\n\nRoles.addUsersToRoles(userId, 'admin')\n\n\nRoles.addUsersToRoles(userId, ['view-secrets'], 'example.com')\n\n\nRoles.addUsersToRoles([user1, user2], ['user','editor'])\n\n\nRoles.addUsersToRoles([user1, user2], ['glorious-admin', 'perform-action'], 'example.org')\n\n\nRoles.addUsersToRoles(userId, 'admin', Roles.GLOBAL_GROUP)", 
            "title": "meteor-roles"
        }, 
        {
            "location": "/meteor-roles/#meteor-roles", 
            "text": "https://github.com/alanning/meteor-roles", 
            "title": "Meteor Roles"
        }, 
        {
            "location": "/meteor-roles/#installation", 
            "text": "$ meteor add accounts-password\n$ meteor add alanning:roles  La collection n'est pas publi\u00e9 par d\u00e9faut, il faut le faire avec:  \n// server/publish.js\nMeteor.publish(null, function (){\n  return Meteor.roles.find({})\n})", 
            "title": "Installation"
        }, 
        {
            "location": "/meteor-roles/#assigner-des-roles-au-demarrage-du-server", 
            "text": "https://github.com/alanning/meteor-roles/blob/master/examples/rolesWithAccountsUI/server/startup.js\nhttps://github.com/alanning/meteor-roles/blob/master/examples/iron-router/server/server.js", 
            "title": "Assigner des r\u00f4les au d\u00e9marrage du server"
        }, 
        {
            "location": "/meteor-roles/#creation-de-roles-au-demarrage", 
            "text": "", 
            "title": "Cr\u00e9ation de roles au d\u00e9marrage"
        }, 
        {
            "location": "/meteor-roles/#assigner-automatiquement-un-role-par-default", 
            "text": "# Cot\u00e9 startup - server:\n  Accounts.onCreateUser(function (options, user) {\n    Roles.setRolesOnUserObj(user, ['admin','view-secrets']);\n    return user\n  });", 
            "title": "Assigner automatiquement un role par default"
        }, 
        {
            "location": "/meteor-roles/#tips-limiter-la-creation-dutilisateurs", 
            "text": "Autoriser seulement la cr\u00e9ation pour les roles admin ou manage-users:  \n//common\nAccounts.validateNewUser(function (user) {\n    var loggedInUser = Meteor.user();\n\n    if (Roles.userIsInRole(loggedInUser, ['admin','manage-users'])) {\n      return true;\n    }\n\n    throw new Meteor.Error(403,  Not authorized to create new users );\n});", 
            "title": "Tips - Limiter la cr\u00e9ation d'utilisateurs"
        }, 
        {
            "location": "/meteor-roles/#tips-exemple-de-filtrage-des-donnees-cote-server-par-groupe-utilisateur", 
            "text": "// server/publish.js\nMeteor.publish('secrets', function (group) {\n  if (Roles.userIsInRole(this.userId, ['view-secrets','admin'], group)) {\n\n    return Meteor.secrets.find({group: group});\n\n  } else {\n\n    // user not authorized. do not publish secrets\n    this.stop();\n    return;\n\n  }\n});", 
            "title": "Tips - Exemple de filtrage des donn\u00e9es cot\u00e9 server - Par Groupe utilisateur"
        }, 
        {
            "location": "/meteor-roles/#utilisation-dans-les-templates", 
            "text": "template name= header \n  {{#if isInRole 'admin'}}\n    {{  admin_nav}}\n  {{/if}}\n  {{#if isInRole 'admin,editor'}}\n    {{  editor_stuff}}\n  {{/if}} /template \n\n// Limiter au group1 avec le role admin ou editor template name= header \n  {{#if isInRole 'admin,editor' 'group1'}}\n    {{  editor_stuff}}\n  {{/if}} /template", 
            "title": "Utilisation dans les templates"
        }, 
        {
            "location": "/meteor-roles/#collections", 
            "text": "Meteor.roles  Modifie Meteor.users", 
            "title": "Collections"
        }, 
        {
            "location": "/meteor-roles/#ajout-de-role", 
            "text": "users Array | String  roles Array | String  group String optional (default Roles.GLOBAL_GROUP)   Roles.addUsersToRoles(userId, 'admin')  Roles.addUsersToRoles(userId, ['view-secrets'], 'example.com')  Roles.addUsersToRoles([user1, user2], ['user','editor'])  Roles.addUsersToRoles([user1, user2], ['glorious-admin', 'perform-action'], 'example.org')  Roles.addUsersToRoles(userId, 'admin', Roles.GLOBAL_GROUP)", 
            "title": "Ajout de role"
        }, 
        {
            "location": "/rest-api/", 
            "text": "Rest APIs\n\n\nrestivus\n\n\nAPI Rest\n\n\nhttps://atmospherejs.com/nimble/restivus\n\n\nInstallation\n\n\nmeteor add nimble:restivus\n\n\n\nConfiguration rapide\n\n\n\nItems = new Mongo.Collection('items');\n\nif (Meteor.isServer) {\n\n  Restivus.configure({\n    useAuth: true,\n    prettyJson: true\n  });\n\n  // Generates: GET, POST, DELETE on /api/items and GET, PUT, DELETE on\n  // /api/items/:id for Items collection\n  Restivus.addCollection(Items);\n\n}\n\n\n\n\n\nCollection Meteor.users\n\n\nRestivus.addCollection(Meteor.users, {\n    excludedEndpoints: ['deleteAll', 'put'],\n    routeOptions: {\n      authRequired: true\n    },\n    endpoints: {\n      post: {\n        authRequired: false\n      },\n      delete: {\n        roleRequired: 'admin'\n      }\n    }\n});\n\n\n\nParticularit\u00e9s du POST de la collection Meteor.users\n\n\nSeuls les champs reconnus par Accounts.createUser() sont autoris\u00e9s dans le POST\n\n\nCes champs sont: email, username, password, et profile\n\n\nSolution: il faut surement personnalis\u00e9 avec l'utilisation d'un Accounts.setPassword(userId, newPassword, [options])\n\n\nPOST http://localhost:3000/api/users\n\n\n{\n    \"email\": \"jack@mail.com\",\n    \"password\": \"password\",\n    \"profile\": {\n      \"firstName\": \"Jack\",\n      \"lastName\": \"Rose\"\n    }\n  }\n\n\ncollectionapi\n\n\nhttps://github.com/xcv58/meteor-collectionapi\n\n\nhttps://github.com/xcv58/meteor-collectionapi-demo/blob/cf233f31d973191e6cd4510ed5e017ad695b33f8/server/restful.js#L36\n\n\nFournit un serveur d\u00e9di\u00e9 \u00e0 l'api, ind\u00e9pendant de l'application.\n\n\nFonctionnalit\u00e9s:\n\n* Authentification custom\n\n\nConfiguration rapide\n\n\nPlayers = new Meteor.Collection(\"players\");\n\n\nif (Meteor.isServer) {\n  Meteor.startup(function () {\n    collectionApi = new CollectionAPI({ authToken: '97f0ad9e24ca5e0408a269748d7fe0a0' });\n    collectionApi.addCollection(Players, 'players');\n    collectionApi.start();\n  });\n}\n\n\n$ curl -H \"X-Auth-Token: 97f0ad9e24ca5e0408a269748d7fe0a0\" http://localhost:3000/collectionapi/players", 
            "title": "API Rest"
        }, 
        {
            "location": "/rest-api/#rest-apis", 
            "text": "", 
            "title": "Rest APIs"
        }, 
        {
            "location": "/rest-api/#restivus", 
            "text": "API Rest  https://atmospherejs.com/nimble/restivus  Installation  meteor add nimble:restivus  Configuration rapide  \nItems = new Mongo.Collection('items');\n\nif (Meteor.isServer) {\n\n  Restivus.configure({\n    useAuth: true,\n    prettyJson: true\n  });\n\n  // Generates: GET, POST, DELETE on /api/items and GET, PUT, DELETE on\n  // /api/items/:id for Items collection\n  Restivus.addCollection(Items);\n\n}  Collection Meteor.users  Restivus.addCollection(Meteor.users, {\n    excludedEndpoints: ['deleteAll', 'put'],\n    routeOptions: {\n      authRequired: true\n    },\n    endpoints: {\n      post: {\n        authRequired: false\n      },\n      delete: {\n        roleRequired: 'admin'\n      }\n    }\n});  Particularit\u00e9s du POST de la collection Meteor.users  Seuls les champs reconnus par Accounts.createUser() sont autoris\u00e9s dans le POST  Ces champs sont: email, username, password, et profile  Solution: il faut surement personnalis\u00e9 avec l'utilisation d'un Accounts.setPassword(userId, newPassword, [options])  POST http://localhost:3000/api/users  {\n    \"email\": \"jack@mail.com\",\n    \"password\": \"password\",\n    \"profile\": {\n      \"firstName\": \"Jack\",\n      \"lastName\": \"Rose\"\n    }\n  }", 
            "title": "restivus"
        }, 
        {
            "location": "/rest-api/#collectionapi", 
            "text": "https://github.com/xcv58/meteor-collectionapi  https://github.com/xcv58/meteor-collectionapi-demo/blob/cf233f31d973191e6cd4510ed5e017ad695b33f8/server/restful.js#L36  Fournit un serveur d\u00e9di\u00e9 \u00e0 l'api, ind\u00e9pendant de l'application.  Fonctionnalit\u00e9s: \n* Authentification custom  Configuration rapide  Players = new Meteor.Collection(\"players\");  if (Meteor.isServer) {\n  Meteor.startup(function () {\n    collectionApi = new CollectionAPI({ authToken: '97f0ad9e24ca5e0408a269748d7fe0a0' });\n    collectionApi.addCollection(Players, 'players');\n    collectionApi.start();\n  });\n}\n\n\n$ curl -H \"X-Auth-Token: 97f0ad9e24ca5e0408a269748d7fe0a0\" http://localhost:3000/collectionapi/players", 
            "title": "collectionapi"
        }, 
        {
            "location": "/tap-i18n/", 
            "text": "tab:i18n\n\n\nInternationalisation de projets Meteor\n\n\nhttps://atmospherejs.com/tap/i18n\n\n\nTODO\n\n\n\n\nExtraction pour service crowdin\n\n\nVoir http://i18next.com/\n\n\n\n\nInstallation\n\n\nmeteor add tap:i18n\n\n\n\n\n    Meteor.startup(function() {\n      if (Meteor.isClient) {\n        return TAPi18n.setLanguage('en');\n      }\n    });\n\n\n\n\n\nUtilisation dans les templates\n\n\n    \ndiv class=\nbtn\n{{_ \nsign_up\n}}\n/div\n\n\n    # Avec param\u00e8tre dans la chaine \u00e0 traduire\n    \ntemplate name=\nmessages_today\n\n      \np\n{{_ \ninbox_status\n \nDaniel\n count=18}}\n/p\n\n    \n/template\n\n\n    # Exemple de fichier de lang - i18n/en.i18n.json\n    {\n      \ninbox_status\n: \nHey, %s! You have received one new message today.\n,\n      \ninbox_status_plural\n: \nHey, %s! You have received %s new messages today.\n\n    }\n\n\n\n\nUtilisation dans les scripts\n\n\n\n    Config = {\n      name: 'Title',\n      title: function() {\n        return TAPi18n.__('configTitle');\n      },\n      subtitle: function() {\n        return TAPi18n.__('configSubtitle');\n      },\n    }\n\n\n\n\n\nExtensions\n\n\ntap-i18n-ui\n\n\nhttps://github.com/TAPevents/tap-i18n-ui\n\n\n    meteor add tap:i18n-ui\n\n    {{\n i18n_dropdown}}             // Bootstrap\n    {{\n i18n_dropdown_semantic}}    // Semantic UI\n\n\n\n\ntap-i18n-db\n\n\nhttps://github.com/TAPevents/tap-i18n-db\n\n\nmeteor add tap:i18n-db\n\n\n\n\n    CountryLang = new TAPi18n.Collection(\ncountry_lang\n);\n\n    // Cr\u00e9ation du document et d'une ou plusieurs traductions\n    id = CountryLang.insertTranslations({country: \nfr\n, name: \nFran\u00e7ais\n}, {\n        en: {\n            name: \nFrench\n\n        }\n    });\n\n    # Mise \u00e0 jour d'un document existant\n    CountryLang.updateTranslations(id, {\n        de: {\n            name: \nFranz\u00f6sisch\u043b\u0430\n\n        }\n    });\n\n    # Publication et souscription\n    if (Meteor.isServer) {\n        TAPi18n.publish(\ncountrylang\n, function (query) {\n            return CountryLang.i18nFind(query);\n        });\n    }\n\n    if (Meteor.isClient) {\n        TAPi18n.subscribe(\ncountrylang\n, {});\n    }", 
            "title": "Internationalisation"
        }, 
        {
            "location": "/tap-i18n/#tabi18n", 
            "text": "Internationalisation de projets Meteor  https://atmospherejs.com/tap/i18n", 
            "title": "tab:i18n"
        }, 
        {
            "location": "/tap-i18n/#todo", 
            "text": "Extraction pour service crowdin  Voir http://i18next.com/", 
            "title": "TODO"
        }, 
        {
            "location": "/tap-i18n/#installation", 
            "text": "meteor add tap:i18n  \n    Meteor.startup(function() {\n      if (Meteor.isClient) {\n        return TAPi18n.setLanguage('en');\n      }\n    });", 
            "title": "Installation"
        }, 
        {
            "location": "/tap-i18n/#utilisation-dans-les-templates", 
            "text": "div class= btn {{_  sign_up }} /div \n\n    # Avec param\u00e8tre dans la chaine \u00e0 traduire\n     template name= messages_today \n       p {{_  inbox_status   Daniel  count=18}} /p \n     /template \n\n    # Exemple de fichier de lang - i18n/en.i18n.json\n    {\n       inbox_status :  Hey, %s! You have received one new message today. ,\n       inbox_status_plural :  Hey, %s! You have received %s new messages today. \n    }", 
            "title": "Utilisation dans les templates"
        }, 
        {
            "location": "/tap-i18n/#utilisation-dans-les-scripts", 
            "text": "Config = {\n      name: 'Title',\n      title: function() {\n        return TAPi18n.__('configTitle');\n      },\n      subtitle: function() {\n        return TAPi18n.__('configSubtitle');\n      },\n    }", 
            "title": "Utilisation dans les scripts"
        }, 
        {
            "location": "/tap-i18n/#extensions", 
            "text": "tap-i18n-ui  https://github.com/TAPevents/tap-i18n-ui      meteor add tap:i18n-ui\n\n    {{  i18n_dropdown}}             // Bootstrap\n    {{  i18n_dropdown_semantic}}    // Semantic UI  tap-i18n-db  https://github.com/TAPevents/tap-i18n-db  meteor add tap:i18n-db  \n    CountryLang = new TAPi18n.Collection( country_lang );\n\n    // Cr\u00e9ation du document et d'une ou plusieurs traductions\n    id = CountryLang.insertTranslations({country:  fr , name:  Fran\u00e7ais }, {\n        en: {\n            name:  French \n        }\n    });\n\n    # Mise \u00e0 jour d'un document existant\n    CountryLang.updateTranslations(id, {\n        de: {\n            name:  Franz\u00f6sisch\u043b\u0430 \n        }\n    });\n\n    # Publication et souscription\n    if (Meteor.isServer) {\n        TAPi18n.publish( countrylang , function (query) {\n            return CountryLang.i18nFind(query);\n        });\n    }\n\n    if (Meteor.isClient) {\n        TAPi18n.subscribe( countrylang , {});\n    }", 
            "title": "Extensions"
        }, 
        {
            "location": "/publish-counts/", 
            "text": "publish-counts\n\n\nG\u00e8re des compteurs de collection pour des statistiques par exemple.\n\n\nhttps://github.com/percolatestudio/publish-counts\n\n\n$ meteor add tmeasday:publish-counts\n\n\n\n\nD\u00e9finition d'une collection:\n\n\n\nPlayers = new Mongo.Collection(\nplayers\n);\n\n\n\n\n\nCot\u00e9 Server:\n\n\n\nMeteor.publish('stats', function() {\n    Counts.publish(this, 'player_total', Players.find());\n});\n\n\n\n\n\nCot\u00e9 Client:\n\n\n\nMeteor.subscribe('stats');\n\n\n\n\n\n\n\ntemplate name=\nstats\n\n    \nspan\nTotal players : {{getPublishedCount \nplayer_total\n}}\n/span\n\n\n/template", 
            "title": "publish-counts"
        }, 
        {
            "location": "/publish-counts/#publish-counts", 
            "text": "G\u00e8re des compteurs de collection pour des statistiques par exemple.  https://github.com/percolatestudio/publish-counts  $ meteor add tmeasday:publish-counts  D\u00e9finition d'une collection:  \nPlayers = new Mongo.Collection( players );  Cot\u00e9 Server:  \nMeteor.publish('stats', function() {\n    Counts.publish(this, 'player_total', Players.find());\n});  Cot\u00e9 Client:  \nMeteor.subscribe('stats');   template name= stats \n     span Total players : {{getPublishedCount  player_total }} /span  /template", 
            "title": "publish-counts"
        }, 
        {
            "location": "/sikka/", 
            "text": "sikka\n\n\n\n\nSources\n\n\nAtmosphere\n\n\n\n\nDocumentation\n\n\n\n\n\n\nGoogle ReCaptcha\n\n\n\n\n\n\nFonctionnalit\u00e9s\n\n\n\n\nFirewall app - anti ddos\n\n\nConfigurable par variables d'environnement\n\n\nLimitation request par ip\n\n\nCaptcha\n\n\nG\u00e8re la r\u00e9cup\u00e9ration de l'ip r\u00e9elle derri\u00e8re un proxy comme Nginx\n\n\n\n\nInstallation\n\n\nmeteor add meteorhacks:sikka\n\n\n\nPackages ajout\u00e9s:\n\n\nchuangbo:cookie      added, version 1.1.0\nmeteorhacks:meteorx  added, version 1.3.1\nmeteorhacks:picker   added, version 1.0.2\nmeteorhacks:sikka    added, version 1.0.1\n\n\n\nConfiguration par l'environnement\n\n\nenv: SIKKA_PER_IP_MAX_RPS\nsettings: sikka.rateLimits.perIp\ndefault: 20\n\nenv: SIKKA_BLOCK_IP_FOR_MILLIS\nsettings: sikka.times.blockIpFor\ndefault: 120000\n\nSIKKA_CAPTCHA_SITE_KEY\nsikka.captcha.siteKey\n\nSIKKA_CAPTCHA_SECRET\nsikka.captcha.secret\n\nSIKKA_PER_HUMAN_MAX_RPS\nsikka.times.blockIpFor\nIP Rate Limit\n\nSIKKA_HUMAN_LIVES_UPTO_MILLIS\nsikka.times.humanLivesUpto\n3600000\n\n\n\nConfiguration par settings.json\n\n\n{\n  \"sikka\": {\n       \"captcha\": {\n           \"siteKey\": \"your_new_site_key\",\n           \"secret\":  \"your_new_secret_key\"\n       }\n  }\n}", 
            "title": "S\u00e9curit\u00e9"
        }, 
        {
            "location": "/sikka/#sikka", 
            "text": "Sources  Atmosphere   Documentation    Google ReCaptcha    Fonctionnalit\u00e9s   Firewall app - anti ddos  Configurable par variables d'environnement  Limitation request par ip  Captcha  G\u00e8re la r\u00e9cup\u00e9ration de l'ip r\u00e9elle derri\u00e8re un proxy comme Nginx", 
            "title": "sikka"
        }, 
        {
            "location": "/sikka/#installation", 
            "text": "meteor add meteorhacks:sikka  Packages ajout\u00e9s:  chuangbo:cookie      added, version 1.1.0\nmeteorhacks:meteorx  added, version 1.3.1\nmeteorhacks:picker   added, version 1.0.2\nmeteorhacks:sikka    added, version 1.0.1", 
            "title": "Installation"
        }, 
        {
            "location": "/sikka/#configuration-par-lenvironnement", 
            "text": "env: SIKKA_PER_IP_MAX_RPS\nsettings: sikka.rateLimits.perIp\ndefault: 20\n\nenv: SIKKA_BLOCK_IP_FOR_MILLIS\nsettings: sikka.times.blockIpFor\ndefault: 120000\n\nSIKKA_CAPTCHA_SITE_KEY\nsikka.captcha.siteKey\n\nSIKKA_CAPTCHA_SECRET\nsikka.captcha.secret\n\nSIKKA_PER_HUMAN_MAX_RPS\nsikka.times.blockIpFor\nIP Rate Limit\n\nSIKKA_HUMAN_LIVES_UPTO_MILLIS\nsikka.times.humanLivesUpto\n3600000", 
            "title": "Configuration par l'environnement"
        }, 
        {
            "location": "/sikka/#configuration-par-settingsjson", 
            "text": "{\n  \"sikka\": {\n       \"captcha\": {\n           \"siteKey\": \"your_new_site_key\",\n           \"secret\":  \"your_new_secret_key\"\n       }\n  }\n}", 
            "title": "Configuration par settings.json"
        }, 
        {
            "location": "/plugins-a-etudier/", 
            "text": "Plugins A etudier\n\n\nhttps://atmospherejs.com/zimme/iron-router-auth\n\n\nflash-messages\n\n\n\n\nhttps://github.com/camilosw/flash-messages\n\n\nhttps://atmospherejs.com/mrt/flash-messages\n\n\nhttps://github.com/JamesLefrere/meteor-flash-messages-semantic-ui\n\n\n\n\nInstallation:\n\n\n$ meteor add jameslefrere:flash-messages-semantic-ui\n\n\n\nConfiguration:\n\n\nFlashMessages.configure({\n    autoHide: true,\n    hideDelay: 5000,\n    autoScroll: true\n});\n\n\n\nUsage:\n\n\n{{\n flashMessages}}\n\nFlashMessages.sendWarning(\"Message\");\nFlashMessages.sendError(\"Message\");\nFlashMessages.sendSuccess(\"Message\");\nFlashMessages.sendInfo(\"Message\");\n\nFlashMessages.sendInfo([\"Message 1\", \"Message 2\", \"Message 3\"]);\n\nFlashMessages.clear();\n\nFlashMessages.sendWarning(\"Message\", { autoHide: false });\nFlashMessages.sendError(\"Message\", { hideDelay: 2000 });\nFlashMessages.sendSuccess(\"Message\", { autoHide: true, hideDelay: 8000 });\n\n\n\nGraphique HighCharts\n\n\n\n\nhttps://github.com/MaazAli/Meteor-HighCharts\n\n\nhttp://highcharts-demo.meteor.com/\n\n\nhttps://github.com/jhuenges/highcharts-demo\n\n\nhttps://github.com/MaazAli/highcharts-gauge\n\n\nhttps://github.com/MaazAli/highcharts-3d\n\n\n\n\nInstallation:\n\n\n$ meteor add maazalik:highcharts\n\n\n\nTemplate:\n\n\n// myTempmlate.html\n{{\n highchartsHelper chartId=\"test\" chartWidth=\"100%\" charHeight=\"100%\" chartObject=topGenresChart}}\n\n\n\nScripts::\n\n\n// myTemplate.js\nTemplate.myTemplate.topGenresChart = function() {\n    return {\n        chart: {\n            plotBackgroundColor: null,\n            plotBorderWidth: null,\n            plotShadow: false\n        },\n        title: {\n            text: this.username + \"'s top genres\"\n        },\n        tooltip: {\n            pointFormat: '\nb\n{point.percentage:.1f}%\n/b\n'\n        },\n        plotOptions: {\n            pie: {\n                allowPointSelect: true,\n                cursor: 'pointer',\n                dataLabels: {\n                    enabled: true,\n                    format: '\nb\n{point.name}\n/b\n: {point.percentage:.1f} %',\n                    style: {\n                        color: (Highcharts.theme \n Highcharts.theme.contrastTextColor) || 'black'\n                    },\n                    connectorColor: 'silver'\n                }\n            }\n        },\n        series: [{\n            type: 'pie',\n            name: 'genre',\n            data: [\n                ['Adventure',   45.0],\n                ['Action',       26.8],\n                ['Ecchi',   12.8],\n                ['Comedy',    8.5],\n                ['Yuri',     6.2]\n            ]\n        }]\n    };\n};\n\n\n\ns-alert\n\n\nFlash message\n\n\n\n\nhttps://atmospherejs.com/juliancwirko/s-alert\n\n\nhttp://s-alert.meteor.com/\n\n\nhttp://s-alert-demo.meteor.com/\n\n\n\n\nhttps://github.com/juliancwirko/meteor-s-alert/\n\n\n\n\n\n\nutilise une collection null: sAlert.collection\n\n\n$ meteor add juliancwirko:s-alert\n\n\neffets:\n    scale - meteor add juliancwirko:s-alert-scale\n    slide - meteor add juliancwirko:s-alert-slide\n    genie - meteor add juliancwirko:s-alert-genie\n    jelly - meteor add juliancwirko:s-alert-jelly\n    flip - meteor add juliancwirko:s-alert-flip\n    bouncyflip - meteor add juliancwirko:s-alert-bouncyflip\n\n\nstackslide - meteor add juliancwirko:s-alert-stackslide\n    essai\n\n\n\npositions\n    top-left\n    bottom-left\n    top-right (default)\n    bottom-right\n    top (full width)\n    bottom (full width)\n\n\n\n    {{\n sAlert}}\n\n\n\nclient:\n\n\nMeteor.startup(function () {\n    sAlert.config({\n        effect: 'stackslide',\n        position: 'top',\n        timeout: 5000,\n        html: false,\n        onRouteClose: true,\n        stack: true,\n        offset: 0\n    });\n});\n\n\nsAlert.error('Your message', configOverwrite);", 
            "title": "En cours d'\u00e9valuation"
        }, 
        {
            "location": "/plugins-a-etudier/#plugins-a-etudier", 
            "text": "https://atmospherejs.com/zimme/iron-router-auth", 
            "title": "Plugins A etudier"
        }, 
        {
            "location": "/plugins-a-etudier/#flash-messages", 
            "text": "https://github.com/camilosw/flash-messages  https://atmospherejs.com/mrt/flash-messages  https://github.com/JamesLefrere/meteor-flash-messages-semantic-ui   Installation:  $ meteor add jameslefrere:flash-messages-semantic-ui  Configuration:  FlashMessages.configure({\n    autoHide: true,\n    hideDelay: 5000,\n    autoScroll: true\n});  Usage:  {{  flashMessages}}\n\nFlashMessages.sendWarning(\"Message\");\nFlashMessages.sendError(\"Message\");\nFlashMessages.sendSuccess(\"Message\");\nFlashMessages.sendInfo(\"Message\");\n\nFlashMessages.sendInfo([\"Message 1\", \"Message 2\", \"Message 3\"]);\n\nFlashMessages.clear();\n\nFlashMessages.sendWarning(\"Message\", { autoHide: false });\nFlashMessages.sendError(\"Message\", { hideDelay: 2000 });\nFlashMessages.sendSuccess(\"Message\", { autoHide: true, hideDelay: 8000 });", 
            "title": "flash-messages"
        }, 
        {
            "location": "/plugins-a-etudier/#graphique-highcharts", 
            "text": "https://github.com/MaazAli/Meteor-HighCharts  http://highcharts-demo.meteor.com/  https://github.com/jhuenges/highcharts-demo  https://github.com/MaazAli/highcharts-gauge  https://github.com/MaazAli/highcharts-3d   Installation:  $ meteor add maazalik:highcharts  Template:  // myTempmlate.html\n{{  highchartsHelper chartId=\"test\" chartWidth=\"100%\" charHeight=\"100%\" chartObject=topGenresChart}}  Scripts::  // myTemplate.js\nTemplate.myTemplate.topGenresChart = function() {\n    return {\n        chart: {\n            plotBackgroundColor: null,\n            plotBorderWidth: null,\n            plotShadow: false\n        },\n        title: {\n            text: this.username + \"'s top genres\"\n        },\n        tooltip: {\n            pointFormat: ' b {point.percentage:.1f}% /b '\n        },\n        plotOptions: {\n            pie: {\n                allowPointSelect: true,\n                cursor: 'pointer',\n                dataLabels: {\n                    enabled: true,\n                    format: ' b {point.name} /b : {point.percentage:.1f} %',\n                    style: {\n                        color: (Highcharts.theme   Highcharts.theme.contrastTextColor) || 'black'\n                    },\n                    connectorColor: 'silver'\n                }\n            }\n        },\n        series: [{\n            type: 'pie',\n            name: 'genre',\n            data: [\n                ['Adventure',   45.0],\n                ['Action',       26.8],\n                ['Ecchi',   12.8],\n                ['Comedy',    8.5],\n                ['Yuri',     6.2]\n            ]\n        }]\n    };\n};", 
            "title": "Graphique HighCharts"
        }, 
        {
            "location": "/plugins-a-etudier/#s-alert", 
            "text": "Flash message   https://atmospherejs.com/juliancwirko/s-alert  http://s-alert.meteor.com/  http://s-alert-demo.meteor.com/   https://github.com/juliancwirko/meteor-s-alert/    utilise une collection null: sAlert.collection  $ meteor add juliancwirko:s-alert  effets:\n    scale - meteor add juliancwirko:s-alert-scale\n    slide - meteor add juliancwirko:s-alert-slide\n    genie - meteor add juliancwirko:s-alert-genie\n    jelly - meteor add juliancwirko:s-alert-jelly\n    flip - meteor add juliancwirko:s-alert-flip\n    bouncyflip - meteor add juliancwirko:s-alert-bouncyflip  stackslide - meteor add juliancwirko:s-alert-stackslide\n    essai  positions\n    top-left\n    bottom-left\n    top-right (default)\n    bottom-right\n    top (full width)\n    bottom (full width)  \n    {{  sAlert}}", 
            "title": "s-alert"
        }, 
        {
            "location": "/plugins-a-etudier/#client", 
            "text": "Meteor.startup(function () {\n    sAlert.config({\n        effect: 'stackslide',\n        position: 'top',\n        timeout: 5000,\n        html: false,\n        onRouteClose: true,\n        stack: true,\n        offset: 0\n    });\n});  sAlert.error('Your message', configOverwrite);", 
            "title": "client:"
        }, 
        {
            "location": "/email/", 
            "text": "Meteor et les mails\n\n\nIntroduction\n\n\nLe serveur SMTP \u00e0 utiliser pour l'envoi de mail par Meteor semble ne se configurer que par la variable d'environnement MAIL_URL\n\n\n$ export MAIL_URL='smtp://user:password@mailhost:port/'\n\n\n\n\nConfiguration de la variable MAIL_URL au d\u00e9marrage\n\n\n// server/bootstrap.js\n\nMeteor.startup(function () {\n    // Donn\u00e9es provenant de MongoDB ou d'ailleurs\n    smtp = {\n        username: 'xxxx',\n        password: 'xxxx',\n        server:   'smtp.gmail.com',\n        port: 587 //25\n    };\n    process.env.MAIL_URL = 'smtp://' + encodeURIComponent(smtp.username) + ':' + encodeURIComponent(smtp.password) + '@' + encodeURIComponent(smtp.server) + ':' + smtp.port;\n});", 
            "title": "Mails"
        }, 
        {
            "location": "/email/#meteor-et-les-mails", 
            "text": "", 
            "title": "Meteor et les mails"
        }, 
        {
            "location": "/email/#introduction", 
            "text": "Le serveur SMTP \u00e0 utiliser pour l'envoi de mail par Meteor semble ne se configurer que par la variable d'environnement MAIL_URL  $ export MAIL_URL='smtp://user:password@mailhost:port/'", 
            "title": "Introduction"
        }, 
        {
            "location": "/email/#configuration-de-la-variable-mail_url-au-demarrage", 
            "text": "// server/bootstrap.js\n\nMeteor.startup(function () {\n    // Donn\u00e9es provenant de MongoDB ou d'ailleurs\n    smtp = {\n        username: 'xxxx',\n        password: 'xxxx',\n        server:   'smtp.gmail.com',\n        port: 587 //25\n    };\n    process.env.MAIL_URL = 'smtp://' + encodeURIComponent(smtp.username) + ':' + encodeURIComponent(smtp.password) + '@' + encodeURIComponent(smtp.server) + ':' + smtp.port;\n});", 
            "title": "Configuration de la variable MAIL_URL au d\u00e9marrage"
        }, 
        {
            "location": "/links/", 
            "text": "Liens sur Meteor\n\n\nSites officiels\n\n\n\n\nmeteor.com\n\n\nDocumentation\n\n\nD\u00e9pot Meteor\n\n\nPlugins\n\n\n\n\nTutoriels - Fran\u00e7ais\n\n\n\n\nhttp://fr.discovermeteor.com/pdf\n\n\nhttp://openclassrooms.com/courses/creez-une-single-page-app-avec-node-js-et-meteor\n\n\nhttp://www.etiennebalit.com/2013/04/meteor-b-a-ba-et-bonnes-pratiques/\n\n\n\n\nTutoriels - Anglais\n\n\n\n\nhttp://iron-meteor.github.io/iron-router/#route-controllers\n\n\nhttp://robertdickert.com/blog/2014/05/09/set-up-navigation-with-iron-router-and-bootstrap/\n\n\nhttps://github.com/awatson1978/meteor-cookbook\n\n\nhttp://www.webtempest.com/meteor-js-autoform-tutorial\n\n\nhttps://medium.com/@s_eschweiler/how-to-build-web-apps-ultra-fast-with-meteor-iron-scaffolding-and-automatic-form-generation-11734eda8e67\n\n\n\n\nLes librairies les plus utiles\n\n\n\n\nhttps://github.com/aldeed/meteor-simple-schema\n\n\nhttps://github.com/aldeed/meteor-autoform\n\n\nhttps://github.com/aldeed/meteor-collection2\n\n\n\n\nEnvironnement de d\u00e9veloppement - IDE\n\n\nJe n'ai pas encore trouv\u00e9 l'environnement id\u00e9al pour Meteor.\n\n\nJ'ai laiss\u00e9 Eclipse de cot\u00e9 car je suis sous Windows et plusieurs d\u00e9pendances Node.js ou Meteor ne fonctionnent pas ou sont compliqu\u00e9s \u00e0 installer.\n\n\nPour l'instant, j'ai mis au moins une image Docker avec Cloud9, l'IDE en ligne et Meteor.\n\n\nIl est disponible sur https://github.com/srault95/meteor-app-base\n\n\n\n\nLes choix d'IDE sont:\n\n\nCloud9 - http://c9.io/\n\n\nWebStorm - https://www.jetbrains.com/webstorm/\n\n\nAtom - https://atom.io\n\n\n\n\n\n\n\n\nQuelques projets a suivre\n\n\nmeteor kitchen\n\n\nhttp://www.meteorkitchen.com\n\n\nOrion CMS\n\n\nhttp://orionjs.org\n\n\nLaunch Docker\n\n\nhttps://github.com/ongoworks/launchdock", 
            "title": "Liens"
        }, 
        {
            "location": "/links/#liens-sur-meteor", 
            "text": "", 
            "title": "Liens sur Meteor"
        }, 
        {
            "location": "/links/#sites-officiels", 
            "text": "meteor.com  Documentation  D\u00e9pot Meteor  Plugins", 
            "title": "Sites officiels"
        }, 
        {
            "location": "/links/#tutoriels-francais", 
            "text": "http://fr.discovermeteor.com/pdf  http://openclassrooms.com/courses/creez-une-single-page-app-avec-node-js-et-meteor  http://www.etiennebalit.com/2013/04/meteor-b-a-ba-et-bonnes-pratiques/", 
            "title": "Tutoriels - Fran\u00e7ais"
        }, 
        {
            "location": "/links/#tutoriels-anglais", 
            "text": "http://iron-meteor.github.io/iron-router/#route-controllers  http://robertdickert.com/blog/2014/05/09/set-up-navigation-with-iron-router-and-bootstrap/  https://github.com/awatson1978/meteor-cookbook  http://www.webtempest.com/meteor-js-autoform-tutorial  https://medium.com/@s_eschweiler/how-to-build-web-apps-ultra-fast-with-meteor-iron-scaffolding-and-automatic-form-generation-11734eda8e67", 
            "title": "Tutoriels - Anglais"
        }, 
        {
            "location": "/links/#les-librairies-les-plus-utiles", 
            "text": "https://github.com/aldeed/meteor-simple-schema  https://github.com/aldeed/meteor-autoform  https://github.com/aldeed/meteor-collection2", 
            "title": "Les librairies les plus utiles"
        }, 
        {
            "location": "/links/#environnement-de-developpement-ide", 
            "text": "Je n'ai pas encore trouv\u00e9 l'environnement id\u00e9al pour Meteor.  J'ai laiss\u00e9 Eclipse de cot\u00e9 car je suis sous Windows et plusieurs d\u00e9pendances Node.js ou Meteor ne fonctionnent pas ou sont compliqu\u00e9s \u00e0 installer.  Pour l'instant, j'ai mis au moins une image Docker avec Cloud9, l'IDE en ligne et Meteor.  Il est disponible sur https://github.com/srault95/meteor-app-base   Les choix d'IDE sont:  Cloud9 - http://c9.io/  WebStorm - https://www.jetbrains.com/webstorm/  Atom - https://atom.io", 
            "title": "Environnement de d\u00e9veloppement - IDE"
        }, 
        {
            "location": "/links/#quelques-projets-a-suivre", 
            "text": "meteor kitchen  http://www.meteorkitchen.com  Orion CMS  http://orionjs.org  Launch Docker  https://github.com/ongoworks/launchdock", 
            "title": "Quelques projets a suivre"
        }, 
        {
            "location": "/tips/", 
            "text": "Tips\n\n\nAffecter automatiquement le user.id au document\n\n\n\nDockerImages.before.insert(function (userId, doc) {\n    doc.userId = Meteor.userId();\n});", 
            "title": "Tips"
        }, 
        {
            "location": "/tips/#tips", 
            "text": "", 
            "title": "Tips"
        }, 
        {
            "location": "/tips/#affecter-automatiquement-le-userid-au-document", 
            "text": "DockerImages.before.insert(function (userId, doc) {\n    doc.userId = Meteor.userId();\n});", 
            "title": "Affecter automatiquement le user.id au document"
        }, 
        {
            "location": "/faq/", 
            "text": "FAQ\n\n\nMeteor est t'il n\u00e9cessaire sur le serveur de production, une fois publi\u00e9 l'application ?\n\n\nNon, la commande \nmeteor build\n g\u00e9n\u00e8re un projet Node.js autonome.\n\n\nEst-ce que je peux publier mon application sur meteor.com mais utiliser une adresse avec mon domaine ?\n\n\nOui, il suffit d'ajouter un enregistrement CNAME dans le dns de votre domaine\n\n\nExemple:\n\n\nmyapp.mydomain.com  CNAME   myapp-v1.meteor.com.", 
            "title": "Faq"
        }, 
        {
            "location": "/faq/#faq", 
            "text": "Meteor est t'il n\u00e9cessaire sur le serveur de production, une fois publi\u00e9 l'application ?  Non, la commande  meteor build  g\u00e9n\u00e8re un projet Node.js autonome.  Est-ce que je peux publier mon application sur meteor.com mais utiliser une adresse avec mon domaine ?  Oui, il suffit d'ajouter un enregistrement CNAME dans le dns de votre domaine  Exemple:  myapp.mydomain.com  CNAME   myapp-v1.meteor.com.", 
            "title": "FAQ"
        }
    ]
}